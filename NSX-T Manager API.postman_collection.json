{
	"info": {
		"_postman_id": "41cab4fe-20f6-47c5-8438-ad150675a14c",
		"name": "NSX-T Manager API",
		"description": "VMware NSX-T Manager REST API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "serviceinsertion",
			"item": [
				{
					"name": "Get NSgroups for a given ServiceProfile.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-profiles/:service-profile-id/nsgroups",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-profiles",
								":service-profile-id",
								"nsgroups"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "service-profile-id",
									"value": "{{service-profile-id}}"
								}
							]
						},
						"description": "Returns list of NSGroups used in Service Insertion rules for a given Service Profile.\n"
					},
					"response": []
				},
				{
					"name": "Get service manager",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/service-managers/:service-manager-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"service-managers",
								":service-manager-id"
							],
							"variable": [
								{
									"key": "service-manager-id",
									"value": "{{service-manager-id}}"
								}
							]
						},
						"description": "Retrieve service-manager details like name, username, password, vendor ID, thumbprint for a given ID."
					},
					"response": []
				},
				{
					"name": "Update service manager",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/service-managers/:service-manager-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"service-managers",
								":service-manager-id"
							],
							"variable": [
								{
									"key": "service-manager-id",
									"value": "{{service-manager-id}}"
								}
							]
						},
						"description": "Update service-manager which is registered with NSX with basic details like name, username, password."
					},
					"response": []
				},
				{
					"name": "Delete service manager",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/service-managers/:service-manager-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"service-managers",
								":service-manager-id"
							],
							"variable": [
								{
									"key": "service-manager-id",
									"value": "{{service-manager-id}}"
								}
							]
						},
						"description": "Delete service-manager which is registered with NSX with basic details like name, username, password."
					},
					"response": []
				},
				{
					"name": "Get an Existing Section, Including Rules",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/sections/:section-id?action=list_with_rules",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"sections",
								":section-id"
							],
							"query": [
								{
									"key": "action",
									"value": "list_with_rules"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Returns serviceinsertion section information with rules for a section identifier.\nWhen invoked on a section with a large number of rules, this API is supported\nonly at low rates of invocation (not more than 4-5 times per minute). The\ntypical latency of this API with about 1024 rules is about 4-5 seconds. This\nAPI should not be invoked with large payloads at automation speeds. More than\n50 rules are not supported.\n\nInstead, to read serviceinsertion rules, use:\nGET /api/v1/serviceinsertion/sections/&lt;section-id&gt;/rules with the appropriate\npage_size.\n"
					},
					"response": []
				},
				{
					"name": "Get Service-Instance status for Service.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-instances/:service-instance-id/status?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-instances",
								":service-instance-id",
								"status"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "service-instance-id",
									"value": "{{service-instance-id}}"
								}
							]
						},
						"description": "Returns status of one instance of a deployed partner service using service insertion framework.\nBy default this API would return cached status. Caching happens every 3 minutes.\nFor realtime status, query parameter \"source=realtime\" needs to be passed.\n"
					},
					"response": []
				},
				{
					"name": "List all Service Profiles of a Service.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-profiles",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-profiles"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								}
							]
						},
						"description": "List all service profiles of a service.\n"
					},
					"response": []
				},
				{
					"name": "Add ServiceProfile for a given Service.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-profiles",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-profiles"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								}
							]
						},
						"description": "Adds a new service profile.\n"
					},
					"response": []
				},
				{
					"name": "Get Service-Instance for Service.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-instances/:service-instance-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-instances",
								":service-instance-id"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "service-instance-id",
									"value": "{{service-instance-id}}"
								}
							]
						},
						"description": "Returns Service-Instance information for a given Service-Insertion Service.\n"
					},
					"response": []
				},
				{
					"name": "Update an existing Service-Instance.",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-instances/:service-instance-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-instances",
								":service-instance-id"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "service-instance-id",
									"value": "{{service-instance-id}}"
								}
							]
						},
						"description": "Modifies an existing Service-Instance for a given Service-Insertion Service.\n"
					},
					"response": []
				},
				{
					"name": "Delete an existing Service-Instance",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-instances/:service-instance-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-instances",
								":service-instance-id"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "service-instance-id",
									"value": "{{service-instance-id}}"
								}
							]
						},
						"description": "Delete existing Service-Instance for a given Service-Insertion Service.\n"
					},
					"response": []
				},
				{
					"name": "Get a particular service deployment status.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-deployments/:service-deployment-id/status?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-deployments",
								":service-deployment-id",
								"status"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "service-deployment-id",
									"value": "{{service-deployment-id}}"
								}
							]
						},
						"description": "Returns current status of the deployment of partner service. Available only for EPP Services.\nBy default this API would return cached status. Caching happens every 3 minutes.\nFor realtime status, query parameter \"source=realtime\" needs to be passed.\n"
					},
					"response": []
				},
				{
					"name": "List all InstanceEndpoints of a Service Instance.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-instances/:service-instance-id/instance-endpoints",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-instances",
								":service-instance-id",
								"instance-endpoints"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "service-instance-id",
									"value": "{{service-instance-id}}"
								}
							]
						},
						"description": "List all InstanceEndpoints of a service instance.\n"
					},
					"response": []
				},
				{
					"name": "Add an InstanceEndpoint for a Service Instance",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-instances/:service-instance-id/instance-endpoints",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-instances",
								":service-instance-id",
								"instance-endpoints"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "service-instance-id",
									"value": "{{service-instance-id}}"
								}
							]
						},
						"description": "Adds a new instance endpoint. It belongs to one service instance and is attached\nto one service attachment. It represents a redirection target for a Rule.\n"
					},
					"response": []
				},
				{
					"name": "Upgrade service VMs using newer version of OVF",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-instances/:service-instance-id/instance-runtimes?action=upgrade",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-instances",
								":service-instance-id",
								"instance-runtimes"
							],
							"query": [
								{
									"key": "action",
									"value": "upgrade"
								}
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "service-instance-id",
									"value": "{{service-instance-id}}"
								}
							]
						},
						"description": "Upgrade service VMs using newer version of OVF.\n\nIn case of HA, the stand-by service VM will be upgrade first. Once it has been upgraded,\nit switches to be the Active one and then the other VM will be upgrade.\n"
					},
					"response": []
				},
				{
					"name": "Update an Existing Section with Rules",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/sections/:section-id?action=revise_with_rules?id={{id}}&operation=insert_top",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"sections",
								":section-id"
							],
							"query": [
								{
									"key": "action",
									"value": "revise_with_rules?id={{id}}"
								},
								{
									"key": "operation",
									"value": "insert_top"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Modifies an existing serviceinsertion section along with its relative position\namong other serviceinsertion sections with rules. When invoked on a large number\nof rules, this API is supported only at low rates of invocation (not more\nthan 2 times per minute). The typical latency of this API with about 1024\nrules is about 15 seconds in a cluster setup. This API should not be\ninvoked with large payloads at automation speeds.\n\nInstead, to move a section above or below another section, use:\nPOST /api/v1/serviceinsertion/sections/&lt;section-id&gt;?action=revise\n\nTo modify rules, use:\nPUT /api/v1/serviceinsertion/sections/&lt;section-id&gt;/rules/&lt;rule-id&gt;\n"
					},
					"response": []
				},
				{
					"name": "Get an Existing Section",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/sections/:section-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"sections",
								":section-id"
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Returns information about serviceinsertion section for the identifier.\n"
					},
					"response": []
				},
				{
					"name": "Update an Existing Section",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/sections/:section-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"sections",
								":section-id"
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Modifies the specified section, but does not modify the section's associated rules.\n"
					},
					"response": []
				},
				{
					"name": "Delete an Existing Section and Its Associated Rules",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/sections/:section-id?cascade=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"sections",
								":section-id"
							],
							"query": [
								{
									"key": "cascade",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Removes serviceinsertion section from the system. ServiceInsertion section with\nrules can only be deleted by passing \"cascade=true\" parameter.\n"
					},
					"response": []
				},
				{
					"name": "Get all Service-Instances present in system",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/service-instances?deployed_to={{deployed_to}}&service_deployment_id={{service_deployment_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"service-instances"
							],
							"query": [
								{
									"key": "deployed_to",
									"value": "{{deployed_to}}"
								},
								{
									"key": "service_deployment_id",
									"value": "{{service_deployment_id}}"
								}
							]
						},
						"description": "Returns all Service-Instance(s) of all Services present in system.\nWhen request parameter (deployed_to) is provided as a part of request,\nit will filter out Service-Instances accordingly.\nCurrently only Logical Router id is supported as deployed_to value;\n"
					},
					"response": []
				},
				{
					"name": "Upgrade all VMs part of this service deployment using newer version of OVF",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-deployments/:service-deployment-id?action=upgrade",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-deployments",
								":service-deployment-id"
							],
							"query": [
								{
									"key": "action",
									"value": "upgrade"
								}
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "service-deployment-id",
									"value": "{{service-deployment-id}}"
								}
							]
						},
						"description": "Upgrade all VMs part of this service deployment using newer version of\nOVF. New OVF version isn't expected in this call because it is\npublished by the partner by updating the service definition. This API\nsimply upgrades to the latest version published by the partner.\n"
					},
					"response": []
				},
				{
					"name": "Deploy and set up service VMs either as standalone or HA",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-instances/:service-instance-id/instance-runtimes?action=deploy",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-instances",
								":service-instance-id",
								"instance-runtimes"
							],
							"query": [
								{
									"key": "action",
									"value": "deploy"
								}
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "service-instance-id",
									"value": "{{service-instance-id}}"
								}
							]
						},
						"description": "Deploys one service VM as standalone, or two service VMs as HA where one VM is active and another one is standby.\n\nDuring the deployment of service VMs, service will be set up based on deployment events using callbacks.\n"
					},
					"response": []
				},
				{
					"name": "Get All the Rules for a Section",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/sections/:section-id/rules?applied_tos={{applied_tos}}&cursor={{cursor}}&destinations={{destinations}}&filter_type=FILTER&included_fields={{included_fields}}&page_size=1000&services={{services}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&sources={{sources}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"sections",
								":section-id",
								"rules"
							],
							"query": [
								{
									"key": "applied_tos",
									"value": "{{applied_tos}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "destinations",
									"value": "{{destinations}}"
								},
								{
									"key": "filter_type",
									"value": "FILTER"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "services",
									"value": "{{services}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sources",
									"value": "{{sources}}"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Return all serviceinsertion rule(s) information for a given serviceinsertion section.\n"
					},
					"response": []
				},
				{
					"name": "Add a Single Rule in a Section",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/sections/:section-id/rules?id={{id}}&operation=insert_top",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"sections",
								":section-id",
								"rules"
							],
							"query": [
								{
									"key": "id",
									"value": "{{id}}"
								},
								{
									"key": "operation",
									"value": "insert_top"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Adds a new serviceinsertion rule in existing serviceinsertion section.\n"
					},
					"response": []
				},
				{
					"name": "Get Solution Config Information associated with a given service.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/solution-configs",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"solution-configs"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								}
							]
						},
						"description": "Returns Solution Config information for a given service.\n"
					},
					"response": []
				},
				{
					"name": "Add Solution Config for a given Service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/solution-configs",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"solution-configs"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								}
							]
						},
						"description": "Adds a solution config. Solution Config are service level objects,\nrequired for configuring the NXGI partner Service after deployment.\n"
					},
					"response": []
				},
				{
					"name": "Get a particular service deployment.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-deployments/:service-deployment-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-deployments",
								":service-deployment-id"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "service-deployment-id",
									"value": "{{service-deployment-id}}"
								}
							]
						},
						"description": "Returns detail of service deployment.\n"
					},
					"response": []
				},
				{
					"name": "Update an existing Service Deployment.",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-deployments/:service-deployment-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-deployments",
								":service-deployment-id"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "service-deployment-id",
									"value": "{{service-deployment-id}}"
								}
							]
						},
						"description": "Modifies an existing Service Deployment. This will not update the already\ndeployed service instances, deployed via this deployment.\n"
					},
					"response": []
				},
				{
					"name": "Remove service deployment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-deployments/:service-deployment-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-deployments",
								":service-deployment-id"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "service-deployment-id",
									"value": "{{service-deployment-id}}"
								}
							]
						},
						"description": "Remove the service deployment. Will remove all the SVMs that were created as part of this deployment.\n"
					},
					"response": []
				},
				{
					"name": "Update an Existing Rule and Reorder the Rule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/sections/:section-id/rules/:rule-id?action=revise?id={{id}}&operation=insert_top",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"sections",
								":section-id",
								"rules",
								":rule-id"
							],
							"query": [
								{
									"key": "action",
									"value": "revise?id={{id}}"
								},
								{
									"key": "operation",
									"value": "insert_top"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								},
								{
									"key": "rule-id",
									"value": "{{rule-id}}"
								}
							]
						},
						"description": "Modifies existing serviceinsertion rule along with relative position among\nother serviceinsertion rules inside a serviceinsertion section.\n"
					},
					"response": []
				},
				{
					"name": "List all VendorTemplates of a Service.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/vendor-templates?vendor_template_name={{vendor_template_name}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"vendor-templates"
							],
							"query": [
								{
									"key": "vendor_template_name",
									"value": "{{vendor_template_name}}"
								}
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								}
							]
						},
						"description": "List all vendor templates of a service.\n"
					},
					"response": []
				},
				{
					"name": "Add Vendor Template for a given Service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/vendor-templates",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"vendor-templates"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								}
							]
						},
						"description": "Adds a new vendor template. Vendor templates are service level objects,\nregistered to be used in Service Profiles.\n"
					},
					"response": []
				},
				{
					"name": "Read an Existing Rule",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/sections/:section-id/rules/:rule-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"sections",
								":section-id",
								"rules",
								":rule-id"
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								},
								{
									"key": "rule-id",
									"value": "{{rule-id}}"
								}
							]
						},
						"description": "Return existing serviceinsertion rule information in a serviceinsertion section.\n"
					},
					"response": []
				},
				{
					"name": "Update an Existing Rule",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/sections/:section-id/rules/:rule-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"sections",
								":section-id",
								"rules",
								":rule-id"
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								},
								{
									"key": "rule-id",
									"value": "{{rule-id}}"
								}
							]
						},
						"description": "Modifies existing serviceinsertion rule in a serviceinsertion section.\n"
					},
					"response": []
				},
				{
					"name": "Delete an Existing Rule",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/sections/:section-id/rules/:rule-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"sections",
								":section-id",
								"rules",
								":rule-id"
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								},
								{
									"key": "rule-id",
									"value": "{{rule-id}}"
								}
							]
						},
						"description": "Delete existing serviceinsertion rule in a serviceinsertion section.\n"
					},
					"response": []
				},
				{
					"name": "Update an Existing Section, Including Its Position",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/sections/:section-id?action=revise?id={{id}}&operation=insert_top",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"sections",
								":section-id"
							],
							"query": [
								{
									"key": "action",
									"value": "revise?id={{id}}"
								},
								{
									"key": "operation",
									"value": "insert_top"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Modifies an existing serviceinsertion section along with its relative position\namong other serviceinsertion sections in the system.\n"
					},
					"response": []
				},
				{
					"name": "Get a particular service chain.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/service-chains/:service-chain-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"service-chains",
								":service-chain-id"
							],
							"variable": [
								{
									"key": "service-chain-id",
									"value": "{{service-chain-id}}"
								}
							]
						},
						"description": "Returns detailed service chain information.\n"
					},
					"response": []
				},
				{
					"name": "Delete a Service Chain.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/service-chains/:service-chain-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"service-chains",
								":service-chain-id"
							],
							"variable": [
								{
									"key": "service-chain-id",
									"value": "{{service-chain-id}}"
								}
							]
						},
						"description": "Delete a particular service chain.\n"
					},
					"response": []
				},
				{
					"name": "Get all service deployments for the given service id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-deployments",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-deployments"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								}
							]
						},
						"description": "Returns the list of deployments for the given service\n"
					},
					"response": []
				},
				{
					"name": "Deploys a particular service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-deployments",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-deployments"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								}
							]
						},
						"description": "This will deploy a particular service on a given cluster / host. Internally multiple service instance can be\ncreated during the deployment. If there are no issues in the parameters, the call returns immediately,\nand the service VMs will be deployed asynchronously. To get the overall status of the deployment or to get\nthe status of individual service vm, please use the deployment status APIs.\n"
					},
					"response": []
				},
				{
					"name": "Returns list of instance runtimes of service VM being deployed",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-instances/:service-instance-id/instance-runtimes",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-instances",
								":service-instance-id",
								"instance-runtimes"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "service-instance-id",
									"value": "{{service-instance-id}}"
								}
							]
						},
						"description": "Returns list of instance runtimes of service VMs being deployed for a given service instance id\n"
					},
					"response": []
				},
				{
					"name": "List service managers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/service-managers",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"service-managers"
							]
						},
						"description": "List all service managers.\n"
					},
					"response": []
				},
				{
					"name": "Register service manager",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/service-managers",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"service-managers"
							]
						},
						"description": "Register service-manager with NSX with basic details like name, username, password."
					},
					"response": []
				},
				{
					"name": "List all ServiceChainMappings.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-profiles/:service-profile-id/service-chain-mappings",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-profiles",
								":service-profile-id",
								"service-chain-mappings"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "service-profile-id",
									"value": "{{service-profile-id}}"
								}
							]
						},
						"description": "List all service chain mappings in the system for the given service profile.\n"
					},
					"response": []
				},
				{
					"name": "Get a particular vendor template for a given service.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/vendor-templates/:vendor-template-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"vendor-templates",
								":vendor-template-id"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "vendor-template-id",
									"value": "{{vendor-template-id}}"
								}
							]
						},
						"description": "Returns detailed vendor template information for a given service.\n"
					},
					"response": []
				},
				{
					"name": "Delete a particular vendor tempalte.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/vendor-templates/:vendor-template-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"vendor-templates",
								":vendor-template-id"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "vendor-template-id",
									"value": "{{vendor-template-id}}"
								}
							]
						},
						"description": "Delete vendor template information for a given service.\nPlease make sure to delete all the Service Profile(s), which\nrefer to this vendor tempalte before deleting the template itself.\n"
					},
					"response": []
				},
				{
					"name": "Get statistics for a given interface identified by the interface index",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-instances/:service-instance-id/instance-runtimes/:instance-runtime-id/interfaces/:interface_index/statistics?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-instances",
								":service-instance-id",
								"instance-runtimes",
								":instance-runtime-id",
								"interfaces",
								":interface_index",
								"statistics"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "service-instance-id",
									"value": "{{service-instance-id}}"
								},
								{
									"key": "instance-runtime-id",
									"value": "{{instance-runtime-id}}"
								},
								{
									"key": "interface_index",
									"value": "{{interface_index}}"
								}
							]
						},
						"description": "Returns statistics of a specified interface via associated logical port. If the logical port is attached to\na logical router port, query parameter \"source=realtime\" is not supported.\n"
					},
					"response": []
				},
				{
					"name": "Update maintenance mode of a service VM",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-instances/:service-instance-id/instance-runtimes/:instance-runtime-id?action={{action}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-instances",
								":service-instance-id",
								"instance-runtimes",
								":instance-runtime-id"
							],
							"query": [
								{
									"key": "action",
									"value": "{{action}}"
								}
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "service-instance-id",
									"value": "{{service-instance-id}}"
								},
								{
									"key": "instance-runtime-id",
									"value": "{{instance-runtime-id}}"
								}
							]
						},
						"description": "Set service VM in or out of maintenance mode."
					},
					"response": []
				},
				{
					"name": "Update an Existing Section, Including Its Rules",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/sections/:section-id?action=update_with_rules",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"sections",
								":section-id"
							],
							"query": [
								{
									"key": "action",
									"value": "update_with_rules"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Modifies existing serviceinsertion section along with its association with rules.\nWhen invoked on a large number of rules, this API is supported only at low\nrates of invocation (not more than 2 times per minute). The typical latency\nof this API with about 1024 rules is about 15 seconds in a cluster setup.\nThis API should not be invoked with large payloads at automation speeds.\n\nInstead, to update rule content, use:\nPUT /api/v1/serviceinsertion/sections/&lt;section-id&gt;/rules/&lt;rule-id&gt;\n"
					},
					"response": []
				},
				{
					"name": "Remove service VMs either as standalone or HA",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-instances/:service-instance-id/instance-runtimes?action=delete",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-instances",
								":service-instance-id",
								"instance-runtimes"
							],
							"query": [
								{
									"key": "action",
									"value": "delete"
								}
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "service-instance-id",
									"value": "{{service-instance-id}}"
								}
							]
						},
						"description": "Undeploy one service VM as standalone or two service VMs as HA. Associated deployment information and instance\nruntime will also be deleted once service VMs have been un-deployed successfully.\n"
					},
					"response": []
				},
				{
					"name": "Get a particular instance endpoint for a service instance.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-instances/:service-instance-id/instance-endpoints/:instance-endpoint-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-instances",
								":service-instance-id",
								"instance-endpoints",
								":instance-endpoint-id"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "service-instance-id",
									"value": "{{service-instance-id}}"
								},
								{
									"key": "instance-endpoint-id",
									"value": "{{instance-endpoint-id}}"
								}
							]
						},
						"description": "Returns detailed Endpoint information for a given InstanceEndpoint.\n"
					},
					"response": []
				},
				{
					"name": "Delete a particular InstanceEndpoint.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-instances/:service-instance-id/instance-endpoints/:instance-endpoint-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-instances",
								":service-instance-id",
								"instance-endpoints",
								":instance-endpoint-id"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "service-instance-id",
									"value": "{{service-instance-id}}"
								},
								{
									"key": "instance-endpoint-id",
									"value": "{{instance-endpoint-id}}"
								}
							]
						},
						"description": "Delete instance endpoint information for a given instace endpoint.\nPlease make sure to delete all the Service Insertion Rules, which\nrefer to this Endpoint as 'redirect_tos' target.\n"
					},
					"response": []
				},
				{
					"name": "Get an existing Service",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								}
							]
						},
						"description": "Returns information about Service-Insertion Service with the given identifier.\n"
					},
					"response": []
				},
				{
					"name": "Update an existing Service",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								}
							]
						},
						"description": "Modifies the specified Service.\n"
					},
					"response": []
				},
				{
					"name": "Delete an existing Service and the Service-Instance associated with it.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id?cascade=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id"
							],
							"query": [
								{
									"key": "cascade",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								}
							]
						},
						"description": "Removes Service-Insertion Service from the system. A Service with\nService-Instances can only be deleted by passing \"cascade=true\" parameter.\n"
					},
					"response": []
				},
				{
					"name": "Get Solution Config Information for a given solution config id.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/solution-configs/:solution-config-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"solution-configs",
								":solution-config-id"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "solution-config-id",
									"value": "{{solution-config-id}}"
								}
							]
						},
						"description": "Returns Solution Config information for a given solution config id.\n"
					},
					"response": []
				},
				{
					"name": "Updates Solution Config for a given Service",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/solution-configs/:solution-config-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"solution-configs",
								":solution-config-id"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "solution-config-id",
									"value": "{{solution-config-id}}"
								}
							]
						},
						"description": "Updates a solution config. Solution Config are service level objects,\nrequired for configuring the NXGI partner Service after deployment.\n"
					},
					"response": []
				},
				{
					"name": "Deletes solution config information.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/solution-configs/:solution-config-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"solution-configs",
								":solution-config-id"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "solution-config-id",
									"value": "{{solution-config-id}}"
								}
							]
						},
						"description": "Deletes solution config information for a given service.\n"
					},
					"response": []
				},
				{
					"name": "Get Service-Deployment state for Service.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-deployments/:service-deployment-id/state",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-deployments",
								":service-deployment-id",
								"state"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "service-deployment-id",
									"value": "{{service-deployment-id}}"
								}
							]
						},
						"description": "Returns configuration state of deployed partner service using service insertion framework.\n"
					},
					"response": []
				},
				{
					"name": "List All Service Insertion Sections",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/sections?applied_tos={{applied_tos}}&cursor={{cursor}}&destinations={{destinations}}&exclude_applied_to_type={{exclude_applied_to_type}}&filter_type=FILTER&include_applied_to_type={{include_applied_to_type}}&included_fields={{included_fields}}&page_size=1000&services={{services}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&sources={{sources}}&type=L3REDIRECT",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"sections"
							],
							"query": [
								{
									"key": "applied_tos",
									"value": "{{applied_tos}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "destinations",
									"value": "{{destinations}}"
								},
								{
									"key": "exclude_applied_to_type",
									"value": "{{exclude_applied_to_type}}"
								},
								{
									"key": "filter_type",
									"value": "FILTER"
								},
								{
									"key": "include_applied_to_type",
									"value": "{{include_applied_to_type}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "services",
									"value": "{{services}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sources",
									"value": "{{sources}}"
								},
								{
									"key": "type",
									"value": "L3REDIRECT"
								}
							]
						},
						"description": "List all Service Insertion section in paginated form. A default page size is limited\nto 1000 sections. By default, the list of section is filtered by L3REDIRECT\ntype.\n"
					},
					"response": []
				},
				{
					"name": "Create a New Empty Section",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/sections?id={{id}}&operation=insert_top",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"sections"
							],
							"query": [
								{
									"key": "id",
									"value": "{{id}}"
								},
								{
									"key": "operation",
									"value": "insert_top"
								}
							]
						},
						"description": "Creates new empty Service Insertion section in the system.\n"
					},
					"response": []
				},
				{
					"name": "List all Service-Insertion Services.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services"
							]
						},
						"description": "List all Service-Insertion Service Definitions.\n"
					},
					"response": []
				},
				{
					"name": "Create a Service-Insertion Service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services"
							]
						},
						"description": "Creates new Service-Insertion Service in the system.\n"
					},
					"response": []
				},
				{
					"name": "Get operational status for an interface",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-instances/:service-instance-id/instance-runtimes/:instance-runtime-id/interfaces/:interface_index/status?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-instances",
								":service-instance-id",
								"instance-runtimes",
								":instance-runtime-id",
								"interfaces",
								":interface_index",
								"status"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "service-instance-id",
									"value": "{{service-instance-id}}"
								},
								{
									"key": "instance-runtime-id",
									"value": "{{instance-runtime-id}}"
								},
								{
									"key": "interface_index",
									"value": "{{interface_index}}"
								}
							]
						},
						"description": "Returns operational status of a specified interface"
					},
					"response": []
				},
				{
					"name": "Add Multiple Rules in a Section",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/sections/:section-id/rules?action=create_multiple?id={{id}}&operation=insert_top",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"sections",
								":section-id",
								"rules"
							],
							"query": [
								{
									"key": "action",
									"value": "create_multiple?id={{id}}"
								},
								{
									"key": "operation",
									"value": "insert_top"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Create multiple serviceinsertion rules in existing serviceinsertion section bounded by\nlimit of 1000 serviceinsertion rules per section.\n"
					},
					"response": []
				},
				{
					"name": "Get all service attachments.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/service-attachments",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"service-attachments"
							]
						},
						"description": "Returns all Service-Attachement(s) present in the system.\n"
					},
					"response": []
				},
				{
					"name": "Add a Service Attachment.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/service-attachments",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"service-attachments"
							]
						},
						"description": "Adds a new Service attachment. A service attachment represents a point\non NSX entity (Example: Logical Router) to which service instance can be\nconnected through an InstanceEndpoint.\n"
					},
					"response": []
				},
				{
					"name": "Get Service-Instance state for Service.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-instances/:service-instance-id/state",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-instances",
								":service-instance-id",
								"state"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "service-instance-id",
									"value": "{{service-instance-id}}"
								}
							]
						},
						"description": "Returns configuration state of one instance of a deployed partner service using service insertion framework.\n"
					},
					"response": []
				},
				{
					"name": "Get a particular service attachment.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/service-attachments/:service-attachment-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"service-attachments",
								":service-attachment-id"
							],
							"variable": [
								{
									"key": "service-attachment-id",
									"value": "{{service-attachment-id}}"
								}
							]
						},
						"description": "Returns detailed Attachment information for a given service attachment.\n"
					},
					"response": []
				},
				{
					"name": "Delete an existing service attachment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/service-attachments/:service-attachment-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"service-attachments",
								":service-attachment-id"
							],
							"variable": [
								{
									"key": "service-attachment-id",
									"value": "{{service-attachment-id}}"
								}
							]
						},
						"description": "Delete existing service attachment from system.\nBefore deletion, please make sure that, no instance endpoints are connected\nto this attachment. In turn no appliance should be connected to this attachment.\n"
					},
					"response": []
				},
				{
					"name": "Get a particular ServiceProfile for a Service.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-profiles/:service-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-profiles",
								":service-profile-id"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "service-profile-id",
									"value": "{{service-profile-id}}"
								}
							]
						},
						"description": "Returns detailed service profile information for a given Service.\n"
					},
					"response": []
				},
				{
					"name": "Delete a particular ServiceProfile.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-profiles/:service-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-profiles",
								":service-profile-id"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "service-profile-id",
									"value": "{{service-profile-id}}"
								}
							]
						},
						"description": "Delete service profile for a given service.\n"
					},
					"response": []
				},
				{
					"name": "Create a Section with Rules",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/sections?action=create_with_rules?id={{id}}&operation=insert_top",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"sections"
							],
							"query": [
								{
									"key": "action",
									"value": "create_with_rules?id={{id}}"
								},
								{
									"key": "operation",
									"value": "insert_top"
								}
							]
						},
						"description": "Creates a new serviceinsertion section with rules. The limit on the number of\nrules is defined by maxItems in collection types for ServiceInsertionRule\n(ServiceInsertionRuleXXXList types). When invoked on a section with a large number\nof rules, this API is supported only at low rates of invocation (not more\nthan 4-5 times per minute). The typical latency of this API with about 1024\nrules is about 4-5 seconds. This API should not be invoked with large\npayloads at automation speeds. More than 50 rules are not supported.\n\nInstead, to create sections, use:\nPOST /api/v1/serviceinsertion/sections\n\nTo create rules, use:\nPOST /api/v1/serviceinsertion/sections/&lt;section-id&gt;/rules\n"
					},
					"response": []
				},
				{
					"name": "Get all Service-Instances for Service.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-instances",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-instances"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								}
							]
						},
						"description": "Returns all Service-Instance(s) for a given Service-Insertion Service.\n"
					},
					"response": []
				},
				{
					"name": "Add a Service Instance for a specified Service.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/services/:service-id/service-instances",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"services",
								":service-id",
								"service-instances"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								}
							]
						},
						"description": "Adds a new Service-Instance under the specified Service.\n"
					},
					"response": []
				},
				{
					"name": "List all ServiceChains.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/service-chains",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"service-chains"
							]
						},
						"description": "List all service chains in the system.\n"
					},
					"response": []
				},
				{
					"name": "Add Service Chain",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/serviceinsertion/service-chains",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"serviceinsertion",
								"service-chains"
							]
						},
						"description": "Adds a new service chain. Service Chains is can contain profile belonging\nto same or different Service(s). It represents a redirection target for a Rule.\n"
					},
					"response": []
				}
			],
			"description": "Folder for serviceinsertion"
		},
		{
			"name": "hpm",
			"item": [
				{
					"name": "Read health performance monitoring configuration for feature stack",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/hpm/features/:feature-stack-name",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"hpm",
								"features",
								":feature-stack-name"
							],
							"variable": [
								{
									"key": "feature-stack-name",
									"value": "{{feature-stack-name}}"
								}
							]
						},
						"description": "Returns the complete set of client type data collection\nconfiguration records for the specified feature stack.\n"
					},
					"response": []
				},
				{
					"name": "Update health performance monitoring configuration for feature stack",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/hpm/features/:feature-stack-name",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"hpm",
								"features",
								":feature-stack-name"
							],
							"variable": [
								{
									"key": "feature-stack-name",
									"value": "{{feature-stack-name}}"
								}
							]
						},
						"description": "Apply the data collection configuration for the specified\nfeature stack.\n"
					},
					"response": []
				},
				{
					"name": "Reset the data collection frequency configuration setting to the default values",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/hpm/features/:feature-stack-name?action=reset_collection_frequency?action={{action}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"hpm",
								"features",
								":feature-stack-name"
							],
							"query": [
								{
									"key": "action",
									"value": "reset_collection_frequency?action={{action}}"
								}
							],
							"variable": [
								{
									"key": "feature-stack-name",
									"value": "{{feature-stack-name}}"
								}
							]
						},
						"description": "Reset the data collection frequency configuration setting to the default values"
					},
					"response": []
				},
				{
					"name": "Read global health performance monitoring configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/hpm/global-config",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"hpm",
								"global-config"
							]
						},
						"description": "Read global health performance monitoring configuration"
					},
					"response": []
				},
				{
					"name": "Set the global configuration for aggregation service related data collection",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/hpm/global-config",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"hpm",
								"global-config"
							]
						},
						"description": "Set the global configuration for aggregation service related data collection"
					},
					"response": []
				},
				{
					"name": "Collect alarms from all NSX nodes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/hpm/alarms?cursor={{cursor}}&fields={{fields}}&page_size=100",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"hpm",
								"alarms"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "fields",
									"value": "{{fields}}"
								},
								{
									"key": "page_size",
									"value": "100"
								}
							]
						},
						"description": "This API is executed on a manager node to return current alarms from all NSX nodes.\n"
					},
					"response": []
				},
				{
					"name": "List all health performance monitoring feature stacks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/hpm/features",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"hpm",
								"features"
							]
						},
						"description": "List all health performance monitoring feature stacks"
					},
					"response": []
				}
			],
			"description": "Folder for hpm"
		},
		{
			"name": "logical-switches",
			"item": [
				{
					"name": "Get virtual tunnel endpoint table for logical switch of the given\nID (lswitch-id)\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-switches/:lswitch-id/vtep-table?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&source={{source}}&transport_node_id={{transport_node_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-switches",
								":lswitch-id",
								"vtep-table"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "source",
									"value": "{{source}}"
								},
								{
									"key": "transport_node_id",
									"value": "{{transport_node_id}}"
								}
							],
							"variable": [
								{
									"key": "lswitch-id",
									"value": "{{lswitch-id}}"
								}
							]
						},
						"description": "Returns the virtual tunnel endpoint table of a specified logical switch\nfrom the given transport node if a transport node id is given in the\nquery parameter, from the Central Controller Plane.\nThe query parameter \"source=cached\" is not supported.\n"
					},
					"response": []
				},
				{
					"name": "List all Logical Switches",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-switches?cursor={{cursor}}&diagnostic=false&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&switching_profile_id={{switching_profile_id}}&transport_type={{transport_type}}&transport_zone_id={{transport_zone_id}}&uplink_teaming_policy_name={{uplink_teaming_policy_name}}&vlan={{vlan}}&vni={{vni}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-switches"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "diagnostic",
									"value": "false"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "switching_profile_id",
									"value": "{{switching_profile_id}}"
								},
								{
									"key": "transport_type",
									"value": "{{transport_type}}"
								},
								{
									"key": "transport_zone_id",
									"value": "{{transport_zone_id}}"
								},
								{
									"key": "uplink_teaming_policy_name",
									"value": "{{uplink_teaming_policy_name}}"
								},
								{
									"key": "vlan",
									"value": "{{vlan}}"
								},
								{
									"key": "vni",
									"value": "{{vni}}"
								}
							]
						},
						"description": "Returns information about all configured logical switches."
					},
					"response": []
				},
				{
					"name": "Create a Logical Switch",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-switches",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-switches"
							]
						},
						"description": "Creates a new logical switch. The request must include the\ntransport_zone_id, display_name, and admin_state (UP or DOWN). The\nreplication_mode (MTEP or SOURCE) is required for overlay logical\nswitches, but not for VLAN-based logical switches. A vlan needs to be\nprovided for VLAN-based logical switches\n"
					},
					"response": []
				},
				{
					"name": "Get MAC Table for Logical Switch of the Given ID (lswitch-id)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-switches/:lswitch-id/mac-table?format=csv?source={{source}}&transport_node_id={{transport_node_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-switches",
								":lswitch-id",
								"mac-table"
							],
							"query": [
								{
									"key": "format",
									"value": "csv?source={{source}}"
								},
								{
									"key": "transport_node_id",
									"value": "{{transport_node_id}}"
								}
							],
							"variable": [
								{
									"key": "lswitch-id",
									"value": "{{lswitch-id}}"
								}
							]
						},
						"description": "Returns MAC table of a specified logical switch in CSV format from the given transport\nnode if a transport node id is given in the query parameter from the\nCentral Controller Plane.\nThe query parameter \"source=cached\" is not supported.\n"
					},
					"response": []
				},
				{
					"name": "Get Logical Switch runtime status info for a given logical switch",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-switches/:lswitch-id/summary",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-switches",
								":lswitch-id",
								"summary"
							],
							"variable": [
								{
									"key": "lswitch-id",
									"value": "{{lswitch-id}}"
								}
							]
						},
						"description": "Returns the number of ports assigned to a logical switch."
					},
					"response": []
				},
				{
					"name": "Get the realized state associated with provided logical switch id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-switches/:lswitch-id/state",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-switches",
								":lswitch-id",
								"state"
							],
							"variable": [
								{
									"key": "lswitch-id",
									"value": "{{lswitch-id}}"
								}
							]
						},
						"description": "Returns current state of the logical switch configuration and details of only\nout-of-sync transport nodes.\n"
					},
					"response": []
				},
				{
					"name": "Get Statistics for Logical Switch of the Given ID (lswitch-id)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-switches/:lswitch-id/statistics?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-switches",
								":lswitch-id",
								"statistics"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "lswitch-id",
									"value": "{{lswitch-id}}"
								}
							]
						},
						"description": "Returns statistics  of a specified logical switch.\nThe query parameter \"source=realtime\" is not supported.\n"
					},
					"response": []
				},
				{
					"name": "Get Status Summary of All Logical Switches in the System",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-switches/status?cursor={{cursor}}&diagnostic=false&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&source={{source}}&switching_profile_id={{switching_profile_id}}&transport_type={{transport_type}}&transport_zone_id={{transport_zone_id}}&uplink_teaming_policy_name={{uplink_teaming_policy_name}}&vlan={{vlan}}&vni={{vni}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-switches",
								"status"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "diagnostic",
									"value": "false"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "source",
									"value": "{{source}}"
								},
								{
									"key": "switching_profile_id",
									"value": "{{switching_profile_id}}"
								},
								{
									"key": "transport_type",
									"value": "{{transport_type}}"
								},
								{
									"key": "transport_zone_id",
									"value": "{{transport_zone_id}}"
								},
								{
									"key": "uplink_teaming_policy_name",
									"value": "{{uplink_teaming_policy_name}}"
								},
								{
									"key": "vlan",
									"value": "{{vlan}}"
								},
								{
									"key": "vni",
									"value": "{{vni}}"
								}
							]
						},
						"description": "Returns Operational status of all logical switches.\nThe query parameter \"source=realtime\" is not supported.\n"
					},
					"response": []
				},
				{
					"name": "Get virtual tunnel endpoint table for logical switch of the given\nID (lswitch-id)\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-switches/:lswitch-id/vtep-table?format=csv?source={{source}}&transport_node_id={{transport_node_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-switches",
								":lswitch-id",
								"vtep-table"
							],
							"query": [
								{
									"key": "format",
									"value": "csv?source={{source}}"
								},
								{
									"key": "transport_node_id",
									"value": "{{transport_node_id}}"
								}
							],
							"variable": [
								{
									"key": "lswitch-id",
									"value": "{{lswitch-id}}"
								}
							]
						},
						"description": "Returns virtual tunnel endpoint table of a specified logical switch in\nCSV format from the given transport node if a transport node id is\ngiven in the query parameter from the Central Controller Plane.\nThe query parameter \"source=cached\" is not supported.\n"
					},
					"response": []
				},
				{
					"name": "Get MAC Table for Logical Switch of the Given ID (lswitch-id)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-switches/:lswitch-id/mac-table?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&source={{source}}&transport_node_id={{transport_node_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-switches",
								":lswitch-id",
								"mac-table"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "source",
									"value": "{{source}}"
								},
								{
									"key": "transport_node_id",
									"value": "{{transport_node_id}}"
								}
							],
							"variable": [
								{
									"key": "lswitch-id",
									"value": "{{lswitch-id}}"
								}
							]
						},
						"description": "Returns MAC table of a specified logical switch from the given transport\nnode if a transport node id is given in the query parameter from the\nCentral Controller Plane.\nThe query parameter \"source=cached\" is not supported.\n"
					},
					"response": []
				},
				{
					"name": "Get Logical Switch associated with the provided id (lswitch-id)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-switches/:lswitch-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-switches",
								":lswitch-id"
							],
							"variable": [
								{
									"key": "lswitch-id",
									"value": "{{lswitch-id}}"
								}
							]
						},
						"description": "Returns information about the specified logical switch Id."
					},
					"response": []
				},
				{
					"name": "Update a Logical Switch",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-switches/:lswitch-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-switches",
								":lswitch-id"
							],
							"variable": [
								{
									"key": "lswitch-id",
									"value": "{{lswitch-id}}"
								}
							]
						},
						"description": "Modifies attributes of an existing logical switch. Modifiable\nattributes include admin_state, replication_mode, switching_profile_ids\nand VLAN spec. You cannot modify the original transport_zone_id.\n"
					},
					"response": []
				},
				{
					"name": "Delete a Logical Switch",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-switches/:lswitch-id?cascade=false&detach=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-switches",
								":lswitch-id"
							],
							"query": [
								{
									"key": "cascade",
									"value": "false"
								},
								{
									"key": "detach",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "lswitch-id",
									"value": "{{lswitch-id}}"
								}
							]
						},
						"description": "Removes a logical switch from the associated overlay or VLAN transport\nzone. By default, a logical switch cannot be deleted if there are logical\nports on the switch, or it is added to a NSGroup.\nCascade option can be used to delete all ports and the logical switch.\nDetach option can be used to delete the logical switch forcibly.\n"
					},
					"response": []
				},
				{
					"name": "List logical switches by realized state",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-switches/state?status={{status}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-switches",
								"state"
							],
							"query": [
								{
									"key": "status",
									"value": "{{status}}"
								}
							]
						},
						"description": "Returns a list of logical switches states that have realized state as provided\nas query parameter.\n"
					},
					"response": []
				}
			],
			"description": "Folder for logical-switches"
		},
		{
			"name": "idfw",
			"item": [
				{
					"name": "Get Identity Firewall master switch enabled/disabled",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/idfw/master-switch-setting",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"idfw",
								"master-switch-setting"
							]
						},
						"description": "Fetches IDFW master switch setting to check whether master switch is enabled\nor disabled\n"
					},
					"response": []
				},
				{
					"name": "Update IDFW master switch setting enabled/disabled",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/idfw/master-switch-setting",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"idfw",
								"master-switch-setting"
							]
						},
						"description": "Update Identity Firewall master switch setting (true=enabled / false=disabled).\nIdentity Firewall master switch setting enables or disables Identity Firewall\nfeature across the system.  It affects compute collections, hypervisor and\nvirtual machines.  This operation is expensive and also has big impact and\nimplication on system perforamce.\n"
					},
					"response": []
				},
				{
					"name": "Get IDFW compute collection.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/idfw/idfw-compute-collections/:cc-ext-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"idfw",
								"idfw-compute-collections",
								":cc-ext-id"
							],
							"variable": [
								{
									"key": "cc-ext-id",
									"value": "{{cc-ext-id}}"
								}
							]
						},
						"description": "Get enable/disable status of individual compute collections for IDFW.\n"
					},
					"response": []
				},
				{
					"name": "Update IDFW compute collection",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/idfw/idfw-compute-collections/:cc-ext-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"idfw",
								"idfw-compute-collections",
								":cc-ext-id"
							],
							"variable": [
								{
									"key": "cc-ext-id",
									"value": "{{cc-ext-id}}"
								}
							]
						},
						"description": "Enable/disable individual compute collections for IDFW.\n"
					},
					"response": []
				},
				{
					"name": "Get list of compute collections and status.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/idfw/compute-collections/:compute-collection-ext-id/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"idfw",
								"compute-collections",
								":compute-collection-ext-id",
								"status"
							],
							"variable": [
								{
									"key": "compute-collection-ext-id",
									"value": "{{compute-collection-ext-id}}"
								}
							]
						},
						"description": "Retrieve the compute collection status by ID.\n"
					},
					"response": []
				},
				{
					"name": "Get IDFW system statistics data",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/idfw/system-stats",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"idfw",
								"system-stats"
							]
						},
						"description": "Get IDFW system statistics data."
					},
					"response": []
				},
				{
					"name": "Get all IDFW NSGroup VM details for a given NSGroup",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/idfw/nsgroup-vm-details/:group-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"idfw",
								"nsgroup-vm-details",
								":group-id"
							],
							"variable": [
								{
									"key": "group-id",
									"value": "{{group-id}}"
								}
							]
						},
						"description": "Get all Identity Firewall NSGroup VM details for a given NSGroup."
					},
					"response": []
				},
				{
					"name": "List all Identity firewall compute collections",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/idfw/idfw-compute-collections?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"idfw",
								"idfw-compute-collections"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "List all Identity firewall compute collections.\n"
					},
					"response": []
				},
				{
					"name": "List all VM and statuses based on transport node ID of idfw enabled compute collection.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/idfw/transport-nodes/:transport-node-id/vms/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"idfw",
								"transport-nodes",
								":transport-node-id",
								"vms",
								"status"
							],
							"variable": [
								{
									"key": "transport-node-id",
									"value": "{{transport-node-id}}"
								}
							]
						},
						"description": "Retrieve all the VM and status by transport node ID of idfw enabled compute\ncollection in the request.\n"
					},
					"response": []
				},
				{
					"name": "Get Standalone hosts switch enabled/disabled",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/idfw/standalone-host-switch-setting",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"idfw",
								"standalone-host-switch-setting"
							]
						},
						"description": "Fetches IDFW standalone hosts switch setting to check whether standalone\nhosts is enabled or disabled\n"
					},
					"response": []
				},
				{
					"name": "Update IDFW master switch setting enabled/disabled",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/idfw/standalone-host-switch-setting",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"idfw",
								"standalone-host-switch-setting"
							]
						},
						"description": "Update Identity Firewall standalone hosts switch setting\n(true=enabled / false=disabled).\n"
					},
					"response": []
				},
				{
					"name": "Get user session data",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/idfw/user-session-data",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"idfw",
								"user-session-data"
							]
						},
						"description": "Get user session data."
					},
					"response": []
				},
				{
					"name": "List all transport node and statuses based on idfw enabled ComputeCollection ID.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/idfw/compute-collections/:cc-ext-id/transport-nodes/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"idfw",
								"compute-collections",
								":cc-ext-id",
								"transport-nodes",
								"status"
							],
							"variable": [
								{
									"key": "cc-ext-id",
									"value": "{{cc-ext-id}}"
								}
							]
						},
						"description": "Retrieve all the transport node and status by idfw enabled\n  ComputeCollection ID in the request.\n"
					},
					"response": []
				},
				{
					"name": "Get IDFW user login events for a given VM",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/idfw/vm-stats/:vm-ext-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"idfw",
								"vm-stats",
								":vm-ext-id"
							],
							"variable": [
								{
									"key": "vm-ext-id",
									"value": "{{vm-ext-id}}"
								}
							]
						},
						"description": "Get IDFW user login events for a given VM (all active plus up to 5 most\nrecent archived entries).\n"
					},
					"response": []
				},
				{
					"name": "Get IDFW user login events for a given user",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/idfw/user-stats/:user-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"idfw",
								"user-stats",
								":user-id"
							],
							"variable": [
								{
									"key": "user-id",
									"value": "{{user-id}}"
								}
							]
						},
						"description": "Get IDFW user login events for a given user (all active plus up to 5 most\nrecent archived entries).\n"
					},
					"response": []
				},
				{
					"name": "List all IDFW enabled ComputeCollection statuses.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/idfw/compute-collections/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"idfw",
								"compute-collections",
								"status"
							]
						},
						"description": "Retrieve all the Compute collection status.\n"
					},
					"response": []
				}
			],
			"description": "Folder for idfw"
		},
		{
			"name": "mac-sets",
			"item": [
				{
					"name": "Remove a MAC address from given MACSet",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/mac-sets/:mac-set-id/members/:mac-address",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"mac-sets",
								":mac-set-id",
								"members",
								":mac-address"
							],
							"variable": [
								{
									"key": "mac-set-id",
									"value": "{{mac-set-id}}"
								},
								{
									"key": "mac-address",
									"value": "{{mac-address}}"
								}
							]
						},
						"description": "Remove an individual MAC address from a MACSet\n"
					},
					"response": []
				},
				{
					"name": "Get all MACAddresses in a MACSet",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/mac-sets/:mac-set-id/members",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"mac-sets",
								":mac-set-id",
								"members"
							],
							"variable": [
								{
									"key": "mac-set-id",
									"value": "{{mac-set-id}}"
								}
							]
						},
						"description": "List all MAC addresses in a MACSet\n"
					},
					"response": []
				},
				{
					"name": "Add a MAC address to a MACSet",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/mac-sets/:mac-set-id/members",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"mac-sets",
								":mac-set-id",
								"members"
							],
							"variable": [
								{
									"key": "mac-set-id",
									"value": "{{mac-set-id}}"
								}
							]
						},
						"description": "Add an individual MAC address to a MACSet\n"
					},
					"response": []
				},
				{
					"name": "Read MACSet",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/mac-sets/:mac-set-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"mac-sets",
								":mac-set-id"
							],
							"variable": [
								{
									"key": "mac-set-id",
									"value": "{{mac-set-id}}"
								}
							]
						},
						"description": "Returns information about the specified MACSet\n"
					},
					"response": []
				},
				{
					"name": "Update MACSet",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/mac-sets/:mac-set-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"mac-sets",
								":mac-set-id"
							],
							"variable": [
								{
									"key": "mac-set-id",
									"value": "{{mac-set-id}}"
								}
							]
						},
						"description": "Updates the specified MACSet. Modifiable parameters include the\ndescription, display_name and mac_addresses.\n"
					},
					"response": []
				},
				{
					"name": "Delete MACSet",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/mac-sets/:mac-set-id?force=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"mac-sets",
								":mac-set-id"
							],
							"query": [
								{
									"key": "force",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "mac-set-id",
									"value": "{{mac-set-id}}"
								}
							]
						},
						"description": "Deletes the specified MACSet. By default, if the MACSet is added to an\nNSGroup, it won't be deleted. In such situations, pass \"force=true\" as\nquery param to force delete the MACSet.\n"
					},
					"response": []
				},
				{
					"name": "List MACSets",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/mac-sets?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"mac-sets"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns paginated list of MACSets\n"
					},
					"response": []
				},
				{
					"name": "Create MACSet",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/mac-sets",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"mac-sets"
							]
						},
						"description": "Creates a new MACSet that can group individual MAC addresses.\n"
					},
					"response": []
				}
			],
			"description": "Folder for mac-sets"
		},
		{
			"name": "dhcp",
			"item": [
				{
					"name": "Reallocate edge cluster and members of given DHCP profile.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/server-profiles/:server-profile-id?action=reallocate",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"server-profiles",
								":server-profile-id"
							],
							"query": [
								{
									"key": "action",
									"value": "reallocate"
								}
							],
							"variable": [
								{
									"key": "server-profile-id",
									"value": "{{server-profile-id}}"
								}
							]
						},
						"description": "As changing edge-cluster-id of a DhcpProfile by a PUT is disallowed,\nthis re-allocate API is used to modify the edge-cluster-id and members\nof a given DhcpProfile.\n\nOnly the edge-cluster-id and the edge-cluster-member-indexes fields will\nbe picked up by this re-allication API. The othere fields in the payload\nwill be ignored.\n\nIf the edge-cluster-id in the payload DhcpProfile is different from the\ncurrent edge-cluster-id of the profile, the referencing DHCP server(s) will\nbe re-allocated to the new edge cluster. If the edge-cluster-id is not\nchanged, the referencing DHCP server(s) will be re-allocated to the\ngiven edge members in the edge cluster. In this case, this REST API will\nact same as that of updating a DhcpProfile.\n\nIf the edge cluster member indexes are provided, they should exist in the\ngiven edge cluster. If the indexes are not specified in the DhcpProfile,\nedge members will be auto-allocated from the given edge cluster.\n\nPlease note that re-allocating edge-cluster will cause lose of all exisitng\nDHCP lease information. This API is used only when loosing DHCP leases is\nnot a real problem, e.g. cross-site migration or failover and all client\nhosts will be reboot and get new IP addresses.\n"
					},
					"response": []
				},
				{
					"name": "Get a paginated list of a DHCP server's IP pools",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/servers/:server-id/ip-pools?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"servers",
								":server-id",
								"ip-pools"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							],
							"variable": [
								{
									"key": "server-id",
									"value": "{{server-id}}"
								}
							]
						},
						"description": "List the ip pools of a logical DHCP server with pagination support.\n"
					},
					"response": []
				},
				{
					"name": "Create an ip pool for a DHCP server",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/servers/:server-id/ip-pools",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"servers",
								":server-id",
								"ip-pools"
							],
							"variable": [
								{
									"key": "server-id",
									"value": "{{server-id}}"
								}
							]
						},
						"description": "Create an ip pool for a local DHCP server"
					},
					"response": []
				},
				{
					"name": "Get a paginated list of DHCP server profiles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/server-profiles?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"server-profiles"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Get a paginated list of DHCP server profiles."
					},
					"response": []
				},
				{
					"name": "Create a DHCP server profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/server-profiles",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"server-profiles"
							]
						},
						"description": "Create a DHCP server profile. If no edge member is specified, edge members\nto run the dhcp servers will be auto-allocated from the edge cluster.\n"
					},
					"response": []
				},
				{
					"name": "Get DHCP service status with given dhcp server id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/servers/:server-id/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"servers",
								":server-id",
								"status"
							],
							"variable": [
								{
									"key": "server-id",
									"value": "{{server-id}}"
								}
							]
						},
						"description": "Returns the service status of the given dhcp server.\n"
					},
					"response": []
				},
				{
					"name": "Get a paginated list of DHCP servers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/servers?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"servers"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "List logical DHCP servers with pagination support."
					},
					"response": []
				},
				{
					"name": "Create a DHCP server",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/servers",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"servers"
							]
						},
						"description": "Create a logical DHCP server."
					},
					"response": []
				},
				{
					"name": "Get a DHCP server's IP pool with the specified pool ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/servers/:server-id/ip-pools/:pool-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"servers",
								":server-id",
								"ip-pools",
								":pool-id"
							],
							"variable": [
								{
									"key": "server-id",
									"value": "{{server-id}}"
								},
								{
									"key": "pool-id",
									"value": "{{pool-id}}"
								}
							]
						},
						"description": "Return a specific ip pool of a given logical DHCP server."
					},
					"response": []
				},
				{
					"name": "Update a DHCP server's IP pool",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/servers/:server-id/ip-pools/:pool-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"servers",
								":server-id",
								"ip-pools",
								":pool-id"
							],
							"variable": [
								{
									"key": "server-id",
									"value": "{{server-id}}"
								},
								{
									"key": "pool-id",
									"value": "{{pool-id}}"
								}
							]
						},
						"description": "Update a specific ip pool of a given logical DHCP server."
					},
					"response": []
				},
				{
					"name": "Delete a DHCP server's IP pool",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/servers/:server-id/ip-pools/:pool-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"servers",
								":server-id",
								"ip-pools",
								":pool-id"
							],
							"variable": [
								{
									"key": "server-id",
									"value": "{{server-id}}"
								},
								{
									"key": "pool-id",
									"value": "{{pool-id}}"
								}
							]
						},
						"description": "Delete a specific ip pool of a given logical DHCP server."
					},
					"response": []
				},
				{
					"name": "Get a paginated list of a DHCP server's static bindings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/servers/:server-id/static-bindings?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"servers",
								":server-id",
								"static-bindings"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							],
							"variable": [
								{
									"key": "server-id",
									"value": "{{server-id}}"
								}
							]
						},
						"description": "Return a paginated list of a static bindings of a given logical DHCP server.\n"
					},
					"response": []
				},
				{
					"name": "Create a static binding for a DHCP server",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/servers/:server-id/static-bindings",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"servers",
								":server-id",
								"static-bindings"
							],
							"variable": [
								{
									"key": "server-id",
									"value": "{{server-id}}"
								}
							]
						},
						"description": "Create a static binding for a logical DHCP server."
					},
					"response": []
				},
				{
					"name": "Read a DHCP Relay Service",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/relays/:relay-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"relays",
								":relay-id"
							],
							"variable": [
								{
									"key": "relay-id",
									"value": "{{relay-id}}"
								}
							]
						},
						"description": "Returns the dhcp relay service information."
					},
					"response": []
				},
				{
					"name": "Update a DHCP Relay Service",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/relays/:relay-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"relays",
								":relay-id"
							],
							"variable": [
								{
									"key": "relay-id",
									"value": "{{relay-id}}"
								}
							]
						},
						"description": "Modifies the specified dhcp relay service.\n"
					},
					"response": []
				},
				{
					"name": "Delete a DHCP Relay Service",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/relays/:relay-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"relays",
								":relay-id"
							],
							"variable": [
								{
									"key": "relay-id",
									"value": "{{relay-id}}"
								}
							]
						},
						"description": "Deletes the specified dhcp relay service."
					},
					"response": []
				},
				{
					"name": "Get a DHCP server",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/servers/:server-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"servers",
								":server-id"
							],
							"variable": [
								{
									"key": "server-id",
									"value": "{{server-id}}"
								}
							]
						},
						"description": "Retrieve a logical DHCP server specified by server id."
					},
					"response": []
				},
				{
					"name": "Update a DHCP server",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/servers/:server-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"servers",
								":server-id"
							],
							"variable": [
								{
									"key": "server-id",
									"value": "{{server-id}}"
								}
							]
						},
						"description": "Update a logical DHCP server with new configurations."
					},
					"response": []
				},
				{
					"name": "Delete a DHCP server",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/servers/:server-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"servers",
								":server-id"
							],
							"variable": [
								{
									"key": "server-id",
									"value": "{{server-id}}"
								}
							]
						},
						"description": "Delete a logical DHCP server specified by server id."
					},
					"response": []
				},
				{
					"name": "Get DHCP statistics with given dhcp server id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/servers/:server-id/statistics",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"servers",
								":server-id",
								"statistics"
							],
							"variable": [
								{
									"key": "server-id",
									"value": "{{server-id}}"
								}
							]
						},
						"description": "Returns the statistics of the given dhcp server.\n"
					},
					"response": []
				},
				{
					"name": "Read a DHCP Relay Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/relay-profiles/:relay-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"relay-profiles",
								":relay-profile-id"
							],
							"variable": [
								{
									"key": "relay-profile-id",
									"value": "{{relay-profile-id}}"
								}
							]
						},
						"description": "Returns information about the specified dhcp relay profile."
					},
					"response": []
				},
				{
					"name": "Update a DHCP Relay Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/relay-profiles/:relay-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"relay-profiles",
								":relay-profile-id"
							],
							"variable": [
								{
									"key": "relay-profile-id",
									"value": "{{relay-profile-id}}"
								}
							]
						},
						"description": "Modifies the specified dhcp relay profile.\n"
					},
					"response": []
				},
				{
					"name": "Delete a DHCP Relay Profile",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/relay-profiles/:relay-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"relay-profiles",
								":relay-profile-id"
							],
							"variable": [
								{
									"key": "relay-profile-id",
									"value": "{{relay-profile-id}}"
								}
							]
						},
						"description": "Deletes the specified dhcp relay profile."
					},
					"response": []
				},
				{
					"name": "List All DHCP Relay Profiles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/relay-profiles?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"relay-profiles"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns information about all dhcp relay profiles.\n"
					},
					"response": []
				},
				{
					"name": "Create a DHCP Relay Profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/relay-profiles",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"relay-profiles"
							]
						},
						"description": "Creates a dhcp relay profile.\n"
					},
					"response": []
				},
				{
					"name": "Get a DHCP server's static binding with the specified binding ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/servers/:server-id/static-bindings/:binding-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"servers",
								":server-id",
								"static-bindings",
								":binding-id"
							],
							"variable": [
								{
									"key": "server-id",
									"value": "{{server-id}}"
								},
								{
									"key": "binding-id",
									"value": "{{binding-id}}"
								}
							]
						},
						"description": "Return a specific static binding of a given logical DHCP server.\n"
					},
					"response": []
				},
				{
					"name": "Update a DHCP server's static binding",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/servers/:server-id/static-bindings/:binding-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"servers",
								":server-id",
								"static-bindings",
								":binding-id"
							],
							"variable": [
								{
									"key": "server-id",
									"value": "{{server-id}}"
								},
								{
									"key": "binding-id",
									"value": "{{binding-id}}"
								}
							]
						},
						"description": "Update a specific static binding of a given local DHCP server."
					},
					"response": []
				},
				{
					"name": "Delete a static binding",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/servers/:server-id/static-bindings/:binding-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"servers",
								":server-id",
								"static-bindings",
								":binding-id"
							],
							"variable": [
								{
									"key": "server-id",
									"value": "{{server-id}}"
								},
								{
									"key": "binding-id",
									"value": "{{binding-id}}"
								}
							]
						},
						"description": "Delete a specific static binding of a given logical DHCP server."
					},
					"response": []
				},
				{
					"name": "Get a DHCP server profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/server-profiles/:profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"server-profiles",
								":profile-id"
							],
							"variable": [
								{
									"key": "profile-id",
									"value": "{{profile-id}}"
								}
							]
						},
						"description": "Return the DHCP profile specified by the profile id."
					},
					"response": []
				},
				{
					"name": "Update a DHCP server profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/server-profiles/:profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"server-profiles",
								":profile-id"
							],
							"variable": [
								{
									"key": "profile-id",
									"value": "{{profile-id}}"
								}
							]
						},
						"description": "Please note, the edge_cluster_id in DhcpProfile can NOT be changed by this\nPUT operation because all existing DHCP leases will lost. If loosing leases\nis not a problem, a dedicated re-allocation API is suggested to modify the\nedge-cluster-id.\n\nIf both the edge_cluster_member_indexes in the DhcpProfile are changed in\na same PUT API, e.g. change from [a,b] to [x,y], the current DHCP server\nleases will be lost, which could cause the network crash due to ip conflicts.\nHence the suggestion is to change only one member index in one single update,\ne.g. from [a, b] to [a,y].\n"
					},
					"response": []
				},
				{
					"name": "Delete a DHCP server profile",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/server-profiles/:profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"server-profiles",
								":profile-id"
							],
							"variable": [
								{
									"key": "profile-id",
									"value": "{{profile-id}}"
								}
							]
						},
						"description": "Delete a DHCP server profile specified by the profile id."
					},
					"response": []
				},
				{
					"name": "List all DHCP Relay Services",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/relays?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"relays"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns information about all configured dhcp relay services.\n"
					},
					"response": []
				},
				{
					"name": "Create a DHCP Relay Service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/relays",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"relays"
							]
						},
						"description": "Creates a dhcp relay service.\n"
					},
					"response": []
				},
				{
					"name": "Get specific leases of a given dhcp server",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/servers/:server-id/leases?address={{address}}&pool_id={{pool_id}}&source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"servers",
								":server-id",
								"leases"
							],
							"query": [
								{
									"key": "address",
									"value": "{{address}}"
								},
								{
									"key": "pool_id",
									"value": "{{pool_id}}"
								},
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "server-id",
									"value": "{{server-id}}"
								}
							]
						},
						"description": "Get specific leases of a given dhcp server. As a dhcp server could manage\nmillions of leases, the API has to limit the number of the returned\nleases via two mutually-excluded request parameters, i.e. \"pool_id\" and\n\"address\". Either a \"pool_id\" or an \"address\" can be provided, but not both\nin a same call.\n\nIf a \"pool_id\" is specified, the leases of the specific pool are returned.\nIf an \"address\" is specified, only the lease(s) represented y this address\nis(are) returned. The \"address\" can be a single IP, an ip-range, or a mac\naddress.\n"
					},
					"response": []
				},
				{
					"name": "Delete a single DHCP lease entry specified by ip and mac.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dhcp/servers/:server-id/leases?ip={{ip}}&mac={{mac}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dhcp",
								"servers",
								":server-id",
								"leases"
							],
							"query": [
								{
									"key": "ip",
									"value": "{{ip}}"
								},
								{
									"key": "mac",
									"value": "{{mac}}"
								}
							],
							"variable": [
								{
									"key": "server-id",
									"value": "{{server-id}}"
								}
							]
						},
						"description": "Delete a single DHCP lease entry specified by ip and mac.\n\nThe DHCP server matches the DHCP lease with the given ip address and\nthe mac address. The matched lease entry will be deleted. If no lease\nmatches, the request is ignored.\n\nThe DHCP lease to be deleted will be removed by the system from both active\nand standby node. The system will report error if the DHCP lease could not\nbe removed from both nodes. If the DHCP lease could not be removed on either\nnode, please check the DHCP server status. Once the DHCP server status is\nUP, please invoke the deletion API again to ensure the lease gets deleted\nfrom both nodes.\n"
					},
					"response": []
				}
			],
			"description": "Folder for dhcp"
		},
		{
			"name": "ipfix-obs-points",
			"item": [
				{
					"name": "Read global switch IPFIX export configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ipfix-obs-points/switch-global",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ipfix-obs-points",
								"switch-global"
							]
						},
						"description": "Deprecated - Please use /ipfix-profiles/<ipfix-profile-id> for switch IPFIX\nprofile and /ipfix-collector-profiles/<ipfix-collector-profile-id> for IPFIX\ncollector profile.\n"
					},
					"response": []
				},
				{
					"name": "Update global switch IPFIX export configuration",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ipfix-obs-points/switch-global",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ipfix-obs-points",
								"switch-global"
							]
						},
						"description": "Deprecated - Please use /ipfix-profiles/<ipfix-profile-id> for switch IPFIX\nprofile and /ipfix-collector-profiles/<ipfix-collector-profile-id> for IPFIX\ncollector profile.\n"
					},
					"response": []
				},
				{
					"name": "Get the list of IPFIX observation points",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ipfix-obs-points",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ipfix-obs-points"
							]
						},
						"description": "Deprecated - Please use /ipfix-profiles for switch IPFIX profile and\n/ipfix-collector-profiles for IPFIX collector profile.\n"
					},
					"response": []
				}
			],
			"description": "Folder for ipfix-obs-points"
		},
		{
			"name": "dns",
			"item": [
				{
					"name": "Get current status of the given DNS forwarder",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dns/forwarders/:forwarder-id/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dns",
								"forwarders",
								":forwarder-id",
								"status"
							],
							"variable": [
								{
									"key": "forwarder-id",
									"value": "{{forwarder-id}}"
								}
							]
						},
						"description": "Returns the current status of the given DNS forwarder.\n"
					},
					"response": []
				},
				{
					"name": "Retrieve a dns forwarder",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dns/forwarders/:forwarder-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dns",
								"forwarders",
								":forwarder-id"
							],
							"variable": [
								{
									"key": "forwarder-id",
									"value": "{{forwarder-id}}"
								}
							]
						},
						"description": "Retrieve a dns forwarder.\n"
					},
					"response": []
				},
				{
					"name": "Update a specific dns forwarder",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dns/forwarders/:forwarder-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dns",
								"forwarders",
								":forwarder-id"
							],
							"variable": [
								{
									"key": "forwarder-id",
									"value": "{{forwarder-id}}"
								}
							]
						},
						"description": "Update a specific dns forwarder.\n"
					},
					"response": []
				},
				{
					"name": "Delete a specific dns forwarder",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dns/forwarders/:forwarder-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dns",
								"forwarders",
								":forwarder-id"
							],
							"variable": [
								{
									"key": "forwarder-id",
									"value": "{{forwarder-id}}"
								}
							]
						},
						"description": "Delete a specific dns forwarder.\n"
					},
					"response": []
				},
				{
					"name": "Get statistics of given dns forwarder",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dns/forwarders/:forwarder-id/statistics",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dns",
								"forwarders",
								":forwarder-id",
								"statistics"
							],
							"variable": [
								{
									"key": "forwarder-id",
									"value": "{{forwarder-id}}"
								}
							]
						},
						"description": "Returns the statistics of the given dns forwarder specified by forwarder id.\n"
					},
					"response": []
				},
				{
					"name": "Get a paginated list of dns forwarders",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dns/forwarders?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dns",
								"forwarders"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Get a paginated list of dns forwarders.\n"
					},
					"response": []
				},
				{
					"name": "Create a dns forwader",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dns/forwarders",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dns",
								"forwarders"
							]
						},
						"description": "Create a dns forwader upon a logical router. There is only\none dns forwarder can be created upon a given logical router.\n"
					},
					"response": []
				},
				{
					"name": "Resolve a given address via the dns forwarder",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dns/forwarders/:forwarder-id/nslookup?address={{address}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dns",
								"forwarders",
								":forwarder-id",
								"nslookup"
							],
							"query": [
								{
									"key": "address",
									"value": "{{address}}"
								}
							],
							"variable": [
								{
									"key": "forwarder-id",
									"value": "{{forwarder-id}}"
								}
							]
						},
						"description": "Query the nameserver for an ip-address or a FQDN of the given an address optionally using\nan specified DNS server. If the address is a fqdn, nslookup will resolve ip-address with it.\nIf the address is an ip-address, do a reverse lookup and answer fqdn(s).\n"
					},
					"response": []
				},
				{
					"name": "Disable the dns forwarder.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dns/forwarders/:forwarder-id?action=disable",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dns",
								"forwarders",
								":forwarder-id"
							],
							"query": [
								{
									"key": "action",
									"value": "disable"
								}
							],
							"variable": [
								{
									"key": "forwarder-id",
									"value": "{{forwarder-id}}"
								}
							]
						},
						"description": "Disable the dns forwarder if the forwarder is currently enbled. If the dns\nforwarder is already disabled, the forwarder will not be re-disabled.\n\nPlease note, once a dns forwarder is disabled then enabled, the previous\ndns forwarder statistics counters will be reset.\n"
					},
					"response": []
				},
				{
					"name": "Clear the current cache of the dns forwarder.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dns/forwarders/:forwarder-id?action=clear_cache",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dns",
								"forwarders",
								":forwarder-id"
							],
							"query": [
								{
									"key": "action",
									"value": "clear_cache"
								}
							],
							"variable": [
								{
									"key": "forwarder-id",
									"value": "{{forwarder-id}}"
								}
							]
						},
						"description": "Clear the current cache of the dns forwarder.\n"
					},
					"response": []
				},
				{
					"name": "Enable the dns forwarder.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/dns/forwarders/:forwarder-id?action=enable",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"dns",
								"forwarders",
								":forwarder-id"
							],
							"query": [
								{
									"key": "action",
									"value": "enable"
								}
							],
							"variable": [
								{
									"key": "forwarder-id",
									"value": "{{forwarder-id}}"
								}
							]
						},
						"description": "Enable the dns forwarder if the forwarder is currently disabled. If the\ndns forwarder is already enabled, the forwarder will not be re-enabled.\n\nPlease note, once a dns forwarder is disabled then enabled, the previous\ndns forwarder statistics counters will be reset.\n"
					},
					"response": []
				}
			],
			"description": "Folder for dns"
		},
		{
			"name": "pbr",
			"item": [
				{
					"name": "Get an Existing Section",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pbr/sections/:section-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pbr",
								"sections",
								":section-id"
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Returns information about PBR section for the identifier.\n"
					},
					"response": []
				},
				{
					"name": "Update an Existing Section",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pbr/sections/:section-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pbr",
								"sections",
								":section-id"
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Modifies the specified section, but does not modify the section's associated rules.\n"
					},
					"response": []
				},
				{
					"name": "Delete an Existing Section and Its Associated Rules",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pbr/sections/:section-id?cascade=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pbr",
								"sections",
								":section-id"
							],
							"query": [
								{
									"key": "cascade",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Removes PBR section from the system. PBR section with\nrules can only be deleted by passing \"cascade=true\" parameter.\n"
					},
					"response": []
				},
				{
					"name": "Get All the Rules for a Section",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pbr/sections/:section-id/rules?applied_tos={{applied_tos}}&cursor={{cursor}}&destinations={{destinations}}&filter_type=FILTER&included_fields={{included_fields}}&page_size=1000&services={{services}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&sources={{sources}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pbr",
								"sections",
								":section-id",
								"rules"
							],
							"query": [
								{
									"key": "applied_tos",
									"value": "{{applied_tos}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "destinations",
									"value": "{{destinations}}"
								},
								{
									"key": "filter_type",
									"value": "FILTER"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "services",
									"value": "{{services}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sources",
									"value": "{{sources}}"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Return all PBR rule(s) information for a given PBR section.\n"
					},
					"response": []
				},
				{
					"name": "Add a Single Rule in a Section",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pbr/sections/:section-id/rules?id={{id}}&operation=insert_top",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pbr",
								"sections",
								":section-id",
								"rules"
							],
							"query": [
								{
									"key": "id",
									"value": "{{id}}"
								},
								{
									"key": "operation",
									"value": "insert_top"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Adds a new PBR rule in existing PBR section.\n"
					},
					"response": []
				},
				{
					"name": "Create a Section with Rules",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pbr/sections?action=create_with_rules?id={{id}}&operation=insert_top",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pbr",
								"sections"
							],
							"query": [
								{
									"key": "action",
									"value": "create_with_rules?id={{id}}"
								},
								{
									"key": "operation",
									"value": "insert_top"
								}
							]
						},
						"description": "Creates a new PBR section with rules. The limit on the number of\nrules is defined by maxItems in collection types for PBRRule\n(PBRRuleXXXList types). When invoked on a section with a large number\nof rules, this API is supported only at low rates of invocation (not more\nthan 4-5 times per minute). The typical latency of this API with about 1024\nrules is about 4-5 seconds. This API should not be invoked with large\npayloads at automation speeds. More than 50 rules with a large number of\nrule references is not supported.\n\nInstead, to create sections, use:\nPOST /api/v1/pbr/sections\n\nTo create rules, use:\nPOST /api/v1/pbr/sections/&lt;section-id&gt;/rules\n"
					},
					"response": []
				},
				{
					"name": "Update an Existing Rule and Reorder the Rule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pbr/sections/:section-id/rules/:rule-id?action=revise?id={{id}}&operation=insert_top",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pbr",
								"sections",
								":section-id",
								"rules",
								":rule-id"
							],
							"query": [
								{
									"key": "action",
									"value": "revise?id={{id}}"
								},
								{
									"key": "operation",
									"value": "insert_top"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								},
								{
									"key": "rule-id",
									"value": "{{rule-id}}"
								}
							]
						},
						"description": "Modifies existing PBR rule along with relative position among\nother PBR rules inside a PBR section.\n"
					},
					"response": []
				},
				{
					"name": "Add Multiple Rules in a Section",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pbr/sections/:section-id/rules?action=create_multiple?id={{id}}&operation=insert_top",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pbr",
								"sections",
								":section-id",
								"rules"
							],
							"query": [
								{
									"key": "action",
									"value": "create_multiple?id={{id}}"
								},
								{
									"key": "operation",
									"value": "insert_top"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Create multiple PBR rules in existing PBR section bounded by\nlimit of 1000 PBR rules per section.\n"
					},
					"response": []
				},
				{
					"name": "Read an Existing Rule",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pbr/sections/:section-id/rules/:rule-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pbr",
								"sections",
								":section-id",
								"rules",
								":rule-id"
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								},
								{
									"key": "rule-id",
									"value": "{{rule-id}}"
								}
							]
						},
						"description": "Return existing PBR rule information in a PBR section.\n"
					},
					"response": []
				},
				{
					"name": "Update an Existing Rule",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pbr/sections/:section-id/rules/:rule-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pbr",
								"sections",
								":section-id",
								"rules",
								":rule-id"
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								},
								{
									"key": "rule-id",
									"value": "{{rule-id}}"
								}
							]
						},
						"description": "Modifies existing rule in a PBR section.\n"
					},
					"response": []
				},
				{
					"name": "Delete an Existing Rule",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pbr/sections/:section-id/rules/:rule-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pbr",
								"sections",
								":section-id",
								"rules",
								":rule-id"
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								},
								{
									"key": "rule-id",
									"value": "{{rule-id}}"
								}
							]
						},
						"description": "Delete existing PBR rule in a PBR section.\n"
					},
					"response": []
				},
				{
					"name": "Get an Existing Section, Including Rules",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pbr/sections/:section-id?action=list_with_rules",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pbr",
								"sections",
								":section-id"
							],
							"query": [
								{
									"key": "action",
									"value": "list_with_rules"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Returns PBR section information with rules for a section identifier.\nWhen invoked on a section with a large number of rules, this API is supported\nonly at low rates of invocation (not more than 4-5 times per minute). The\ntypical latency of this API with about 1024 rules is about 4-5 seconds. This\nAPI should not be invoked with large payloads at automation speeds. More than\n50 rules with a large number rule references is not supported.\n\nInstead, to read PBR rules, use:\nGET /api/v1/pbr/sections/&lt;section-id&gt;/rules with the appropriate\npage_size.\n"
					},
					"response": []
				},
				{
					"name": "Get PBR section level statistics.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pbr/sections/:section-id/rules/stats",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pbr",
								"sections",
								":section-id",
								"rules",
								"stats"
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Get aggregated statistics for all rules for a given pbr section.\nData includes total number of packets, and total number of bytes for all\nPBR rules in the given section.\n"
					},
					"response": []
				},
				{
					"name": "List All PBR Sections",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pbr/sections?applied_tos={{applied_tos}}&cursor={{cursor}}&destinations={{destinations}}&exclude_applied_to_type={{exclude_applied_to_type}}&filter_type=FILTER&include_applied_to_type={{include_applied_to_type}}&included_fields={{included_fields}}&page_size=1000&services={{services}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&sources={{sources}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pbr",
								"sections"
							],
							"query": [
								{
									"key": "applied_tos",
									"value": "{{applied_tos}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "destinations",
									"value": "{{destinations}}"
								},
								{
									"key": "exclude_applied_to_type",
									"value": "{{exclude_applied_to_type}}"
								},
								{
									"key": "filter_type",
									"value": "FILTER"
								},
								{
									"key": "include_applied_to_type",
									"value": "{{include_applied_to_type}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "services",
									"value": "{{services}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sources",
									"value": "{{sources}}"
								}
							]
						},
						"description": "List all PBR section in paginated form. A default page size is limited\nto 1000 PBR sections.\n"
					},
					"response": []
				},
				{
					"name": "Create a New Empty Section",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pbr/sections?id={{id}}&operation=insert_top",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pbr",
								"sections"
							],
							"query": [
								{
									"key": "id",
									"value": "{{id}}"
								},
								{
									"key": "operation",
									"value": "insert_top"
								}
							]
						},
						"description": "Creates new empty PBR section in the system.\n"
					},
					"response": []
				},
				{
					"name": "Update an Existing Section with Rules",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pbr/sections/:section-id?action=revise_with_rules?id={{id}}&operation=insert_top",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pbr",
								"sections",
								":section-id"
							],
							"query": [
								{
									"key": "action",
									"value": "revise_with_rules?id={{id}}"
								},
								{
									"key": "operation",
									"value": "insert_top"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Modifies an existing PBR section along with its relative position\namong other PBR sections with rules. When invoked on a large number\nof rules, this API is supported only at low rates of invocation (not more\nthan 2 times per minute). The typical latency of this API with about 1024\nrules is about 15 seconds in a cluster setup. This API should not be\ninvoked with large payloads at automation speeds.\n\nInstead, to move a section above or below another section, use:\nPOST /api/v1/pbr/sections/&lt;section-id&gt;?action=revise\n\nTo modify rules, use:\nPUT /api/v1/pbr/sections/&lt;section-id&gt;/rules/&lt;rule-id&gt;\n"
					},
					"response": []
				},
				{
					"name": "Get PBR rule level statistics.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pbr/sections/:section-id/rules/:rule-id/stats",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pbr",
								"sections",
								":section-id",
								"rules",
								":rule-id",
								"stats"
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								},
								{
									"key": "rule-id",
									"value": "{{rule-id}}"
								}
							]
						},
						"description": "Get aggregated statistics for a rule for given PBR rule.\nStats include total number of packets and total number of bytes for the\nPBR rule.\n"
					},
					"response": []
				},
				{
					"name": "Update an Existing Section, including Its Position",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pbr/sections/:section-id?action=revise?id={{id}}&operation=insert_top",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pbr",
								"sections",
								":section-id"
							],
							"query": [
								{
									"key": "action",
									"value": "revise?id={{id}}"
								},
								{
									"key": "operation",
									"value": "insert_top"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Modifies an existing PBR section along with its relative position\namong other PBR sections in the system.\n"
					},
					"response": []
				},
				{
					"name": "Update an Existing Section, Including Its Rules",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pbr/sections/:section-id?action=update_with_rules",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pbr",
								"sections",
								":section-id"
							],
							"query": [
								{
									"key": "action",
									"value": "update_with_rules"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Modifies existing PBR section along with its association with rules.\nWhen invoked on a large number of rules, this API is supported only at low\nrates of invocation (not more than 2 times per minute). The typical latency\nof this API with about 1024 rules is about 15 seconds in a cluster setup.\nThis API should not be invoked with large payloads at automation speeds.\n\nInstead, to update rule content, use:\nPUT /api/v1/pbr/sections/&lt;section-id&gt;/rules/&lt;rule-id&gt;\n"
					},
					"response": []
				}
			],
			"description": "Folder for pbr"
		},
		{
			"name": "logical-routers",
			"item": [
				{
					"name": "Paginated List of Static Routes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/static-routes?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"static-routes"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Returns information about configured static routes, including the\nnetwork address and next hops for each static route.\n"
					},
					"response": []
				},
				{
					"name": "Add Static Routes on a Logical Router",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/static-routes",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"static-routes"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Adds a new static route on a Logical Router\n"
					},
					"response": []
				},
				{
					"name": "List Logical Routers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&router_type={{router_type}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "router_type",
									"value": "{{router_type}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns information about all logical routers, including the UUID, internal\nand external transit network addresses, and the router type (TIER0 or\nTIER1). You can get information for only TIER0 routers or only the TIER1\nrouters by including the router_type query parameter.\n"
					},
					"response": []
				},
				{
					"name": "Create a Logical Router",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers"
							]
						},
						"description": "Creates a logical router. The required parameters are router_type (TIER0 or\nTIER1) and edge_cluster_id (TIER0 only). Optional parameters include\ninternal and external transit network addresses.\n"
					},
					"response": []
				},
				{
					"name": "Get FIB table on a specified node for a logical router",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/forwarding-table?cursor={{cursor}}&included_fields={{included_fields}}&network_prefix={{network_prefix}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&source={{source}}&transport_node_id={{transport_node_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"forwarding-table"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "network_prefix",
									"value": "{{network_prefix}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "source",
									"value": "{{source}}"
								},
								{
									"key": "transport_node_id",
									"value": "{{transport_node_id}}"
								}
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Returns the FIB for the logical router on a node of the given transport-node-id.\nQuery parameter \"transport_node_id=<transport-node-id>\" is required.\nTo filter the result by network address, paramter \"network_prefix=<a.b.c.d/mask>\"\nneeds to be specified.\nQuery parameter \"source=realtime\" is the only supported source.\n"
					},
					"response": []
				},
				{
					"name": "Paginated List of RouteMaps",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/route-maps?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"route-maps"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Paginated List of RouteMaps"
					},
					"response": []
				},
				{
					"name": "Add RouteMap on a Logical Router",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/route-maps",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"route-maps"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Adds a new RouteMap on a Logical Router\n"
					},
					"response": []
				},
				{
					"name": "Get the statistics of a specified logical router NAT Rule",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/nat/rules/:rule-id/statistics?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"nat",
								"rules",
								":rule-id",
								"statistics"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								},
								{
									"key": "rule-id",
									"value": "{{rule-id}}"
								}
							]
						},
						"description": "Returns the summation of statistics from all nodes for the Specified\nLogical Router NAT Rule. Query parameter \"source=realtime\" is the only supported source.\n"
					},
					"response": []
				},
				{
					"name": "Get route table on a node for a logical router",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/route-table?format=csv?source={{source}}&transport_node_id={{transport_node_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"route-table"
							],
							"query": [
								{
									"key": "format",
									"value": "csv?source={{source}}"
								},
								{
									"key": "transport_node_id",
									"value": "{{transport_node_id}}"
								}
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Deprecated - Please use /logical-routers/<logical-router-id>/routing/routing-table for RIB and\n/logical-routers/<logical-router-id>/routing/forwarding-table for FIB.\nReturns the route table in CSV format for the logical router on a node of the given\ntransport-node-id. Query parameter \"transport_node_id=<transport-node-id>\" is required.\nQuery parameter \"source=realtime\" is the only supported source.\n"
					},
					"response": []
				},
				{
					"name": "Get the status for the Logical Router of the given id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/status?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"status"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Returns status for the Logical Router of the given id."
					},
					"response": []
				},
				{
					"name": "Read a specific BGP Neighbor with password on a Logical Router",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/bgp/neighbors/:id?action=show-sensitive-data",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"bgp",
								"neighbors",
								":id"
							],
							"query": [
								{
									"key": "action",
									"value": "show-sensitive-data"
								}
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Read a specific BGP Neighbor details with password on a Logical Router\n"
					},
					"response": []
				},
				{
					"name": "Read the Redistribution Configuration on a Logical Router",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/redistribution",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"redistribution"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Returns information about configured route redistribution for the specified\nlogical router.\n"
					},
					"response": []
				},
				{
					"name": "Update the Redistribution Configuration on a Logical Router",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/redistribution",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"redistribution"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Modifies existing route redistribution rules for the specified TIER0 logical\nrouter.\n"
					},
					"response": []
				},
				{
					"name": "Read a specific BGP community list from a Logical Router",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/bgp/community-lists/:community-list-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"bgp",
								"community-lists",
								":community-list-id"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								},
								{
									"key": "community-list-id",
									"value": "{{community-list-id}}"
								}
							]
						},
						"description": "Read a specific BGP community list from a Logical Router\n"
					},
					"response": []
				},
				{
					"name": "Update a specific BGP community list from a Logical Router",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/bgp/community-lists/:community-list-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"bgp",
								"community-lists",
								":community-list-id"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								},
								{
									"key": "community-list-id",
									"value": "{{community-list-id}}"
								}
							]
						},
						"description": "Update a specific BGP community list from a Logical Router\n"
					},
					"response": []
				},
				{
					"name": "Delete a specific BGP community list from a Logical Router",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/bgp/community-lists/:community-list-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"bgp",
								"community-lists",
								":community-list-id"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								},
								{
									"key": "community-list-id",
									"value": "{{community-list-id}}"
								}
							]
						},
						"description": "Delete a specific BGP community list from a Logical Router\n"
					},
					"response": []
				},
				{
					"name": "Get a specific Static Route on a Logical Router",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/static-routes/:id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"static-routes",
								":id"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Read a specific static routes on the specified logical router.\n"
					},
					"response": []
				},
				{
					"name": "Update a specific Static Route Rule on a Logical Router",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/static-routes/:id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"static-routes",
								":id"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Update a specific static route on the specified logical router.\n"
					},
					"response": []
				},
				{
					"name": "Delete a specific Static Route on a Logical Router",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/static-routes/:id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"static-routes",
								":id"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Deletes a specific static route on the specified logical router.\n"
					},
					"response": []
				},
				{
					"name": "Paginated list of BGP community lists on a Logical Router",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/bgp/community-lists?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"bgp",
								"community-lists"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Paginated list of BGP Community Lists on a Logical Router\n"
					},
					"response": []
				},
				{
					"name": "Create a new BGP community list on a Logical Router",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/bgp/community-lists",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"bgp",
								"community-lists"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Add a new BGP Community List on a Logical Router\n"
					},
					"response": []
				},
				{
					"name": "Read a static route BFD peer",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/static-routes/bfd-peers/:bfd-peer-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"static-routes",
								"bfd-peers",
								":bfd-peer-id"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								},
								{
									"key": "bfd-peer-id",
									"value": "{{bfd-peer-id}}"
								}
							]
						},
						"description": "Read the BFD peer having specified ID.\n"
					},
					"response": []
				},
				{
					"name": "Update a static route BFD peer",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/static-routes/bfd-peers/:bfd-peer-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"static-routes",
								"bfd-peers",
								":bfd-peer-id"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								},
								{
									"key": "bfd-peer-id",
									"value": "{{bfd-peer-id}}"
								}
							]
						},
						"description": "Modifies the static route BFD peer.\nModifiable parameters includes peer IP, enable flag and configuration of the BFD peer.\n"
					},
					"response": []
				},
				{
					"name": "Delete a specified static route BFD peer cofigured on a specified logical router",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/static-routes/bfd-peers/:bfd-peer-id?force=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"static-routes",
								"bfd-peers",
								":bfd-peer-id"
							],
							"query": [
								{
									"key": "force",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								},
								{
									"key": "bfd-peer-id",
									"value": "{{bfd-peer-id}}"
								}
							]
						},
						"description": "Deletes the specified BFD peer present on specified logical router.\n"
					},
					"response": []
				},
				{
					"name": "Get the Realized State of a Logical Service Router Cluster",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/service-cluster/state?barrier_id={{barrier_id}}&request_id={{request_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"service-cluster",
								"state"
							],
							"query": [
								{
									"key": "barrier_id",
									"value": "{{barrier_id}}"
								},
								{
									"key": "request_id",
									"value": "{{request_id}}"
								}
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Return realized state information of a logical service router cluster.\nAny configuration update that affects the logical service router cluster can use\nthis API to get its realized state by passing a request_id returned by the\nconfiguration change operation. e.g. Update configuration of nat, bgp, bfd, etc.\n"
					},
					"response": []
				},
				{
					"name": "Read the debug information for the logical router",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/plain; charset=utf-8"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/debug-info?format=text",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"debug-info"
							],
							"query": [
								{
									"key": "format",
									"value": "text"
								}
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "API to download below information as text which will be used\nfor debugging and troubleshooting.\n1) Logical router sub-components and ports.\n2) Routing configuration as sent to central control plane.\n3) TIER1 advertised network information.\n"
					},
					"response": []
				},
				{
					"name": "Get the status of all the BGP neighbors for the Logical Router of the given id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/bgp/neighbors/status?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&source={{source}}&transport_node_id={{transport_node_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"bgp",
								"neighbors",
								"status"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "source",
									"value": "{{source}}"
								},
								{
									"key": "transport_node_id",
									"value": "{{transport_node_id}}"
								}
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Returns the status of all the BGP neighbors for the Logical Router of the given id. To get BGP neighbors status for the logical router from particular node, parameter \"transport_node_id=<transportnode_id>\" needs to be specified. Query parameter \"source=realtime\" is the only supported source."
					},
					"response": []
				},
				{
					"name": "Get route table on a given node for a logical router",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/route-table?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&source={{source}}&transport_node_id={{transport_node_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"route-table"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "source",
									"value": "{{source}}"
								},
								{
									"key": "transport_node_id",
									"value": "{{transport_node_id}}"
								}
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Deprecated - Please use /logical-routers/<logical-router-id>/routing/routing-table for RIB and\n/logical-routers/<logical-router-id>/routing/forwarding-table for FIB.\nReturns the route table for the logical router on a node of the given transport-node-id.\nQuery parameter \"transport_node_id=<transport-node-id>\" is required.\nQuery parameter \"source=realtime\" is the only supported source.\n"
					},
					"response": []
				},
				{
					"name": "Paginated List of IPPrefixLists",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/ip-prefix-lists?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"ip-prefix-lists"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Paginated List of IPPrefixLists"
					},
					"response": []
				},
				{
					"name": "Add IPPrefixList on a Logical Router",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/ip-prefix-lists",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"ip-prefix-lists"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Adds a new IPPrefixList on a Logical Router\n"
					},
					"response": []
				},
				{
					"name": "Paginated list of BGP Neighbors on a Logical Router",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/bgp/neighbors?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"bgp",
								"neighbors"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Paginated list of BGP Neighbors on a Logical Router\n"
					},
					"response": []
				},
				{
					"name": "Add a new BGP Neighbor on a Logical Router",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/bgp/neighbors",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"bgp",
								"neighbors"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Add a new BGP Neighbor on a Logical Router\n"
					},
					"response": []
				},
				{
					"name": "Get the Realized State of a Logical Router",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/state?barrier_id={{barrier_id}}&request_id={{request_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"state"
							],
							"query": [
								{
									"key": "barrier_id",
									"value": "{{barrier_id}}"
								},
								{
									"key": "request_id",
									"value": "{{request_id}}"
								}
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Return realized state information of a logical router.\nAny configuration update that affects the logical router can use this API\nto get its realized state by passing a request_id returned by the\nconfiguration change operation. e.g. Update configuration of logical router,\nstatic routes, etc.\n"
					},
					"response": []
				},
				{
					"name": "Get FIB table on a specified node for a logical router",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/forwarding-table?format=csv?network_prefix={{network_prefix}}&source={{source}}&transport_node_id={{transport_node_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"forwarding-table"
							],
							"query": [
								{
									"key": "format",
									"value": "csv?network_prefix={{network_prefix}}"
								},
								{
									"key": "source",
									"value": "{{source}}"
								},
								{
									"key": "transport_node_id",
									"value": "{{transport_node_id}}"
								}
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Returns the FIB table in CSV format for the logical router on a node of the given\ntransport-node-id. Query parameter \"transport_node_id=<transport-node-id>\" is required.\nTo filter the result by network address, paramter \"network_prefix=<a.b.c.d/mask>\"\nneeds to be specified.\nQuery parameter \"source=realtime\" is the only supported source.\n"
					},
					"response": []
				},
				{
					"name": "Get RIB table on a specified node for a logical router",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/routing-table?cursor={{cursor}}&included_fields={{included_fields}}&network_prefix={{network_prefix}}&page_size=1000&route_source={{route_source}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&source={{source}}&transport_node_id={{transport_node_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"routing-table"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "network_prefix",
									"value": "{{network_prefix}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "route_source",
									"value": "{{route_source}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "source",
									"value": "{{source}}"
								},
								{
									"key": "transport_node_id",
									"value": "{{transport_node_id}}"
								}
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Returns the route table(RIB) for the logical router on a node of the given transport-node-id.\nQuery parameter \"transport_node_id=<transport-node-id>\" is required.\nTo filter the result by network address, parameter \"network_prefix=<a.b.c.d/mask>\"\nneeds to be specified.\nTo filter the result by route source, parameter \"route_source=<source_type>\" needs to be specified\nwhere source_type can be BGP, STATIC, CONNECTED, NSX_STATIC, TIER1_NAT or TIER0_NAT.\nIt is also possible to filter the RIB table using both network address and\nroute source filter together.\nQuery parameter \"source=realtime\" is the only supported source.\n"
					},
					"response": []
				},
				{
					"name": "Get the statistics of all rules of the logical router",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/nat/rules/statistics?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"nat",
								"rules",
								"statistics"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Returns the summation of statistics for all rules from all nodes for the Specified\nLogical Router. Also gives the per transport node statistics for provided logical router.\nThe query parameter \"source=realtime\" is not supported.\n"
					},
					"response": []
				},
				{
					"name": "Read All the Redistribution Rules on a Logical Router",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/redistribution/rules",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"redistribution",
								"rules"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Returns all the route redistribution rules for the specified\nlogical router.\n"
					},
					"response": []
				},
				{
					"name": "Update All the Redistribution Rules on a Logical Router",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/redistribution/rules",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"redistribution",
								"rules"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Modifies all route redistribution rules for the specified TIER0 logical\nrouter. Set the rules list to empty to delete/clear all rules.\n"
					},
					"response": []
				},
				{
					"name": "List static routes BFD Peers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/static-routes/bfd-peers?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"static-routes",
								"bfd-peers"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Returns information about all BFD peers created on specified logical router for static routes.\n"
					},
					"response": []
				},
				{
					"name": "Create a static hop BFD peer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/static-routes/bfd-peers",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"static-routes",
								"bfd-peers"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Creates a BFD peer for static route. The required parameters includes peer IP address.\n"
					},
					"response": []
				},
				{
					"name": "Read Logical Router",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Returns information about the specified logical router."
					},
					"response": []
				},
				{
					"name": "Update a Logical Router",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Modifies the specified logical router. Modifiable attributes include the\ninternal_transit_network, external_transit_networks, and edge_cluster_id\n(for TIER0 routers).\n"
					},
					"response": []
				},
				{
					"name": "Delete a Logical Router",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id?cascade_delete_linked_ports=false&force=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id"
							],
							"query": [
								{
									"key": "cascade_delete_linked_ports",
									"value": "false"
								},
								{
									"key": "force",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Deletes the specified logical router. You must delete associated logical\nrouter ports before you can delete a logical router. Otherwise use force\ndelete which will delete all related ports and other entities associated\nwith that LR. To force delete logical router pass force=true in query param.\n"
					},
					"response": []
				},
				{
					"name": "Read the Advertisement Rules on a Logical Router",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/advertisement/rules",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"advertisement",
								"rules"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Returns the advertisement rule list for the specified\nTIER1 logical router.\n"
					},
					"response": []
				},
				{
					"name": "Update the Advertisement Rules on a Logical Router",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/advertisement/rules",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"advertisement",
								"rules"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Modifies the advertisement rules on the specified logical\nrouter. The PUT request must include all the rules with the networks parameter. Modifiable\nparameters are networks, display_name, and description. Set the rules list to empty to delete/clear all rules.\n"
					},
					"response": []
				},
				{
					"name": "Get RIB table on a specified node for a logical router",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/routing-table?format=csv?network_prefix={{network_prefix}}&route_source={{route_source}}&source={{source}}&transport_node_id={{transport_node_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"routing-table"
							],
							"query": [
								{
									"key": "format",
									"value": "csv?network_prefix={{network_prefix}}"
								},
								{
									"key": "route_source",
									"value": "{{route_source}}"
								},
								{
									"key": "source",
									"value": "{{source}}"
								},
								{
									"key": "transport_node_id",
									"value": "{{transport_node_id}}"
								}
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Returns the route table in CSV format for the logical router on a node of the given\ntransport-node-id. Query parameter \"transport_node_id=<transport-node-id>\" is required.\nTo filter the result by network address, paramter \"network_prefix=<a.b.c.d/mask>\"\nneeds to be specified.\nTo filter the result by route source, parameter \"route_source=<source_type>\" needs to be specified\nwhere source_type can be BGP, STATIC, CONNECTED, NSX_STATIC, TIER1_NAT or TIER0_NAT.\nIt is also possible to filter the RIB table using both network address and\nroute source filter together.\nQuery parameter \"source=realtime\" is the only supported source.\n"
					},
					"response": []
				},
				{
					"name": "Update a specific BGP community list from a Logical Router",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/bgp/communty-lists/:community-list-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"bgp",
								"communty-lists",
								":community-list-id"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								},
								{
									"key": "community-list-id",
									"value": "{{community-list-id}}"
								}
							]
						},
						"description": "Update a specific BGP community list from a Logical Router\n"
					},
					"response": []
				},
				{
					"name": "Reprocesses a logical router configuration and publish updates to controller",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id?action=reprocess",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id"
							],
							"query": [
								{
									"key": "action",
									"value": "reprocess"
								}
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Reprocess logical router configuration and configuration of related entities like logical router ports, static routing, etc.\nAny missing Updates are published to controller.\n"
					},
					"response": []
				},
				{
					"name": "Get a specific IPPrefixList on a Logical Router",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/ip-prefix-lists/:id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"ip-prefix-lists",
								":id"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Read a specific IPPrefixList on the specified logical router.\n"
					},
					"response": []
				},
				{
					"name": "Update a specific IPPrefixList on a Logical Router",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/ip-prefix-lists/:id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"ip-prefix-lists",
								":id"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Update a specific IPPrefixList on the specified logical router.\n"
					},
					"response": []
				},
				{
					"name": "Delete a specific IPPrefixList on a Logical Router",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/ip-prefix-lists/:id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"ip-prefix-lists",
								":id"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Deletes a specific IPPrefixList on the specified logical router.\n"
					},
					"response": []
				},
				{
					"name": "Get a specific RouteMap on a Logical Router",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/route-maps/:id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"route-maps",
								":id"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Read a specific RouteMap on the specified logical router.\n"
					},
					"response": []
				},
				{
					"name": "Update a specific RouteMap on a Logical Router",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/route-maps/:id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"route-maps",
								":id"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Update a specific RouteMap on the specified logical router.\n"
					},
					"response": []
				},
				{
					"name": "Delete a specific RouteMap on a Logical Router",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/route-maps/:id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"route-maps",
								":id"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Deletes a specific RouteMap on the specified logical router.\n"
					},
					"response": []
				},
				{
					"name": "Read the Routing Configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Returns the routing configuration for a specified logical router.\n"
					},
					"response": []
				},
				{
					"name": "Update the Routing Configuration",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Modifies the routing configuration for a specified logical router.\n"
					},
					"response": []
				},
				{
					"name": "Read the Advertisement Configuration on a Logical Router",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/advertisement",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"advertisement"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Returns information about the routes to be advertised by the specified\nTIER1 logical router.\n"
					},
					"response": []
				},
				{
					"name": "Update the Advertisement Configuration on a Logical Router",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/advertisement",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"advertisement"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Modifies the route advertisement configuration on the specified logical router.\n"
					},
					"response": []
				},
				{
					"name": "Read a specific BGP Neighbor on a Logical Router",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/bgp/neighbors/:id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"bgp",
								"neighbors",
								":id"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Read a specific BGP Neighbor on a Logical Router\n"
					},
					"response": []
				},
				{
					"name": "Update a specific BGP Neighbor on a Logical Router",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/bgp/neighbors/:id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"bgp",
								"neighbors",
								":id"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Update a specific BGP Neighbor on a Logical Router\n"
					},
					"response": []
				},
				{
					"name": "Unset/Delete password property on specific BGP Neighbor on Logical Router",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/bgp/neighbors/:id?action={{action}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"bgp",
								"neighbors",
								":id"
							],
							"query": [
								{
									"key": "action",
									"value": "{{action}}"
								}
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Unset/Delete the password property on the specific BGP Neighbor.\nNo other property of the BgpNeighbor can be updated using this API\n"
					},
					"response": []
				},
				{
					"name": "Delete a specific BGP Neighbor on a Logical Router",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/bgp/neighbors/:id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"bgp",
								"neighbors",
								":id"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete a specific BGP Neighbor on a Logical Router\n"
					},
					"response": []
				},
				{
					"name": "Read the Routing BFD Configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/bfd-config",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"bfd-config"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Returns the BFD configuration for all routing BFD peers. This will be inherited |\n  by all BFD peers for LogicalRouter unless overriden while configuring the Peer.\n"
					},
					"response": []
				},
				{
					"name": "Update the BFD Configuration for BFD peers for routing",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/bfd-config",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"bfd-config"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Modifies the BFD configuration for routing BFD peers. Note - the configuration |\n  changes apply only to those routing BFD peers for which the BFD configuration has |\n  not been overridden at Peer level.\n"
					},
					"response": []
				},
				{
					"name": "Read the BGP Configuration on a Logical Router",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/bgp",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"bgp"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Returns information about the BGP configuration on a specified logical\nrouter. Information includes whether or not the BGP configuration is\nenabled, the AS number, and whether or not graceful\nrestart is enabled.\n"
					},
					"response": []
				},
				{
					"name": "Update the BGP Configuration on a Logical Router",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/routing/bgp",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"routing",
								"bgp"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Modifies the BGP configuration on a specified TIER0 logical router.\nModifiable parameters include enabled, graceful_restart, as_number.\n"
					},
					"response": []
				},
				{
					"name": "Re allocate edge node placement of TIER1 service routers",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id?action=reallocate",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id"
							],
							"query": [
								{
									"key": "action",
									"value": "reallocate"
								}
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "API to re allocate edge node placement for TIER1 logical router. You can\nre-allocate service routers of TIER1 in same edge cluster or different edge\ncluster. You can also place edge nodes manually and provide maximum two\nindices for HA mode ACTIVE_STANDBY. To re-allocate on new edge cluster you\nmust have existing edge cluster for TIER1 logical router. This will be\ndisruptive operation and all existing statistics of logical router will be\nremove.\n"
					},
					"response": []
				},
				{
					"name": "Get a specific NAT rule from a given logical router",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/nat/rules/:rule-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"nat",
								"rules",
								":rule-id"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								},
								{
									"key": "rule-id",
									"value": "{{rule-id}}"
								}
							]
						},
						"description": "Get a specific NAT rule from a given logical router\n"
					},
					"response": []
				},
				{
					"name": "Update a specific NAT rule from a given logical router",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/nat/rules/:rule-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"nat",
								"rules",
								":rule-id"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								},
								{
									"key": "rule-id",
									"value": "{{rule-id}}"
								}
							]
						},
						"description": "Update a specific NAT rule from a given logical router.\n"
					},
					"response": []
				},
				{
					"name": "Delete a specific NAT rule from a logical router",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/nat/rules/:rule-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"nat",
								"rules",
								":rule-id"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								},
								{
									"key": "rule-id",
									"value": "{{rule-id}}"
								}
							]
						},
						"description": "Delete a specific NAT rule from a logical router\n"
					},
					"response": []
				},
				{
					"name": "List NAT rules of the logical router",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/nat/rules?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"nat",
								"rules"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Returns paginated list of all user defined NAT rules of the specific logical router\n"
					},
					"response": []
				},
				{
					"name": "Add a NAT rule in a specific logical router",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-routers/:logical-router-id/nat/rules",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-routers",
								":logical-router-id",
								"nat",
								"rules"
							],
							"variable": [
								{
									"key": "logical-router-id",
									"value": "{{logical-router-id}}"
								}
							]
						},
						"description": "Add a NAT rule in a specific logical router.\n"
					},
					"response": []
				}
			],
			"description": "Folder for logical-routers"
		},
		{
			"name": "cluster",
			"item": [
				{
					"name": "List the specified node's Network Interfaces",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/nodes/:node-id/network/interfaces?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"nodes",
								":node-id",
								"network",
								"interfaces"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								}
							]
						},
						"description": "Returns the number of interfaces on the node and detailed\ninformation about each interface. Interface information includes MTU,\nbroadcast and host IP addresses, link and admin status, MAC address, network\nmask, and the IP configuration method (static or DHCP).\n"
					},
					"response": []
				},
				{
					"name": "Set the cluster certificate",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/api-certificate?action=set_cluster_certificate?certificate_id={{certificate_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"api-certificate"
							],
							"query": [
								{
									"key": "action",
									"value": "set_cluster_certificate?certificate_id={{certificate_id}}"
								}
							]
						},
						"description": "Sets the certificate used for the MP cluster.\nIssuing this request causes the http service to restart so that the service\ncan begin using the new certificate. When the POST request succeeds, it\ndoesn't return a valid response. The request times out because of the restart.\nThis affects all nodes in the cluster.\n"
					},
					"response": []
				},
				{
					"name": "Read cluster node runtime status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/nodes/:node-id/status?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"nodes",
								":node-id",
								"status"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								}
							]
						},
						"description": "Read aggregated runtime status of cluster node.\n"
					},
					"response": []
				},
				{
					"name": "List Cluster Node Configurations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/nodes?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"nodes"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns information about all NSX cluster nodes.\nDeprecated. Use GET /cluster to get cluster configuration.\n"
					},
					"response": []
				},
				{
					"name": "Add a controller to the cluster",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/nodes?action={{action}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"nodes"
							],
							"query": [
								{
									"key": "action",
									"value": "{{action}}"
								}
							]
						},
						"description": "Add a new controller to the NSX cluster.\nDeprecated. Use POST /cluster?action=join_cluster to join a node to cluster.\nThe controller comes with the new node.\n"
					},
					"response": []
				},
				{
					"name": "Clear the cluster certificate",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/api-certificate?action=clear_cluster_certificate?certificate_id={{certificate_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"api-certificate"
							],
							"query": [
								{
									"key": "action",
									"value": "clear_cluster_certificate?certificate_id={{certificate_id}}"
								}
							]
						},
						"description": "Clears the certificate used for the MP cluster.\nThis does not affect the certificate itself.\nIt just means that from now on, individual certificates will be used on\neach MP node. This affects all nodes in the cluster.\n"
					},
					"response": []
				},
				{
					"name": "Query Restore Request Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/restore/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"restore",
								"status"
							]
						},
						"description": "Returns status information for the specified NSX cluster restore request.\n"
					},
					"response": []
				},
				{
					"name": "Returns the status of the VM creation/deletion",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/nodes/deployments/:node-id/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"nodes",
								"deployments",
								":node-id",
								"status"
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								}
							]
						},
						"description": "Returns the current deployment or undeployment status for a VM along with\nany other relevant current information, such as error messages.\n"
					},
					"response": []
				},
				{
					"name": "List timestamps of all available Cluster Backups.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/restore/backuptimestamps?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"restore",
								"backuptimestamps"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns timestamps for all backup files that are available\non the SFTP server.\n"
					},
					"response": []
				},
				{
					"name": "Retry any failed restore operation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/restore?action=retry",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"restore"
							],
							"query": [
								{
									"key": "action",
									"value": "retry"
								}
							]
						},
						"description": "Retry any currently in-progress, failed restore operation. Only the last\nstep of the multi-step restore operation would have failed,and only that\nstep is retried. This operation is only valid when a\nGET cluster/restore/status returns a status with value FAILED. Otherwise,\na 409 response is returned.\n"
					},
					"response": []
				},
				{
					"name": "Synchronizes the repository data between nsx managers.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/node?action=repo_sync",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"node"
							],
							"query": [
								{
									"key": "action",
									"value": "repo_sync"
								}
							]
						},
						"description": "Attempts to synchronize the repository partition on nsx manager. Repository partition contains packages required for the\ninstall and upgrade of nsx components.Normally there is no need to call this API explicitely by the user.\n"
					},
					"response": []
				},
				{
					"name": "Get backup history",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/backups/history",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"backups",
								"history"
							]
						},
						"description": "Get history of previous backup operations\n"
					},
					"response": []
				},
				{
					"name": "Get backup status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/backups/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"backups",
								"status"
							]
						},
						"description": "Get status of active backup operations\n"
					},
					"response": []
				},
				{
					"name": "Read Cluster Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"status"
							]
						},
						"description": "Returns status information for the NSX cluster control role and management\nrole.\n"
					},
					"response": []
				},
				{
					"name": "Attempt to delete an auto-deployed cluster node VM",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/nodes/deployments/:node-id?action=delete?force_delete={{force_delete}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"nodes",
								"deployments",
								":node-id"
							],
							"query": [
								{
									"key": "action",
									"value": "delete?force_delete={{force_delete}}"
								}
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								}
							]
						},
						"description": "Attempts to unregister and undeploy a specified auto-deployed cluster\nnode VM. If it is a member of a cluster, then the VM will be automatically\ndetached from the cluster before being unregistered and undeployed.\nAlternatively, if the original deployment attempt failed or the VM is\nnot found, cleans up the deployment information associated with the\ndeployment attempt.\nNote: If a VM has been successfully auto-deployed, then the associated\ndeployment information will not be deleted unless and until the VM is\nsuccessfully deleted.\n"
					},
					"response": []
				},
				{
					"name": "Read the NSX Manager/Controller's Network Interface Statistics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/nodes/:node-id/network/interfaces/:interface-id/stats?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"nodes",
								":node-id",
								"network",
								"interfaces",
								":interface-id",
								"stats"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								},
								{
									"key": "interface-id",
									"value": "{{interface-id}}"
								}
							]
						},
						"description": "On the specified interface, returns the number of received (rx), transmitted\n(tx), and dropped packets; the number of bytes and errors received and\ntransmitted on the interface; and the number of detected collisions.\n"
					},
					"response": []
				},
				{
					"name": "List resources for a given instruction, to be\nshown to/executed by users.\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/restore/instruction-resources?cursor={{cursor}}&included_fields={{included_fields}}&instruction_id={{instruction_id}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"restore",
								"instruction-resources"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "instruction_id",
									"value": "{{instruction_id}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "For restore operations requiring user input e.g. performing an action,\naccepting/rejecting an action, etc. the information to be conveyed to users\nis provided in this call.\n"
					},
					"response": []
				},
				{
					"name": "Read API service properties",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/api-service",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"api-service"
							]
						},
						"description": "Read the configuration of the NSX API service.\n"
					},
					"response": []
				},
				{
					"name": "Update API service properties",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/api-service",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"api-service"
							]
						},
						"description": "Read the configuration of the NSX API service. Changes are applied to all nodes in the cluster. The API service on each node will restart after it is updated using this API. There may be a delay of up to a minute or so between the time this API call completes and when the new configuration goes into effect."
					},
					"response": []
				},
				{
					"name": "Initiate a restore operation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/restore?action=start",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"restore"
							],
							"query": [
								{
									"key": "action",
									"value": "start"
								}
							]
						},
						"description": "Start the restore of an NSX cluster, from some previously\nbacked-up configuration. This operation is only valid\nwhen a GET cluster/restore/status returns a status with value NOT_STARTED.\nOtherwise, a 409 response is returned.\n"
					},
					"response": []
				},
				{
					"name": "Read the node's Network Interface",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/nodes/:node-id/network/interfaces/:interface-id?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"nodes",
								":node-id",
								"network",
								"interfaces",
								":interface-id"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								},
								{
									"key": "interface-id",
									"value": "{{interface-id}}"
								}
							]
						},
						"description": "Returns detailed information about the specified interface. Interface\ninformation includes MTU, broadcast and host IP addresses, link and admin\nstatus, MAC address, network  mask, and the IP configuration method (static\nor DHCP).\n"
					},
					"response": []
				},
				{
					"name": "Get ssh fingerprint of remote(backup) server",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/backups?action=retrieve_ssh_fingerprint",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"backups"
							],
							"query": [
								{
									"key": "action",
									"value": "retrieve_ssh_fingerprint"
								}
							]
						},
						"description": "Get SHA256 fingerprint of ECDSA key of remote server. The caller should\nindependently verify that the key is trusted.\n"
					},
					"response": []
				},
				{
					"name": "Returns info for a cluster-node VM auto-deployment attempt",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/nodes/deployments/:node-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"nodes",
								"deployments",
								":node-id"
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								}
							]
						},
						"description": "Returns deployment request information for a specific attempted\ndeployment of a cluster node VM.\n"
					},
					"response": []
				},
				{
					"name": "Cancel any running restore operation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/restore?action=cancel",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"restore"
							],
							"query": [
								{
									"key": "action",
									"value": "cancel"
								}
							]
						},
						"description": "This operation is only valid when a restore is in suspended state. The UI user\ncan cancel any restore operation when the restore is suspended either due\nto an error, or for a user input. The API user would need to monitor the\nprogression of a restore by calling periodically\n\"/api/v1/cluster/restore/status\" API. The response object\n(ClusterRestoreStatus), contains a field \"endpoints\". The API user can cancel\nthe restore process if 'cancel' action is shown in the endpoint field. This\noperation is only valid when a GET cluster/restore/status returns a status\nwith value SUSPENDED.\n"
					},
					"response": []
				},
				{
					"name": "Advance any suspended restore operation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/restore?action=advance",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"restore"
							],
							"query": [
								{
									"key": "action",
									"value": "advance"
								}
							]
						},
						"description": "Advance any currently suspended restore operation. The operation might\nhave been suspended because (1) the user had suspended it previously, or\n(2) the operation is waiting for user input, to be provided as a\npart of the POST request body. This operation is only valid\nwhen a GET cluster/restore/status returns a status with value SUSPENDED.\nOtherwise, a 409 response is returned.\n"
					},
					"response": []
				},
				{
					"name": "Get Restore configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/restore/config",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"restore",
								"config"
							]
						},
						"description": "Get configuration information for the file server used to store backed-up files.\nFields that contain secrets (password, passphrase) are not returned.\n"
					},
					"response": []
				},
				{
					"name": "Configure Restore SFTP server credentials",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/restore/config",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"restore",
								"config"
							]
						},
						"description": "Configure file server where the backed-up files used for the Restore\noperation are available.\n"
					},
					"response": []
				},
				{
					"name": "Clear cluster virtual IP address",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/api-virtual-ip?action=clear_virtual_ip",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"api-virtual-ip"
							],
							"query": [
								{
									"key": "action",
									"value": "clear_virtual_ip"
								}
							]
						},
						"description": "Clears the cluster virtual IP address.\n"
					},
					"response": []
				},
				{
					"name": "Suspend any running restore operation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/restore?action=suspend",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"restore"
							],
							"query": [
								{
									"key": "action",
									"value": "suspend"
								}
							]
						},
						"description": "Suspend any currently running restore operation. The restore operation is\nmade up of a number of steps. When this call is issued, any currently\nrunning step is allowed to finish (successfully or with errors), and the\nnext step (and therefore the entire restore operation) is suspended until\na subsequent resume or cancel call is issued. This operation is only valid\nwhen a GET cluster/restore/status returns a status with value RUNNING.\nOtherwise, a 409 response is returned.\n"
					},
					"response": []
				},
				{
					"name": "Synchronizes the repository data between nsx managers.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/nodes/:node-id/repo_sync/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"nodes",
								":node-id",
								"repo_sync",
								"status"
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								}
							]
						},
						"description": "Returns the synchronization status for the manager represented by given <node-id>.\n"
					},
					"response": []
				},
				{
					"name": "Set cluster virtual IP address",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/api-virtual-ip?action=set_virtual_ip?ip_address={{ip_address}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"api-virtual-ip"
							],
							"query": [
								{
									"key": "action",
									"value": "set_virtual_ip?ip_address={{ip_address}}"
								}
							]
						},
						"description": "Sets the cluster virtual IP address. Note, all nodes in the management\ncluster must be in the same subnet. If not, a 409 CONFLICT status is\nreturned.\n"
					},
					"response": []
				},
				{
					"name": "Read cluster runtime status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/nodes/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"nodes",
								"status"
							]
						},
						"description": "Read aggregated runtime status of all cluster nodes.\n"
					},
					"response": []
				},
				{
					"name": "Read Cluster Node Configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/nodes/:node-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"nodes",
								":node-id"
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								}
							]
						},
						"description": "Returns information about the specified NSX cluster node.\nDeprecated. Use GET /cluster/<node-id> to get cluster node configuration.\n"
					},
					"response": []
				},
				{
					"name": "Remove a controller from the cluster",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/nodes/:node-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"nodes",
								":node-id"
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								}
							]
						},
						"description": "Removes the specified controller from the NSX cluster. Before you can\nremove a controller from the cluster, you must shut down the controller\nservice with the \"stop service controller\" command.\nDeprecated. Use POST /cluster/<node-id>?action=remove_node\nto detach a node from cluster. The controller is removed with the node.\n"
					},
					"response": []
				},
				{
					"name": "Returns info for all cluster node VM auto-deployment attempts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/nodes/deployments",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"nodes",
								"deployments"
							]
						},
						"description": "Returns request information for every attempted deployment of a cluster\nnode VM.\n"
					},
					"response": []
				},
				{
					"name": "Deploy and register a cluster node VM",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/nodes/deployments",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"nodes",
								"deployments"
							]
						},
						"description": "Deploys a cluster node VM as specified by the deployment config.\nOnce the VM is deployed and powered on, it will automatically join the\nexisting cluster.\n"
					},
					"response": []
				},
				{
					"name": "Read Cluster Configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster"
							]
						},
						"description": "Returns information about the NSX cluster configuration. An NSX cluster has\ntwo functions or purposes, commonly referred to as \"roles.\" These two roles\nare control and management. Each NSX installation has a single cluster.\nSeparate NSX clusters do not share data. In other words, a given data-plane\nnode is attached to only one cluster, not to multiple clusters.\n"
					},
					"response": []
				},
				{
					"name": "Get backup configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/backups/config",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"backups",
								"config"
							]
						},
						"description": "Get a configuration of a file server and timers for automated backup.\nFields that contain secrets (password, passphrase) are not returned.\n"
					},
					"response": []
				},
				{
					"name": "Configure backup",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/backups/config",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"backups",
								"config"
							]
						},
						"description": "Configure file server and timers for automated backup.\nIf secret fields are omitted (password, passphrase)\nthen use the previously set value.\n"
					},
					"response": []
				},
				{
					"name": "Read cluster node configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/:node-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								":node-id"
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								}
							]
						},
						"description": "Returns information about the specified NSX cluster node."
					},
					"response": []
				},
				{
					"name": "Detach a node from the Cluster",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/:node-id?action=remove_node?force={{force}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								":node-id"
							],
							"query": [
								{
									"key": "action",
									"value": "remove_node?force={{force}}"
								}
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								}
							]
						},
						"description": "Detach a node from the Cluster"
					},
					"response": []
				},
				{
					"name": "Invoke GET request on target cluster node",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/:target-node-id/:target-uri",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								":target-node-id",
								":target-uri"
							],
							"variable": [
								{
									"key": "target-node-id",
									"value": "{{target-node-id}}"
								},
								{
									"key": "target-uri",
									"value": "{{target-uri}}"
								}
							]
						},
						"description": "Invoke GET request on target cluster node"
					},
					"response": []
				},
				{
					"name": "Invoke PUT request on target cluster node",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/:target-node-id/:target-uri",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								":target-node-id",
								":target-uri"
							],
							"variable": [
								{
									"key": "target-node-id",
									"value": "{{target-node-id}}"
								},
								{
									"key": "target-uri",
									"value": "{{target-uri}}"
								}
							]
						},
						"description": "Invoke PUT request on target cluster node"
					},
					"response": []
				},
				{
					"name": "Invoke POST request on target cluster node",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/:target-node-id/:target-uri",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								":target-node-id",
								":target-uri"
							],
							"variable": [
								{
									"key": "target-node-id",
									"value": "{{target-node-id}}"
								},
								{
									"key": "target-uri",
									"value": "{{target-uri}}"
								}
							]
						},
						"description": "Invoke POST request on target cluster node"
					},
					"response": []
				},
				{
					"name": "Invoke DELETE request on target cluster node",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/:target-node-id/:target-uri",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								":target-node-id",
								":target-uri"
							],
							"variable": [
								{
									"key": "target-node-id",
									"value": "{{target-node-id}}"
								},
								{
									"key": "target-uri",
									"value": "{{target-uri}}"
								}
							]
						},
						"description": "Invoke DELETE request on target cluster node"
					},
					"response": []
				},
				{
					"name": "Read cluster virtual IP address",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/api-virtual-ip",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"api-virtual-ip"
							]
						},
						"description": "Returns the configured cluster virtual IP address or null if not configured.\n"
					},
					"response": []
				},
				{
					"name": "Read cluster certificate ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster/api-certificate",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster",
								"api-certificate"
							]
						},
						"description": "Returns the ID of the certificate that is used as the cluster certificate for MP\n"
					},
					"response": []
				}
			],
			"description": "Folder for cluster"
		},
		{
			"name": "node",
			"item": [
				{
					"name": "List node syslog exporters",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/syslog/exporters",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"syslog",
								"exporters"
							]
						},
						"description": "Returns the collection of registered syslog exporter rules, if any. The\nrules specify the collector IP address and port, and the protocol to use.\n"
					},
					"response": []
				},
				{
					"name": "Add node syslog exporter",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/syslog/exporters",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"syslog",
								"exporters"
							]
						},
						"description": "Adds a rule for exporting syslog information to a specified server. The\nrequired parameters are the rule name (exporter_name); severity level\n(emerg, alert, crit, and so on); transmission protocol (TCP or UDP); and\nserver IP address or hostname. The optional parameters are the syslog port\nnumber, which can be 1 through 65,535 (514, by default); facility level to\nuse when logging messages to syslog (kern, user, mail, and so on); and\nmessage IDs (msgids), which identify the types of messages to export.\n"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the manager service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/cm-inventory?action=stop",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"cm-inventory"
							],
							"query": [
								{
									"key": "action",
									"value": "stop"
								}
							]
						},
						"description": "Restart, start or stop the manager service"
					},
					"response": []
				},
				{
					"name": "Read network configuration properties",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/network",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"network"
							]
						},
						"description": "Read network configuration properties"
					},
					"response": []
				},
				{
					"name": "Read the NSX Manager's Name Servers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/network/name-servers",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"network",
								"name-servers"
							]
						},
						"description": "Returns the list of servers that the NSX Manager node uses to look up IP\naddresses associated with given domain names.\n"
					},
					"response": []
				},
				{
					"name": "Update the NSX Manager's Name Servers",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/network/name-servers",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"network",
								"name-servers"
							]
						},
						"description": "Modifies the list of servers that the NSX Manager node uses to look up IP\naddresses associated with given domain names. If DHCP is configured, this\nmethod returns a 409 CONFLICT error, because DHCP manages the list of name\nservers.\n"
					},
					"response": []
				},
				{
					"name": "Copy file in the file store to a remote file store",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/file-store/:file-name?action=copy_to_remote_file",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"file-store",
								":file-name"
							],
							"query": [
								{
									"key": "action",
									"value": "copy_to_remote_file"
								}
							],
							"variable": [
								{
									"key": "file-name",
									"value": "{{file-name}}"
								}
							]
						},
						"description": "Copy a file in the file store to a remote server. If you use scp or\nsftp, you must provide the remote server's SSH fingerprint. See the\n<i>NSX-T Administration Guide</i> for information and instructions\nabout finding the SSH fingerprint.\n"
					},
					"response": []
				},
				{
					"name": "Read file contents",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/octet-stream"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/file-store/:file-name/data",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"file-store",
								":file-name",
								"data"
							],
							"variable": [
								{
									"key": "file-name",
									"value": "{{file-name}}"
								}
							]
						},
						"description": "Read file contents"
					},
					"response": []
				},
				{
					"name": "Replace file contents",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/octet-stream"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/file-store/:file-name/data",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"file-store",
								":file-name",
								"data"
							],
							"variable": [
								{
									"key": "file-name",
									"value": "{{file-name}}"
								}
							]
						},
						"description": "Replace file contents"
					},
					"response": []
				},
				{
					"name": "Read Nsx upgrade agent service status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/nsx-upgrade-agent/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"nsx-upgrade-agent",
								"status"
							]
						},
						"description": "Read Nsx upgrade agent service status"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the NSX upgrade agent service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/nsx-upgrade-agent?action=restart",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"nsx-upgrade-agent"
							],
							"query": [
								{
									"key": "action",
									"value": "restart"
								}
							]
						},
						"description": "Restart, start or stop the NSX upgrade agent service"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the NTP service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/ntp?action=restart",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"ntp"
							],
							"query": [
								{
									"key": "action",
									"value": "restart"
								}
							]
						},
						"description": "Restart, start or stop the NTP service"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/manager?action=restart",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"manager"
							],
							"query": [
								{
									"key": "action",
									"value": "restart"
								}
							]
						},
						"description": "Restart, start or stop the service"
					},
					"response": []
				},
				{
					"name": "Read SNMP service properties",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/snmp",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"snmp"
							]
						},
						"description": "Read SNMP service properties"
					},
					"response": []
				},
				{
					"name": "Update SNMP service properties",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/snmp",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"snmp"
							]
						},
						"description": "Update SNMP service properties"
					},
					"response": []
				},
				{
					"name": "Read service properties",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/manager",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"manager"
							]
						},
						"description": "Read service properties"
					},
					"response": []
				},
				{
					"name": "Update service properties",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/manager",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"manager"
							]
						},
						"description": "Update service properties"
					},
					"response": []
				},
				{
					"name": "Read cluster boot manager service status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/cluster_manager/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"cluster_manager",
								"status"
							]
						},
						"description": "Read cluster boot manager service status"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the liagent service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/liagent?action=stop",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"liagent"
							],
							"query": [
								{
									"key": "action",
									"value": "stop"
								}
							]
						},
						"description": "Restart, start or stop the liagent service"
					},
					"response": []
				},
				{
					"name": "Read NTP service properties",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/ntp",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"ntp"
							]
						},
						"description": "Read NTP service properties"
					},
					"response": []
				},
				{
					"name": "Update NTP service properties",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/ntp",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"ntp"
							]
						},
						"description": "Update NTP service properties"
					},
					"response": []
				},
				{
					"name": "Stop the http service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/http?action=stop",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"http"
							],
							"query": [
								{
									"key": "action",
									"value": "stop"
								}
							]
						},
						"description": "Stop the http service"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the NSX upgrade agent service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/nsx-upgrade-agent?action=start",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"nsx-upgrade-agent"
							],
							"query": [
								{
									"key": "action",
									"value": "start"
								}
							]
						},
						"description": "Restart, start or stop the NSX upgrade agent service"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the ssh service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/ssh?action=start",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"ssh"
							],
							"query": [
								{
									"key": "action",
									"value": "start"
								}
							]
						},
						"description": "Restart, start or stop the ssh service"
					},
					"response": []
				},
				{
					"name": "Read liagent service properties",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/liagent",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"liagent"
							]
						},
						"description": "Read liagent service properties"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the Rabbit MQ service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/mgmt-plane-bus?action=stop",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"mgmt-plane-bus"
							],
							"query": [
								{
									"key": "action",
									"value": "stop"
								}
							]
						},
						"description": "Restart, start or stop the Rabbit MQ service"
					},
					"response": []
				},
				{
					"name": "Read migration coordinator service properties",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/migration-coordinator",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"migration-coordinator"
							]
						},
						"description": "Read migration coordinator service properties"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the migration coordinator service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/migration-coordinator?action=start",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"migration-coordinator"
							],
							"query": [
								{
									"key": "action",
									"value": "start"
								}
							]
						},
						"description": "Restart, start or stop the migration coordinator service"
					},
					"response": []
				},
				{
					"name": "Start the http service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/http?action=start",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"http"
							],
							"query": [
								{
									"key": "action",
									"value": "start"
								}
							]
						},
						"description": "Start the http service"
					},
					"response": []
				},
				{
					"name": "Read the NSX Manager's Network Interface",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/network/interfaces/:interface-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"network",
								"interfaces",
								":interface-id"
							],
							"variable": [
								{
									"key": "interface-id",
									"value": "{{interface-id}}"
								}
							]
						},
						"description": "Returns detailed information about the specified interface. Interface\ninformation includes MTU, broadcast and host IP addresses, link and admin\nstatus, MAC address, network  mask, and the IP configuration method.\n"
					},
					"response": []
				},
				{
					"name": "Update the NSX Manager's Network Interface",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/network/interfaces/:interface-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"network",
								"interfaces",
								":interface-id"
							],
							"variable": [
								{
									"key": "interface-id",
									"value": "{{interface-id}}"
								}
							]
						},
						"description": "Updates the specified interface properties. You cannot change\nthe properties <code>ip_configuration</code>,\n<code>ip_addresses</code>, or <code>plane</code>. NSX\nManager must have a static IP address.\nYou must use NSX CLI to configure a controller or an edge node.\n"
					},
					"response": []
				},
				{
					"name": "Read ssh service properties",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/ssh",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"ssh"
							]
						},
						"description": "Read ssh service properties"
					},
					"response": []
				},
				{
					"name": "Update ssh service properties",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/ssh",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"ssh"
							]
						},
						"description": "Update ssh service properties"
					},
					"response": []
				},
				{
					"name": "Check if RabbitMQ management port is enabled or not",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/rabbitmq-management-port",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"rabbitmq-management-port"
							]
						},
						"description": "Returns status as true if RabbitMQ management port is enabled else false"
					},
					"response": []
				},
				{
					"name": "Set RabbitMQ management port",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/rabbitmq-management-port",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"rabbitmq-management-port"
							]
						},
						"description": "Set RabbitMQ management port"
					},
					"response": []
				},
				{
					"name": "Delete RabbitMQ management port",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/rabbitmq-management-port",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"rabbitmq-management-port"
							]
						},
						"description": "Delete RabbitMQ management port"
					},
					"response": []
				},
				{
					"name": "Read task properties",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/tasks/:task-id?suppress_redirect=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"tasks",
								":task-id"
							],
							"query": [
								{
									"key": "suppress_redirect",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "task-id",
									"value": "{{task-id}}"
								}
							]
						},
						"description": "Read task properties"
					},
					"response": []
				},
				{
					"name": "Delete task",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/tasks/:task-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"tasks",
								":task-id"
							],
							"variable": [
								{
									"key": "task-id",
									"value": "{{task-id}}"
								}
							]
						},
						"description": "Delete task"
					},
					"response": []
				},
				{
					"name": "Read asynchronous task response",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/tasks/:task-id/response",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"tasks",
								":task-id",
								"response"
							],
							"variable": [
								{
									"key": "task-id",
									"value": "{{task-id}}"
								}
							]
						},
						"description": "Read asynchronous task response"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the cluster boot manager service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/cluster_manager?action=stop",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"cluster_manager"
							],
							"query": [
								{
									"key": "action",
									"value": "stop"
								}
							]
						},
						"description": "Restart, start or stop the cluster boot manager service"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop Telemetry service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/telemetry?action=stop",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"telemetry"
							],
							"query": [
								{
									"key": "action",
									"value": "stop"
								}
							]
						},
						"description": "Restart, start or stop Telemetry service"
					},
					"response": []
				},
				{
					"name": "Read node log properties",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, application/octet-stream"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/logs/:log-name",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"logs",
								":log-name"
							],
							"variable": [
								{
									"key": "log-name",
									"value": "{{log-name}}"
								}
							]
						},
						"description": "For a single specified log file, lists the filename, file size, and\nlast-modified time.\n"
					},
					"response": []
				},
				{
					"name": "Read file thumbprint",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/file-store/:file-name/thumbprint",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"file-store",
								":file-name",
								"thumbprint"
							],
							"variable": [
								{
									"key": "file-name",
									"value": "{{file-name}}"
								}
							]
						},
						"description": "Read file thumbprint"
					},
					"response": []
				},
				{
					"name": "Read Telemetry service status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/telemetry/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"telemetry",
								"status"
							]
						},
						"description": "Read Telemetry service status"
					},
					"response": []
				},
				{
					"name": "NodeMode",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/mode",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"mode"
							]
						},
						"description": "Returns current Node Mode.\n"
					},
					"response": []
				},
				{
					"name": "Read manager service status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/cm-inventory/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"cm-inventory",
								"status"
							]
						},
						"description": "Read manager service status"
					},
					"response": []
				},
				{
					"name": "Read Telemetry service properties",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/telemetry",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"telemetry"
							]
						},
						"description": "Read Telemetry service properties"
					},
					"response": []
				},
				{
					"name": "Read ui service status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/ui-service/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"ui-service",
								"status"
							]
						},
						"description": "Read ui service status"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the NSX Message Bus service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/nsx-message-bus?action=start",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"nsx-message-bus"
							],
							"query": [
								{
									"key": "action",
									"value": "start"
								}
							]
						},
						"description": "Restart, start or stop the NSX Message Bus service"
					},
					"response": []
				},
				{
					"name": "Read NSX upgrade Agent service properties",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/nsx-upgrade-agent",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"nsx-upgrade-agent"
							]
						},
						"description": "Read NSX upgrade Agent service properties"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the NSX Search service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/search?action=start",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"search"
							],
							"query": [
								{
									"key": "action",
									"value": "start"
								}
							]
						},
						"description": "Restart, start or stop the NSX Search service"
					},
					"response": []
				},
				{
					"name": "Read NTP service status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/ntp/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"ntp",
								"status"
							]
						},
						"description": "Read NTP service status"
					},
					"response": []
				},
				{
					"name": "Read node log contents",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/octet-stream"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/logs/:log-name/data",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"logs",
								":log-name",
								"data"
							],
							"variable": [
								{
									"key": "log-name",
									"value": "{{log-name}}"
								}
							]
						},
						"description": "For a single specified log file, returns the content of the log file.\nThis method supports byte-range requests. To request just a portion of a\nlog file, supply an HTTP Range header, e.g. \"Range: bytes=<start>-<end>\".\n<end> is optional, and, if omitted, the file contents from start to the\nend of the file are returned.'\n"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the cluster boot manager service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/cluster_manager?action=start",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"cluster_manager"
							],
							"query": [
								{
									"key": "action",
									"value": "start"
								}
							]
						},
						"description": "Restart, start or stop the cluster boot manager service"
					},
					"response": []
				},
				{
					"name": "List available node logs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/logs",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"logs"
							]
						},
						"description": "Returns the number of log files and lists the log files that reside on the\nNSX virtual appliance. The list includes the filename, file size,\nand last-modified time in milliseconds since epoch (1 January 1970) for each\nlog file. Knowing the last-modified time with millisecond accuracy since\nepoch is helpful when you are comparing two times, such as the time of a\nPOST request and the end time on a server.\n"
					},
					"response": []
				},
				{
					"name": "Read Rabbit MQ service status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/mgmt-plane-bus/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"mgmt-plane-bus",
								"status"
							]
						},
						"description": "Read Rabbit MQ service status"
					},
					"response": []
				},
				{
					"name": "Restart, Start and Stop the ui service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/ui-service?action=start",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"ui-service"
							],
							"query": [
								{
									"key": "action",
									"value": "start"
								}
							]
						},
						"description": "Restart, Start and Stop the ui service"
					},
					"response": []
				},
				{
					"name": "Read the NSX Manager's Search Domains",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/network/search-domains",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"network",
								"search-domains"
							]
						},
						"description": "Returns the domain list that the NSX Manager node uses to complete\nunqualified host names. When a host name does not include a fully\nqualified domain name (FQDN), the NSX Management node appends the\nfirst-listed domain name to the host name before the host name is looked\nup. The NSX Management node continues this for each entry in the domain\nlist until it finds a match.\n"
					},
					"response": []
				},
				{
					"name": "Update the NSX Manager's Search Domains",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/network/search-domains",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"network",
								"search-domains"
							]
						},
						"description": "Modifies the list of domain names that the NSX Manager node uses to complete\nunqualified host names. If DHCP is configured, this method returns\na 409 CONFLICT error, because DHCP manages the list of name servers.\n"
					},
					"response": []
				},
				{
					"name": "Restart the node management service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/node-mgmt?action=restart",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"node-mgmt"
							],
							"query": [
								{
									"key": "action",
									"value": "restart"
								}
							]
						},
						"description": "Restart the node management service"
					},
					"response": []
				},
				{
					"name": "Restart, Start and Stop the ui service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/ui-service?action=restart",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"ui-service"
							],
							"query": [
								{
									"key": "action",
									"value": "restart"
								}
							]
						},
						"description": "Restart, Start and Stop the ui service"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the ssh service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/ssh?action=restart",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"ssh"
							],
							"query": [
								{
									"key": "action",
									"value": "restart"
								}
							]
						},
						"description": "Restart, start or stop the ssh service"
					},
					"response": []
				},
				{
					"name": "Read node syslog exporter",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/syslog/exporters/:exporter-name",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"syslog",
								"exporters",
								":exporter-name"
							],
							"variable": [
								{
									"key": "exporter-name",
									"value": "{{exporter-name}}"
								}
							]
						},
						"description": "Returns information about a specific syslog collection point."
					},
					"response": []
				},
				{
					"name": "Delete node syslog exporter",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/syslog/exporters/:exporter-name",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"syslog",
								"exporters",
								":exporter-name"
							],
							"variable": [
								{
									"key": "exporter-name",
									"value": "{{exporter-name}}"
								}
							]
						},
						"description": "Removes a specified rule from the collection of syslog exporter rules.\n"
					},
					"response": []
				},
				{
					"name": "Read NSX Search service status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/search/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"search",
								"status"
							]
						},
						"description": "Read NSX Search service status"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the SNMP service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/snmp?action=start",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"snmp"
							],
							"query": [
								{
									"key": "action",
									"value": "start"
								}
							]
						},
						"description": "Restart, start or stop the SNMP service"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the SNMP service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/snmp?action=restart",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"snmp"
							],
							"query": [
								{
									"key": "action",
									"value": "restart"
								}
							]
						},
						"description": "Restart, start or stop the SNMP service"
					},
					"response": []
				},
				{
					"name": "Remove a host's fingerprint from known hosts file",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/ssh?action=remove_host_fingerprint",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"ssh"
							],
							"query": [
								{
									"key": "action",
									"value": "remove_host_fingerprint"
								}
							]
						},
						"description": "Remove a host's fingerprint from known hosts file"
					},
					"response": []
				},
				{
					"name": "Restart, Start and Stop the ui service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/ui-service?action=stop",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"ui-service"
							],
							"query": [
								{
									"key": "action",
									"value": "stop"
								}
							]
						},
						"description": "Restart, Start and Stop the ui service"
					},
					"response": []
				},
				{
					"name": "Read liagent service status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/liagent/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"liagent",
								"status"
							]
						},
						"description": "Read liagent service status"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the liagent service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/liagent?action=restart",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"liagent"
							],
							"query": [
								{
									"key": "action",
									"value": "restart"
								}
							]
						},
						"description": "Restart, start or stop the liagent service"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the cluster boot manager service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/cluster_manager?action=restart",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"cluster_manager"
							],
							"query": [
								{
									"key": "action",
									"value": "restart"
								}
							]
						},
						"description": "Restart, start or stop the cluster boot manager service"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the NSX Message Bus service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/nsx-message-bus?action=stop",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"nsx-message-bus"
							],
							"query": [
								{
									"key": "action",
									"value": "stop"
								}
							]
						},
						"description": "Restart, start or stop the NSX Message Bus service"
					},
					"response": []
				},
				{
					"name": "Update node status",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/status?action=clear_bootup_error",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"status"
							],
							"query": [
								{
									"key": "action",
									"value": "clear_bootup_error"
								}
							]
						},
						"description": "Clear node bootup status\n"
					},
					"response": []
				},
				{
					"name": "Read SNMP service status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/snmp/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"snmp",
								"status"
							]
						},
						"description": "Read SNMP service status"
					},
					"response": []
				},
				{
					"name": "Read node support bundle",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/octet-stream"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/support-bundle?all=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"support-bundle"
							],
							"query": [
								{
									"key": "all",
									"value": "false"
								}
							]
						},
						"description": "Read node support bundle"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the NTP service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/ntp?action=start",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"ntp"
							],
							"query": [
								{
									"key": "action",
									"value": "start"
								}
							]
						},
						"description": "Restart, start or stop the NTP service"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop Telemetry service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/telemetry?action=restart",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"telemetry"
							],
							"query": [
								{
									"key": "action",
									"value": "restart"
								}
							]
						},
						"description": "Restart, start or stop Telemetry service"
					},
					"response": []
				},
				{
					"name": "Read NSX Search service properties",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/search",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"search"
							]
						},
						"description": "Read NSX Search service properties"
					},
					"response": []
				},
				{
					"name": "Read ssh service status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/ssh/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"ssh",
								"status"
							]
						},
						"description": "Read ssh service status"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the SNMP service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/snmp?action=stop",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"snmp"
							],
							"query": [
								{
									"key": "action",
									"value": "stop"
								}
							]
						},
						"description": "Restart, start or stop the SNMP service"
					},
					"response": []
				},
				{
					"name": "Read node authentication policy configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/aaa/auth-policy",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"aaa",
								"auth-policy"
							]
						},
						"description": "Returns information about the currently configured authentication\npolicies on the node.\n"
					},
					"response": []
				},
				{
					"name": "Update node authentication policy configuration",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/aaa/auth-policy",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"aaa",
								"auth-policy"
							]
						},
						"description": "Update the currently configured authentication policy on the node.\nIf any of api_max_auth_failures, api_failed_auth_reset_period, or\napi_failed_auth_lockout_period are modified, the http service is\nautomatically restarted.\n"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the NSX Message Bus service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/nsx-message-bus?action=restart",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"nsx-message-bus"
							],
							"query": [
								{
									"key": "action",
									"value": "restart"
								}
							]
						},
						"description": "Restart, start or stop the NSX Message Bus service"
					},
					"response": []
				},
				{
					"name": "Verify node syslog exporter",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/syslog/exporters?action=verify",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"syslog",
								"exporters"
							],
							"query": [
								{
									"key": "action",
									"value": "verify"
								}
							]
						},
						"description": "Collect iptables rules needed for all existing syslog exporters and verify\nif the existing iptables rules are the same. If not, remove the stale rules\nand add the new rules to make sure all exporters work properly.\n"
					},
					"response": []
				},
				{
					"name": "Read cm inventory service properties",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/cm-inventory",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"cm-inventory"
							]
						},
						"description": "Read cm inventory service properties"
					},
					"response": []
				},
				{
					"name": "Cancel specified task",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/tasks/:task-id?action=cancel",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"tasks",
								":task-id"
							],
							"query": [
								{
									"key": "action",
									"value": "cancel"
								}
							],
							"variable": [
								{
									"key": "task-id",
									"value": "{{task-id}}"
								}
							]
						},
						"description": "Cancel specified task"
					},
					"response": []
				},
				{
					"name": "Read file properties",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/file-store/:file-name",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"file-store",
								":file-name"
							],
							"variable": [
								{
									"key": "file-name",
									"value": "{{file-name}}"
								}
							]
						},
						"description": "Read file properties"
					},
					"response": []
				},
				{
					"name": "Upload a file to the file store",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/octet-stream"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/file-store/:file-name",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"file-store",
								":file-name"
							],
							"variable": [
								{
									"key": "file-name",
									"value": "{{file-name}}"
								}
							]
						},
						"description": "When you issue this API, the client must specify:\n- HTTP header Content-Type:application/octet-stream.\n- Request body with the contents of the file in the filestore.\nIn the CLI, you can view the filestore with the <em>get files</em> command.\n"
					},
					"response": []
				},
				{
					"name": "Delete file",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/file-store/:file-name",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"file-store",
								":file-name"
							],
							"variable": [
								{
									"key": "file-name",
									"value": "{{file-name}}"
								}
							]
						},
						"description": "Delete file"
					},
					"response": []
				},
				{
					"name": "Read node user",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/users/:userid",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"users",
								":userid"
							],
							"variable": [
								{
									"key": "userid",
									"value": "{{userid}}"
								}
							]
						},
						"description": "Returns information about a specified user who is configued to log in to the\nNSX Manager appliance\n"
					},
					"response": []
				},
				{
					"name": "Update node user",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/users/:userid",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"users",
								":userid"
							],
							"variable": [
								{
									"key": "userid",
									"value": "{{userid}}"
								}
							]
						},
						"description": "Updates attributes of an existing NSX Manager appliance user. This method\ncannot be used to add a new user. Modifiable attributes include the\nusername, full name of the user, and password. If you specify a password in\na PUT request, it is not returned in the response. Nor is it returned in a\nGET request.\n"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the manager service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/cm-inventory?action=restart",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"cm-inventory"
							],
							"query": [
								{
									"key": "action",
									"value": "restart"
								}
							]
						},
						"description": "Restart, start or stop the manager service"
					},
					"response": []
				},
				{
					"name": "Read migration coordinator service status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/migration-coordinator/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"migration-coordinator",
								"status"
							]
						},
						"description": "Read migration coordinator service status"
					},
					"response": []
				},
				{
					"name": "Add SSH public key to authorized_keys file for node user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/users/:userid/ssh-keys?action=add_ssh_key",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"users",
								":userid",
								"ssh-keys"
							],
							"query": [
								{
									"key": "action",
									"value": "add_ssh_key"
								}
							],
							"variable": [
								{
									"key": "userid",
									"value": "{{userid}}"
								}
							]
						},
						"description": "Add SSH public key to authorized_keys file for node user"
					},
					"response": []
				},
				{
					"name": "Remove SSH public key from authorized_keys file for node user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/users/:userid/ssh-keys?action=remove_ssh_key",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"users",
								":userid",
								"ssh-keys"
							],
							"query": [
								{
									"key": "action",
									"value": "remove_ssh_key"
								}
							],
							"variable": [
								{
									"key": "userid",
									"value": "{{userid}}"
								}
							]
						},
						"description": "Remove SSH public key from authorized_keys file for node user"
					},
					"response": []
				},
				{
					"name": "List appliance management tasks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/tasks?fields={{fields}}&request_method={{request_method}}&request_path={{request_path}}&request_uri={{request_uri}}&status={{status}}&user={{user}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"tasks"
							],
							"query": [
								{
									"key": "fields",
									"value": "{{fields}}"
								},
								{
									"key": "request_method",
									"value": "{{request_method}}"
								},
								{
									"key": "request_path",
									"value": "{{request_path}}"
								},
								{
									"key": "request_uri",
									"value": "{{request_uri}}"
								},
								{
									"key": "status",
									"value": "{{status}}"
								},
								{
									"key": "user",
									"value": "{{user}}"
								}
							]
						},
						"description": "List appliance management tasks"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the migration coordinator service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/migration-coordinator?action=restart",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"migration-coordinator"
							],
							"query": [
								{
									"key": "action",
									"value": "restart"
								}
							]
						},
						"description": "Restart, start or stop the migration coordinator service"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the Rabbit MQ service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/mgmt-plane-bus?action=start",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"mgmt-plane-bus"
							],
							"query": [
								{
									"key": "action",
									"value": "start"
								}
							]
						},
						"description": "Restart, start or stop the Rabbit MQ service"
					},
					"response": []
				},
				{
					"name": "Read appliance management service status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/node-mgmt/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"node-mgmt",
								"status"
							]
						},
						"description": "Read appliance management service status"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the NTP service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/ntp?action=stop",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"ntp"
							],
							"query": [
								{
									"key": "action",
									"value": "stop"
								}
							]
						},
						"description": "Restart, start or stop the NTP service"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the syslog service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/syslog?action=restart",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"syslog"
							],
							"query": [
								{
									"key": "action",
									"value": "restart"
								}
							]
						},
						"description": "Restart, start or stop the syslog service"
					},
					"response": []
				},
				{
					"name": "Restart the http service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/http?action=restart",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"http"
							],
							"query": [
								{
									"key": "action",
									"value": "restart"
								}
							]
						},
						"description": "Restart the http service"
					},
					"response": []
				},
				{
					"name": "Read http service status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/http/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"http",
								"status"
							]
						},
						"description": "Read http service status"
					},
					"response": []
				},
				{
					"name": "Reset the logging levels to default values",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/manager?action=reset-manager-logging-levels",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"manager"
							],
							"query": [
								{
									"key": "action",
									"value": "reset-manager-logging-levels"
								}
							]
						},
						"description": "Reset the logging levels to default values"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop Telemetry service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/telemetry?action=start",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"telemetry"
							],
							"query": [
								{
									"key": "action",
									"value": "start"
								}
							]
						},
						"description": "Restart, start or stop Telemetry service"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the manager service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/cm-inventory?action=start",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"cm-inventory"
							],
							"query": [
								{
									"key": "action",
									"value": "start"
								}
							]
						},
						"description": "Restart, start or stop the manager service"
					},
					"response": []
				},
				{
					"name": "Read NSX Message Bus service status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/nsx-message-bus/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"nsx-message-bus",
								"status"
							]
						},
						"description": "Read NSX Message Bus service status"
					},
					"response": []
				},
				{
					"name": "Read node version",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/version",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"version"
							]
						},
						"description": "Read node version"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the NSX install-upgrade service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/install-upgrade?action=start",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"install-upgrade"
							],
							"query": [
								{
									"key": "action",
									"value": "start"
								}
							]
						},
						"description": "Restart, start or stop the NSX install-upgrade service"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/manager?action=start",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"manager"
							],
							"query": [
								{
									"key": "action",
									"value": "start"
								}
							]
						},
						"description": "Restart, start or stop the service"
					},
					"response": []
				},
				{
					"name": "Read cluster boot manager service properties",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/cluster_manager",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"cluster_manager"
							]
						},
						"description": "Read cluster boot manager service properties"
					},
					"response": []
				},
				{
					"name": "Copy a remote file to the file store",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/file-store/:file-name?action=copy_from_remote_file",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"file-store",
								":file-name"
							],
							"query": [
								{
									"key": "action",
									"value": "copy_from_remote_file"
								}
							],
							"variable": [
								{
									"key": "file-name",
									"value": "{{file-name}}"
								}
							]
						},
						"description": "Copy a remote file to the file store. If you use scp or sftp,\nyou must provide the remote server's SSH fingerprint. See the\n<i>NSX-T Administration Guide</i> for information and instructions\nabout finding the SSH fingerprint.\n"
					},
					"response": []
				},
				{
					"name": "Read appliance management service properties",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/node-mgmt",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"node-mgmt"
							]
						},
						"description": "Read appliance management service properties"
					},
					"response": []
				},
				{
					"name": "List node processes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/processes",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"processes"
							]
						},
						"description": "Returns the number of processes and information about each\nprocess. Process information includes 1) mem_resident, which is roughly\nequivalent to the amount of RAM, in bytes, currently used by the process,\n2) parent process ID (ppid), 3) process name, 4) process up time in milliseconds,\n5) mem_used, wich is the amount of virtual memory used by the process, in\nbytes, 6) process start time, in milliseconds since epoch, 7) process ID\n(pid), 8) CPU time, both user and the system, consumed by the process in\nmilliseconds.\n"
					},
					"response": []
				},
				{
					"name": "Read node network route",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/network/routes/:route-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"network",
								"routes",
								":route-id"
							],
							"variable": [
								{
									"key": "route-id",
									"value": "{{route-id}}"
								}
							]
						},
						"description": "Returns detailed information about a specified route in the NSX Manager\nrouting table.\n"
					},
					"response": []
				},
				{
					"name": "Delete node network route",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/network/routes/:route-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"network",
								"routes",
								":route-id"
							],
							"variable": [
								{
									"key": "route-id",
									"value": "{{route-id}}"
								}
							]
						},
						"description": "Delete a route from the NSX Manager routing table. You can modify an\nexisting route by deleting it and then posting the modified version of the\nroute. To verify, remove the route ID from the URI, issue a GET request, and\nnote the absense of the deleted route.\n"
					},
					"response": []
				},
				{
					"name": "List node files",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/file-store",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"file-store"
							]
						},
						"description": "List node files"
					},
					"response": []
				},
				{
					"name": "Get the report for Mandatory Access Control",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/octet-stream"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/hardening-policy/mandatory-access-control/report",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"hardening-policy",
								"mandatory-access-control",
								"report"
							]
						},
						"description": "Get the report for Mandatory Access Control"
					},
					"response": []
				},
				{
					"name": "Read NSX install-upgrade service status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/install-upgrade/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"install-upgrade",
								"status"
							]
						},
						"description": "Read NSX install-upgrade service status"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the ssh service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/ssh?action=stop",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"ssh"
							],
							"query": [
								{
									"key": "action",
									"value": "stop"
								}
							]
						},
						"description": "Restart, start or stop the ssh service"
					},
					"response": []
				},
				{
					"name": "Create directory in remote file server",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/file-store?action=create_remote_directory",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"file-store"
							],
							"query": [
								{
									"key": "action",
									"value": "create_remote_directory"
								}
							]
						},
						"description": "Create a directory on the remote remote server. Supports only SFTP.\nYou must provide the remote server's SSH fingerprint. See the\n<i>NSX Administration Guide</i> for information and instructions\nabout finding the SSH fingerprint.\n"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the syslog service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/syslog?action=start",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"syslog"
							],
							"query": [
								{
									"key": "action",
									"value": "start"
								}
							]
						},
						"description": "Restart, start or stop the syslog service"
					},
					"response": []
				},
				{
					"name": "Read syslog service properties",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/syslog",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"syslog"
							]
						},
						"description": "Read syslog service properties"
					},
					"response": []
				},
				{
					"name": "Read the NSX Manager's Network Interface Statistics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/network/interfaces/:interface-id/stats",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"network",
								"interfaces",
								":interface-id",
								"stats"
							],
							"variable": [
								{
									"key": "interface-id",
									"value": "{{interface-id}}"
								}
							]
						},
						"description": "On the specified interface, returns the number of received (rx), transmitted\n(tx), and dropped packets; the number of bytes and errors received and\ntransmitted on the interface; and the number of detected collisions.\n"
					},
					"response": []
				},
				{
					"name": "Read syslog service status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/syslog/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"syslog",
								"status"
							]
						},
						"description": "Read syslog service status"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the migration coordinator service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/migration-coordinator?action=stop",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"migration-coordinator"
							],
							"query": [
								{
									"key": "action",
									"value": "stop"
								}
							]
						},
						"description": "Restart, start or stop the migration coordinator service"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the syslog service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/syslog?action=stop",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"syslog"
							],
							"query": [
								{
									"key": "action",
									"value": "stop"
								}
							]
						},
						"description": "Restart, start or stop the syslog service"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/manager?action=stop",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"manager"
							],
							"query": [
								{
									"key": "action",
									"value": "stop"
								}
							]
						},
						"description": "Restart, start or stop the service"
					},
					"response": []
				},
				{
					"name": "Read ui service properties",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/ui-service",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"ui-service"
							]
						},
						"description": "Read ui service properties"
					},
					"response": []
				},
				{
					"name": "List node users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/users",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"users"
							]
						},
						"description": "Returns the list of users configued to log in to the NSX Manager appliance.\n"
					},
					"response": []
				},
				{
					"name": "Read AAA provider vIDM properties",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/aaa/providers/vidm",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"aaa",
								"providers",
								"vidm"
							]
						},
						"description": "Read AAA provider vIDM properties"
					},
					"response": []
				},
				{
					"name": "Update AAA provider vIDM properties",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/aaa/providers/vidm",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"aaa",
								"providers",
								"vidm"
							]
						},
						"description": "Update AAA provider vIDM properties"
					},
					"response": []
				},
				{
					"name": "List node services",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services"
							]
						},
						"description": "Returns a list of all services available on the NSX Manager applicance.\n"
					},
					"response": []
				},
				{
					"name": "List the NSX Manager's Network Interfaces",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/network/interfaces",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"network",
								"interfaces"
							]
						},
						"description": "Returns the number of interfaces on the NSX Manager appliance and detailed\ninformation about each interface. Interface information includes MTU,\nbroadcast and host IP addresses, link and admin status, MAC address, network\nmask, and the IP configuration method (static or DHCP).\n"
					},
					"response": []
				},
				{
					"name": "Read AAA provider vIDM status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/aaa/providers/vidm/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"aaa",
								"providers",
								"vidm",
								"status"
							]
						},
						"description": "Read AAA provider vIDM status"
					},
					"response": []
				},
				{
					"name": "Update http service certificate",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/http?action=apply_certificate?certificate_id={{certificate_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"http"
							],
							"query": [
								{
									"key": "action",
									"value": "apply_certificate?certificate_id={{certificate_id}}"
								}
							]
						},
						"description": "Applies a security certificate to the http service. In the POST request,\nthe CERTIFICATE_ID references a certificate created with the\n/api/v1/trust-management APIs. Issuing this request causes the http service\nto restart so that the service can begin using the new certificate. When the\nPOST request succeeds, it doesn't return a valid response. The request times\nout because of the restart.\n"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the NSX Search service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/search?action=stop",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"search"
							],
							"query": [
								{
									"key": "action",
									"value": "stop"
								}
							]
						},
						"description": "Restart, start or stop the NSX Search service"
					},
					"response": []
				},
				{
					"name": "List SSH keys from authorized_keys file for node user",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/users/:userid/ssh-keys",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"users",
								":userid",
								"ssh-keys"
							],
							"variable": [
								{
									"key": "userid",
									"value": "{{userid}}"
								}
							]
						},
						"description": "Returns a list of all SSH keys from authorized_keys file for node user\n"
					},
					"response": []
				},
				{
					"name": "Update UC state properties",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/install-upgrade/uc-state",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"install-upgrade",
								"uc-state"
							]
						},
						"description": "Update UC state properties"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the NSX Search service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/search?action=restart",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"search"
							],
							"query": [
								{
									"key": "action",
									"value": "restart"
								}
							]
						},
						"description": "Restart, start or stop the NSX Search service"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the NSX install-upgrade service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/install-upgrade?action=restart",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"install-upgrade"
							],
							"query": [
								{
									"key": "action",
									"value": "restart"
								}
							]
						},
						"description": "Restart, start or stop the NSX install-upgrade service"
					},
					"response": []
				},
				{
					"name": "Read service status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/manager/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"manager",
								"status"
							]
						},
						"description": "Read service status"
					},
					"response": []
				},
				{
					"name": "Read NSX Message Bus service properties",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/nsx-message-bus",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"nsx-message-bus"
							]
						},
						"description": "Read NSX Message Bus service properties"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the NSX install-upgrade service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/install-upgrade?action=stop",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"install-upgrade"
							],
							"query": [
								{
									"key": "action",
									"value": "stop"
								}
							]
						},
						"description": "Restart, start or stop the NSX install-upgrade service"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the NSX upgrade agent service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/nsx-upgrade-agent?action=stop",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"nsx-upgrade-agent"
							],
							"query": [
								{
									"key": "action",
									"value": "stop"
								}
							]
						},
						"description": "Restart, start or stop the NSX upgrade agent service"
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the Rabbit MQ service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/mgmt-plane-bus?action=restart",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"mgmt-plane-bus"
							],
							"query": [
								{
									"key": "action",
									"value": "restart"
								}
							]
						},
						"description": "Restart, start or stop the Rabbit MQ service"
					},
					"response": []
				},
				{
					"name": "Gets the enable status for Mandatory Access Control",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/hardening-policy/mandatory-access-control",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"hardening-policy",
								"mandatory-access-control"
							]
						},
						"description": "Gets the enable status for Mandatory Access Control"
					},
					"response": []
				},
				{
					"name": "Enable or disable  Mandatory Access Control",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/hardening-policy/mandatory-access-control",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"hardening-policy",
								"mandatory-access-control"
							]
						},
						"description": "Enable or disable  Mandatory Access Control"
					},
					"response": []
				},
				{
					"name": "Read NSX install-upgrade service properties",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/install-upgrade",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"install-upgrade"
							]
						},
						"description": "Read NSX install-upgrade service properties"
					},
					"response": []
				},
				{
					"name": "Update NSX install-upgrade service properties",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/install-upgrade",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"install-upgrade"
							]
						},
						"description": "Update NSX install-upgrade service properties"
					},
					"response": []
				},
				{
					"name": "Read node properties",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node"
							]
						},
						"description": "Returns information about the NSX Manager appliance. Information includes\nrelease number, time zone, system time, kernel version, message of the day\n(motd), and host name.\n"
					},
					"response": []
				},
				{
					"name": "Update node properties",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node"
							]
						},
						"description": "Modifies NSX Manager appliance properties. Modifiable properties include the\ntimezone, message of the day (motd), and hostname. The NSX Manager\nnode_version, system_time, and kernel_version are read only and cannot be\nmodified with this method.\n"
					},
					"response": []
				},
				{
					"name": "Read http service properties",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/http",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"http"
							]
						},
						"description": "This API is deprecated.  Read the configuration of the\nhttp service by calling the GET /api/v1/cluster/api-service API.\n"
					},
					"response": []
				},
				{
					"name": "Update http service properties",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/http",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"http"
							]
						},
						"description": "This API is deprecated.  Make changes to the http service\nconfiguration by calling the PUT /api/v1/cluster/api-service API.\n"
					},
					"response": []
				},
				{
					"name": "Read node process",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/processes/:process-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"processes",
								":process-id"
							],
							"variable": [
								{
									"key": "process-id",
									"value": "{{process-id}}"
								}
							]
						},
						"description": "Returns information for a specified process ID (pid)."
					},
					"response": []
				},
				{
					"name": "Restart, start or stop the liagent service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/liagent?action=start",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"liagent"
							],
							"query": [
								{
									"key": "action",
									"value": "start"
								}
							]
						},
						"description": "Restart, start or stop the liagent service"
					},
					"response": []
				},
				{
					"name": "Read Rabbit MQ service properties",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/services/mgmt-plane-bus",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"services",
								"mgmt-plane-bus"
							]
						},
						"description": "Read Rabbit MQ service properties"
					},
					"response": []
				},
				{
					"name": "Read node status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"status"
							]
						},
						"description": "Returns information about the NSX Manager appliance's file system, CPU,\nmemory, disk usage, and uptime.\n"
					},
					"response": []
				},
				{
					"name": "List node network routes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/network/routes",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"network",
								"routes"
							]
						},
						"description": "Returns detailed information about each route in the NSX Manager routing\ntable. Route information includes the route type (default, static, and so\non), a unique route identifier, the route metric, the protocol from which\nthe route was learned, the route source (which is the preferred egress\ninterface), the route destination, and the route scope. The route scope\nrefers to the distance to the destination network: The \"host\" scope leads to\na destination address on the NSX Manager, such as a loopback address;\nthe \"link\" scope leads to a destination on the local network; and the\n\"global\" scope leads to addresses that are more than one hop away.\n"
					},
					"response": []
				},
				{
					"name": "Create node network route",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node/network/routes",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node",
								"network",
								"routes"
							]
						},
						"description": "Add a route to the NSX Manager routing table. For static routes, the\nroute_type, interface_id, netmask, and destination are required parameters.\nFor default routes, the route_type, gateway address, and interface_id\nare required. For blackhole routes, the route_type and destination are\nrequired. All other parameters are optional. When you add a static route,\nthe scope and route_id are created automatically. When you add a default or\nblackhole route, the route_id is created automatically. The route_id is\nread-only, meaning that it cannot be modified. All other properties can be\nmodified by deleting and readding the route.\n"
					},
					"response": []
				}
			],
			"description": "Folder for node"
		},
		{
			"name": "upgrade",
			"item": [
				{
					"name": "Get summary of nodes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/nodes-summary",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"nodes-summary"
							]
						},
						"description": "Get summary of nodes, which includes node count for each type and component version."
					},
					"response": []
				},
				{
					"name": "Pause upgrade",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/plan?action=pause",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"plan"
							],
							"query": [
								{
									"key": "action",
									"value": "pause"
								}
							]
						},
						"description": "Pause the upgrade. Upgrade will be paused after upgrade of all\nthe nodes currently in progress is completed either successfully\nor with failure. User can make changes in the upgrade plan when\nthe upgrade is paused.\n"
					},
					"response": []
				},
				{
					"name": "Get uploaded upgrade bundle information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/bundles/:bundle-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"bundles",
								":bundle-id"
							],
							"variable": [
								{
									"key": "bundle-id",
									"value": "{{bundle-id}}"
								}
							]
						},
						"description": "Get uploaded upgrade bundle information\n"
					},
					"response": []
				},
				{
					"name": "Return information of all upgrade unit groups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/upgrade-unit-groups?component_type={{component_type}}&cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&summary=false&sync=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"upgrade-unit-groups"
							],
							"query": [
								{
									"key": "component_type",
									"value": "{{component_type}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "summary",
									"value": "false"
								},
								{
									"key": "sync",
									"value": "false"
								}
							]
						},
						"description": "Return information of all upgrade unit groups in the\nupgrade plan.  If request parameter summary is set to true, then\nonly count of upgrade units will be returned, upgrade units list\nwill be empty. If request parameter component type is specified,\nthen all upgrade unit groups for that component will be returned.\n"
					},
					"response": []
				},
				{
					"name": "Create a group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/upgrade-unit-groups",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"upgrade-unit-groups"
							]
						},
						"description": "Create a group of upgrade units.\n"
					},
					"response": []
				},
				{
					"name": "Get the version whitelist",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/version-whitelist",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"version-whitelist"
							]
						},
						"description": "Get whitelist of versions for different components"
					},
					"response": []
				},
				{
					"name": "Fetch upgrade bundle from given url",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/bundles",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"bundles"
							]
						},
						"description": "Fetches the upgrade bundle from url. The call returns after fetch is initiated.\nCheck status by periodically retrieving upgrade bundle upload status\nusing GET /upgrade/bundles/<bundle-id>/upload-status.\nThe upload is complete when the status is SUCCESS.\n"
					},
					"response": []
				},
				{
					"name": "Get upgrade units stats",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/upgrade-units-stats?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&sync=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"upgrade-units-stats"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sync",
									"value": "false"
								}
							]
						},
						"description": "Get upgrade units stats"
					},
					"response": []
				},
				{
					"name": "Get upgrade units aggregate-info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/upgrade-units/aggregate-info?component_type={{component_type}}&cursor={{cursor}}&group_id={{group_id}}&has_errors=false&included_fields={{included_fields}}&metadata={{metadata}}&page_size=1000&selection_status=ALL&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&upgrade_unit_display_name={{upgrade_unit_display_name}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"upgrade-units",
								"aggregate-info"
							],
							"query": [
								{
									"key": "component_type",
									"value": "{{component_type}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "group_id",
									"value": "{{group_id}}"
								},
								{
									"key": "has_errors",
									"value": "false"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "metadata",
									"value": "{{metadata}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "selection_status",
									"value": "ALL"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "upgrade_unit_display_name",
									"value": "{{upgrade_unit_display_name}}"
								}
							]
						},
						"description": "Get upgrade units aggregate-info"
					},
					"response": []
				},
				{
					"name": "Accept end user license agreement\n",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/eula/accept",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"eula",
								"accept"
							]
						},
						"description": "Accept end user license agreement\n"
					},
					"response": []
				},
				{
					"name": "Start upgrade",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/plan?action=start",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"plan"
							],
							"query": [
								{
									"key": "action",
									"value": "start"
								}
							]
						},
						"description": "Start the upgrade. Upgrade will start as per the upgrade plan.\n"
					},
					"response": []
				},
				{
					"name": "Get the version whitelist for the specified component",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/version-whitelist/:component_type",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"version-whitelist",
								":component_type"
							],
							"variable": [
								{
									"key": "component_type",
									"value": "{{component_type}}"
								}
							]
						},
						"description": "Get whitelist of versions for a component. Component can include HOST, EDGE, CCP, MP"
					},
					"response": []
				},
				{
					"name": "Update the version whitelist for the specified component type",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/version-whitelist/:component_type",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"version-whitelist",
								":component_type"
							],
							"variable": [
								{
									"key": "component_type",
									"value": "{{component_type}}"
								}
							]
						},
						"description": "Update the version whitelist for the specified component type (HOST, EDGE, CCP, MP)."
					},
					"response": []
				},
				{
					"name": "Reorder an upgrade unit within the upgrade unit group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/upgrade-unit-groups/:group-id/upgrade-unit/:upgrade-unit-id?action=reorder",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"upgrade-unit-groups",
								":group-id",
								"upgrade-unit",
								":upgrade-unit-id"
							],
							"query": [
								{
									"key": "action",
									"value": "reorder"
								}
							],
							"variable": [
								{
									"key": "group-id",
									"value": "{{group-id}}"
								},
								{
									"key": "upgrade-unit-id",
									"value": "{{upgrade-unit-id}}"
								}
							]
						},
						"description": "Reorder an upgrade unit within the upgrade unit group by placing it\nbefore/after the specified upgrade unit\n"
					},
					"response": []
				},
				{
					"name": "Get upgrade-coordinator upgrade status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/uc-upgrade-status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"uc-upgrade-status"
							]
						},
						"description": "Get upgrade-coordinator upgrade status\n"
					},
					"response": []
				},
				{
					"name": "Return aggregate information of all upgrade unit groups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/upgrade-unit-groups/aggregate-info?component_type={{component_type}}&cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&summary=false&sync=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"upgrade-unit-groups",
								"aggregate-info"
							],
							"query": [
								{
									"key": "component_type",
									"value": "{{component_type}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "summary",
									"value": "false"
								},
								{
									"key": "sync",
									"value": "false"
								}
							]
						},
						"description": "Return information of all upgrade unit groups in the\nupgrade plan.  If request parameter summary is set to true, then\nonly count of upgrade units will be returned, upgrade units list\nwill be empty. If request parameter component type is specified,\nthen all upgrade unit groups for that component will be returned.\n"
					},
					"response": []
				},
				{
					"name": "Get a specific upgrade unit",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/upgrade-units/:upgrade-unit-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"upgrade-units",
								":upgrade-unit-id"
							],
							"variable": [
								{
									"key": "upgrade-unit-id",
									"value": "{{upgrade-unit-id}}"
								}
							]
						},
						"description": "Get a specific upgrade unit"
					},
					"response": []
				},
				{
					"name": "Reorder upgrade unit group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/upgrade-unit-groups/:group-id?action=reorder",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"upgrade-unit-groups",
								":group-id"
							],
							"query": [
								{
									"key": "action",
									"value": "reorder"
								}
							],
							"variable": [
								{
									"key": "group-id",
									"value": "{{group-id}}"
								}
							]
						},
						"description": "Reorder an upgrade unit group by placing it before/after\nthe specified upgrade unit group.\n"
					},
					"response": []
				},
				{
					"name": "Get uploaded upgrade bundle upload status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/bundles/:bundle-id/upload-status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"bundles",
								":bundle-id",
								"upload-status"
							],
							"variable": [
								{
									"key": "bundle-id",
									"value": "{{bundle-id}}"
								}
							]
						},
						"description": "Get uploaded upgrade bundle upload status\n"
					},
					"response": []
				},
				{
					"name": "Continue upgrade",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/plan?action=continue?component_type={{component_type}}&skip=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"plan"
							],
							"query": [
								{
									"key": "action",
									"value": "continue?component_type={{component_type}}"
								},
								{
									"key": "skip",
									"value": "false"
								}
							]
						},
						"description": "Continue the upgrade. Resumes the upgrade from the point where\nit was paused.\n"
					},
					"response": []
				},
				{
					"name": "Cancel upgrade bundle upload",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/bundles/:bundle-id?action=cancel_upload",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"bundles",
								":bundle-id"
							],
							"query": [
								{
									"key": "action",
									"value": "cancel_upload"
								}
							],
							"variable": [
								{
									"key": "bundle-id",
									"value": "{{bundle-id}}"
								}
							]
						},
						"description": "Cancel upload of upgrade bundle. This API works only when bundle upload is\nin-progress and will not work during post-processing of upgrade bundle. If\nbundle upload is in-progress, then the API call returns http OK response\nafter cancelling the upload and deleting partially uploaded bundle.\n"
					},
					"response": []
				},
				{
					"name": "Add upgrade units to specified upgrade unit group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/upgrade-unit-groups/:group-id?action=add_upgrade_units",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"upgrade-unit-groups",
								":group-id"
							],
							"query": [
								{
									"key": "action",
									"value": "add_upgrade_units"
								}
							],
							"variable": [
								{
									"key": "group-id",
									"value": "{{group-id}}"
								}
							]
						},
						"description": "Add upgrade units to specified upgrade unit group. The upgrade\nunits will be added at the end of the upgrade unit list.\n"
					},
					"response": []
				},
				{
					"name": "Execute post-upgrade checks",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/:component-type?action=execute_post_upgrade_checks",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								":component-type"
							],
							"query": [
								{
									"key": "action",
									"value": "execute_post_upgrade_checks"
								}
							],
							"variable": [
								{
									"key": "component-type",
									"value": "{{component-type}}"
								}
							]
						},
						"description": "Run pre-defined checks to identify issues after upgrade of a component. The\nresults of the checks are added to the respective upgrade units\naggregate-info. The progress and status of post-upgrade checks is part of\naggregate-info of individual upgrade unit groups.\nReturns HTTP status 500 with error code 30953 if execution of post-upgrade\nchecks is already in progress.\n"
					},
					"response": []
				},
				{
					"name": "Get upgrade units",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/upgrade-units?component_type={{component_type}}&current_version={{current_version}}&cursor={{cursor}}&group_id={{group_id}}&has_warnings=false&included_fields={{included_fields}}&metadata={{metadata}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&upgrade_unit_type={{upgrade_unit_type}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"upgrade-units"
							],
							"query": [
								{
									"key": "component_type",
									"value": "{{component_type}}"
								},
								{
									"key": "current_version",
									"value": "{{current_version}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "group_id",
									"value": "{{group_id}}"
								},
								{
									"key": "has_warnings",
									"value": "false"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "metadata",
									"value": "{{metadata}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "upgrade_unit_type",
									"value": "{{upgrade_unit_type}}"
								}
							]
						},
						"description": "Get upgrade units"
					},
					"response": []
				},
				{
					"name": "Return the content of end user license agreement\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/eula/content?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&value_format={{value_format}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"eula",
								"content"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "value_format",
									"value": "{{value_format}}"
								}
							]
						},
						"description": "Return the content of end user license agreement in the specified format.\nBy default, it's pure string without line break\n"
					},
					"response": []
				},
				{
					"name": "Returns information about upgrade checks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/upgrade-checks-info?component_type={{component_type}}&cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"upgrade-checks-info"
							],
							"query": [
								{
									"key": "component_type",
									"value": "{{component_type}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns information of pre-upgrade and post-upgrade checks. If request\nparameter component type is specified, then returns information about\nall pre-upgrade and post-upgrade for the component. Otherwise returns\ninformation of checks across all component types.\n"
					},
					"response": []
				},
				{
					"name": "Get upgrade status summary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/status-summary?component_type={{component_type}}&selection_status=ALL&show_history={{show_history}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"status-summary"
							],
							"query": [
								{
									"key": "component_type",
									"value": "{{component_type}}"
								},
								{
									"key": "selection_status",
									"value": "ALL"
								},
								{
									"key": "show_history",
									"value": "{{show_history}}"
								}
							]
						},
						"description": "Get upgrade status summary"
					},
					"response": []
				},
				{
					"name": "Get upgrade status for group",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/upgrade-unit-groups/:group-id/status?cursor={{cursor}}&has_errors=false&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"upgrade-unit-groups",
								":group-id",
								"status"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "has_errors",
									"value": "false"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							],
							"variable": [
								{
									"key": "group-id",
									"value": "{{group-id}}"
								}
							]
						},
						"description": "Get upgrade status for upgrade units in the specified group. User can\nspecify whether to show only the upgrade units with errors.\n"
					},
					"response": []
				},
				{
					"name": "Returns pre-upgrade checks in csv format",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/pre-upgrade-checks?format=csv",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"pre-upgrade-checks"
							],
							"query": [
								{
									"key": "format",
									"value": "csv"
								}
							]
						},
						"description": "Returns pre-upgrade checks in csv format\n"
					},
					"response": []
				},
				{
					"name": "Upgrade selected units",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/plan?action=upgrade_selected_units",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"plan"
							],
							"query": [
								{
									"key": "action",
									"value": "upgrade_selected_units"
								}
							]
						},
						"description": "Upgrades, Resumes the upgrade of a selected set of units.\n"
					},
					"response": []
				},
				{
					"name": "Get upgrade status for upgrade unit groups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/upgrade-unit-groups-status?component_type={{component_type}}&cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"upgrade-unit-groups-status"
							],
							"query": [
								{
									"key": "component_type",
									"value": "{{component_type}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Get upgrade status for upgrade unit groups"
					},
					"response": []
				},
				{
					"name": "Get upgrade summary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/summary",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"summary"
							]
						},
						"description": "Get upgrade summary"
					},
					"response": []
				},
				{
					"name": "Get list of nodes across all types",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/nodes?component_type={{component_type}}&component_version={{component_version}}&cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"nodes"
							],
							"query": [
								{
									"key": "component_type",
									"value": "{{component_type}}"
								},
								{
									"key": "component_version",
									"value": "{{component_version}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Get list of nodes. If request parameter component type is specified, then\nall nodes for that component will be returned. If request parameter component\nversion is specified, then all nodes at that version will be returned.\n"
					},
					"response": []
				},
				{
					"name": "Get functional state of the upgrade coordinator",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/functional-state",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"functional-state"
							]
						},
						"description": "Get the functional state of the upgrade coordinator.\n"
					},
					"response": []
				},
				{
					"name": "Get upgrade history",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/history",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"history"
							]
						},
						"description": "Get upgrade history"
					},
					"response": []
				},
				{
					"name": "Upload upgrade bundle",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"value": "{{file}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/bundles?action=upload",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"bundles"
							],
							"query": [
								{
									"key": "action",
									"value": "upload"
								}
							]
						},
						"description": "Upload the upgrade bundle. This call returns after upload is completed.\nYou can check bundle processing status periodically by retrieving upgrade\nbundle upload status to find out if the upload and processing is completed.\n"
					},
					"response": []
				},
				{
					"name": "Get upgrade plan settings for the component",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/plan/:component_type/settings",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"plan",
								":component_type",
								"settings"
							],
							"variable": [
								{
									"key": "component_type",
									"value": "{{component_type}}"
								}
							]
						},
						"description": "Get the upgrade plan settings for the component.\n"
					},
					"response": []
				},
				{
					"name": "Update upgrade plan settings for the component",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/plan/:component_type/settings",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"plan",
								":component_type",
								"settings"
							],
							"variable": [
								{
									"key": "component_type",
									"value": "{{component_type}}"
								}
							]
						},
						"description": "Update the upgrade plan settings for the component.\n"
					},
					"response": []
				},
				{
					"name": "Return the acceptance status of end user license agreement\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/eula/acceptance",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"eula",
								"acceptance"
							]
						},
						"description": "Return the acceptance status of end user license agreement\n"
					},
					"response": []
				},
				{
					"name": "Reset upgrade plan to default plan",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/plan?action=reset?component_type={{component_type}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"plan"
							],
							"query": [
								{
									"key": "action",
									"value": "reset?component_type={{component_type}}"
								}
							]
						},
						"description": "Reset the upgrade plan to default plan. User has an option to change\nthe default plan. But if after making changes, user wants to go\nback to the default plan, this is the way to do so.\n"
					},
					"response": []
				},
				{
					"name": "Return upgrade unit group information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/upgrade-unit-groups/:group-id?summary=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"upgrade-unit-groups",
								":group-id"
							],
							"query": [
								{
									"key": "summary",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "group-id",
									"value": "{{group-id}}"
								}
							]
						},
						"description": "Returns information about a specific upgrade unit group in the\nupgrade plan.  If request parameter summary is set to true, then\nonly count of upgrade units will be returned, upgrade units list\nwill be empty.\n"
					},
					"response": []
				},
				{
					"name": "Update the upgrade unit group",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/upgrade-unit-groups/:group-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"upgrade-unit-groups",
								":group-id"
							],
							"variable": [
								{
									"key": "group-id",
									"value": "{{group-id}}"
								}
							]
						},
						"description": "Update the specified upgrade unit group. Removal of upgrade units from the\ngroup using this is not allowed. An error will be returned in that case.\nFollowing extended_configuration is supported:\n\nKey: upgrade_mode\nSupported values: maintenance_mode,in_place\nDefault: maintenance_mode\n\nKey: maintenance_mode_config_vsan_mode\nSupported values: evacuate_all_data, ensure_object_accessibility, no_action\nDefault: ensure_object_accessibility\n\nKey: maintenance_mode_config_evacuate_powered_off_vms\nSupported values: true, false\nDefault: false\n\nKey: rebootless_upgrade\nSupported values: true, false\nDefault: true\n"
					},
					"response": []
				},
				{
					"name": "Delete the upgrade unit group",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade/upgrade-unit-groups/:group-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade",
								"upgrade-unit-groups",
								":group-id"
							],
							"variable": [
								{
									"key": "group-id",
									"value": "{{group-id}}"
								}
							]
						},
						"description": "Delete the specified group.\nNOTE - A group can be deleted only if it is empty.\nIf user tries to delete a group containing one\nor more upgrade units, the operation will fail and an error\nwill be returned.\n"
					},
					"response": []
				}
			],
			"description": "Folder for upgrade"
		},
		{
			"name": "traceflows",
			"item": [
				{
					"name": "Get the Traceflow round status and result summary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/traceflows/:traceflow-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"traceflows",
								":traceflow-id"
							],
							"variable": [
								{
									"key": "traceflow-id",
									"value": "{{traceflow-id}}"
								}
							]
						},
						"description": "Get the Traceflow round status and result summary"
					},
					"response": []
				},
				{
					"name": "Delete the Traceflow round",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/traceflows/:traceflow-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"traceflows",
								":traceflow-id"
							],
							"variable": [
								{
									"key": "traceflow-id",
									"value": "{{traceflow-id}}"
								}
							]
						},
						"description": "Delete the Traceflow round"
					},
					"response": []
				},
				{
					"name": "List all Traceflow rounds",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/traceflows?cursor={{cursor}}&included_fields={{included_fields}}&lport_id={{lport_id}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"traceflows"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "lport_id",
									"value": "{{lport_id}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "List all Traceflow rounds; if a logical port id is given as a query parameter,\nonly those originated from the logical port are returned.\n"
					},
					"response": []
				},
				{
					"name": "Initiate a Traceflow Operation on the Specified Port",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/traceflows",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"traceflows"
							]
						},
						"description": "Initiate a Traceflow Operation on the Specified Port"
					},
					"response": []
				},
				{
					"name": "Get observations for the Traceflow round",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/traceflows/:traceflow-id/observations?component_name={{component_name}}&component_type={{component_type}}&cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&resource_type={{resource_type}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&transport_node_name={{transport_node_name}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"traceflows",
								":traceflow-id",
								"observations"
							],
							"query": [
								{
									"key": "component_name",
									"value": "{{component_name}}"
								},
								{
									"key": "component_type",
									"value": "{{component_type}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "resource_type",
									"value": "{{resource_type}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "transport_node_name",
									"value": "{{transport_node_name}}"
								}
							],
							"variable": [
								{
									"key": "traceflow-id",
									"value": "{{traceflow-id}}"
								}
							]
						},
						"description": "Get observations for the Traceflow round"
					},
					"response": []
				}
			],
			"description": "Folder for traceflows"
		},
		{
			"name": "vpn",
			"item": [
				{
					"name": "Get status summary of all existing L2VPN sessions.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/l2vpn/sessions/summary?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"l2vpn",
								"sessions",
								"summary"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							]
						},
						"description": "Load all the existing L2VPN sessions and return the status summary of all L2VPN sessions. Query parameter source supports only cached mode."
					},
					"response": []
				},
				{
					"name": "Get L2VPN session status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/l2vpn/sessions/:session-id/status?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"l2vpn",
								"sessions",
								":session-id",
								"status"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "session-id",
									"value": "{{session-id}}"
								}
							]
						},
						"description": "Aggregated status of L2VPN session. Query parameter source=realtime|cached is supported."
					},
					"response": []
				},
				{
					"name": "Get IPSec VPN peer endpoint",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/peer-endpoints/:ipsec-vpn-peer-endpoint-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"peer-endpoints",
								":ipsec-vpn-peer-endpoint-id"
							],
							"variable": [
								{
									"key": "ipsec-vpn-peer-endpoint-id",
									"value": "{{ipsec-vpn-peer-endpoint-id}}"
								}
							]
						},
						"description": "Get custom IPSec VPN peer endpoint."
					},
					"response": []
				},
				{
					"name": "Edit custom IPSecPeerEndpoint",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/peer-endpoints/:ipsec-vpn-peer-endpoint-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"peer-endpoints",
								":ipsec-vpn-peer-endpoint-id"
							],
							"variable": [
								{
									"key": "ipsec-vpn-peer-endpoint-id",
									"value": "{{ipsec-vpn-peer-endpoint-id}}"
								}
							]
						},
						"description": "Edit custom IPSec peer endpoint. System owned endpoints are non editable."
					},
					"response": []
				},
				{
					"name": "Delete custom IPSec VPN peer endpoint",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/peer-endpoints/:ipsec-vpn-peer-endpoint-id?force=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"peer-endpoints",
								":ipsec-vpn-peer-endpoint-id"
							],
							"query": [
								{
									"key": "force",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "ipsec-vpn-peer-endpoint-id",
									"value": "{{ipsec-vpn-peer-endpoint-id}}"
								}
							]
						},
						"description": "Delete custom IPSec VPN peer endpoint. All references are strong references and dependent peer endpoints can not be deleted if being referenced."
					},
					"response": []
				},
				{
					"name": "Get IPSec tunnel profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/tunnel-profiles/:ipsec-vpn-tunnel-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"tunnel-profiles",
								":ipsec-vpn-tunnel-profile-id"
							],
							"variable": [
								{
									"key": "ipsec-vpn-tunnel-profile-id",
									"value": "{{ipsec-vpn-tunnel-profile-id}}"
								}
							]
						},
						"description": "Get custom IPSec Tunnel Profile."
					},
					"response": []
				},
				{
					"name": "Edit custom IPSecTunnelProfile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/tunnel-profiles/:ipsec-vpn-tunnel-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"tunnel-profiles",
								":ipsec-vpn-tunnel-profile-id"
							],
							"variable": [
								{
									"key": "ipsec-vpn-tunnel-profile-id",
									"value": "{{ipsec-vpn-tunnel-profile-id}}"
								}
							]
						},
						"description": "Edit custom IPSec Tunnel Profile. System owned profiles are non editable."
					},
					"response": []
				},
				{
					"name": "Delete custom IPSecTunnelProfile",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/tunnel-profiles/:ipsec-vpn-tunnel-profile-id?force=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"tunnel-profiles",
								":ipsec-vpn-tunnel-profile-id"
							],
							"query": [
								{
									"key": "force",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "ipsec-vpn-tunnel-profile-id",
									"value": "{{ipsec-vpn-tunnel-profile-id}}"
								}
							]
						},
						"description": "Delete custom IPSec Tunnel Profile."
					},
					"response": []
				},
				{
					"name": "Get L2VPN session remote mac for logical switch",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/l2vpn/sessions/:session-id/remote-mac?logical_switch_id={{logical_switch_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"l2vpn",
								"sessions",
								":session-id",
								"remote-mac"
							],
							"query": [
								{
									"key": "logical_switch_id",
									"value": "{{logical_switch_id}}"
								}
							],
							"variable": [
								{
									"key": "session-id",
									"value": "{{session-id}}"
								}
							]
						},
						"description": "Get L2VPN session remote mac for logical switch."
					},
					"response": []
				},
				{
					"name": "Cumulative statistics for one IKE service instance",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/services/:service-id/summary?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"services",
								":service-id",
								"summary"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								}
							]
						},
						"description": "Cumulative statistics for one IKE service instance. Query parameter source supports only cached mode."
					},
					"response": []
				},
				{
					"name": "Get IPSec local endpoint list result",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/local-endpoints?cursor={{cursor}}&included_fields={{included_fields}}&ipsec_vpn_service_id={{ipsec_vpn_service_id}}&logical_router_id={{logical_router_id}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"local-endpoints"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "ipsec_vpn_service_id",
									"value": "{{ipsec_vpn_service_id}}"
								},
								{
									"key": "logical_router_id",
									"value": "{{logical_router_id}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Get paginated list of all local endpoints."
					},
					"response": []
				},
				{
					"name": "Create custom local endpoint",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/local-endpoints",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"local-endpoints"
							]
						},
						"description": "Create custom IPSec local endpoint."
					},
					"response": []
				},
				{
					"name": "Get IPSecVPNPeerEndpoint List Result",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/peer-endpoints?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"peer-endpoints"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Get paginated list of all peer endpoint."
					},
					"response": []
				},
				{
					"name": "Create custom peer endpoint",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/peer-endpoints",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"peer-endpoints"
							]
						},
						"description": "Create custom IPSec peer endpoint."
					},
					"response": []
				},
				{
					"name": "Get a L2VPN session",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/l2vpn/sessions/:l2vpn-session-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"l2vpn",
								"sessions",
								":l2vpn-session-id"
							],
							"variable": [
								{
									"key": "l2vpn-session-id",
									"value": "{{l2vpn-session-id}}"
								}
							]
						},
						"description": "Get a specific L2VPN session"
					},
					"response": []
				},
				{
					"name": "Edit a L2VPN session",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/l2vpn/sessions/:l2vpn-session-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"l2vpn",
								"sessions",
								":l2vpn-session-id"
							],
							"variable": [
								{
									"key": "l2vpn-session-id",
									"value": "{{l2vpn-session-id}}"
								}
							]
						},
						"description": "Edit a specific L2VPN session"
					},
					"response": []
				},
				{
					"name": "Delete a L2VPN session",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/l2vpn/sessions/:l2vpn-session-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"l2vpn",
								"sessions",
								":l2vpn-session-id"
							],
							"variable": [
								{
									"key": "l2vpn-session-id",
									"value": "{{l2vpn-session-id}}"
								}
							]
						},
						"description": "Delete a specific L2VPN session. If there are any logical switch ports attached to it, those needs to be deleted first."
					},
					"response": []
				},
				{
					"name": "Get IPSec VPN peer endpoint with PSK",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/peer-endpoints/:ipsec-vpn-peer-endpoint-id?action=show-sensitive-data",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"peer-endpoints",
								":ipsec-vpn-peer-endpoint-id"
							],
							"query": [
								{
									"key": "action",
									"value": "show-sensitive-data"
								}
							],
							"variable": [
								{
									"key": "ipsec-vpn-peer-endpoint-id",
									"value": "{{ipsec-vpn-peer-endpoint-id}}"
								}
							]
						},
						"description": "Get custom IPSec VPN peer endpoint with PSK."
					},
					"response": []
				},
				{
					"name": "Get all L2VPN sessions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/l2vpn/sessions?cursor={{cursor}}&included_fields={{included_fields}}&l2vpn_service_id={{l2vpn_service_id}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"l2vpn",
								"sessions"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "l2vpn_service_id",
									"value": "{{l2vpn_service_id}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Get paginated list of all L2VPN sessions"
					},
					"response": []
				},
				{
					"name": "Create L2VPN session",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/l2vpn/sessions",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"l2vpn",
								"sessions"
							]
						},
						"description": "Create L2VPN session and bind to a L2VPNService"
					},
					"response": []
				},
				{
					"name": "Get IKE Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/ike-profiles/:ipsec-vpn-ike-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"ike-profiles",
								":ipsec-vpn-ike-profile-id"
							],
							"variable": [
								{
									"key": "ipsec-vpn-ike-profile-id",
									"value": "{{ipsec-vpn-ike-profile-id}}"
								}
							]
						},
						"description": "Get custom IKE Profile, given the particular id."
					},
					"response": []
				},
				{
					"name": "Edit custom IKE Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/ike-profiles/:ipsec-vpn-ike-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"ike-profiles",
								":ipsec-vpn-ike-profile-id"
							],
							"variable": [
								{
									"key": "ipsec-vpn-ike-profile-id",
									"value": "{{ipsec-vpn-ike-profile-id}}"
								}
							]
						},
						"description": "Edit custom IKE Profile. System owned profiles are non editable."
					},
					"response": []
				},
				{
					"name": "Delete custom IKE Profile",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/ike-profiles/:ipsec-vpn-ike-profile-id?force=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"ike-profiles",
								":ipsec-vpn-ike-profile-id"
							],
							"query": [
								{
									"key": "force",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "ipsec-vpn-ike-profile-id",
									"value": "{{ipsec-vpn-ike-profile-id}}"
								}
							]
						},
						"description": "Delete custom IKE Profile. Profile can not be deleted if profile has references to it."
					},
					"response": []
				},
				{
					"name": "Get IPSec VPN session statistics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/sessions/:session-id/statistics?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"sessions",
								":session-id",
								"statistics"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "session-id",
									"value": "{{session-id}}"
								}
							]
						},
						"description": "Get statistics of a vpn session across all tunnels and IKE session. Query parameter \"source=realtime\" is the only supported source."
					},
					"response": []
				},
				{
					"name": "Get all L2VPN services",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/l2vpn/services?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"l2vpn",
								"services"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Get paginated list of all L2VPN services"
					},
					"response": []
				},
				{
					"name": "Create L2VPN service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/l2vpn/services",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"l2vpn",
								"services"
							]
						},
						"description": "Create L2VPN service for a given logical router"
					},
					"response": []
				},
				{
					"name": "Get peer codes for the L2VpnSession",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/l2vpn/sessions/:l2vpn-session-id/peer-codes",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"l2vpn",
								"sessions",
								":l2vpn-session-id",
								"peer-codes"
							],
							"variable": [
								{
									"key": "l2vpn-session-id",
									"value": "{{l2vpn-session-id}}"
								}
							]
						},
						"description": "Get peer codes for the L2VPN session to program the remote side of the tunnel."
					},
					"response": []
				},
				{
					"name": "Reset the statistics of the given VPN session",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/sessions/:session-id/statistics?action=reset",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"sessions",
								":session-id",
								"statistics"
							],
							"query": [
								{
									"key": "action",
									"value": "reset"
								}
							],
							"variable": [
								{
									"key": "session-id",
									"value": "{{session-id}}"
								}
							]
						},
						"description": "Reset the statistics of the given VPN session."
					},
					"response": []
				},
				{
					"name": "VPN session summary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/sessions/summary?site_id={{site_id}}&source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"sessions",
								"summary"
							],
							"query": [
								{
									"key": "site_id",
									"value": "{{site_id}}"
								},
								{
									"key": "source",
									"value": "{{source}}"
								}
							]
						},
						"description": "VPN session summary gets summary per vpn sessions and IKE session. Query parameter source supports only cached mode."
					},
					"response": []
				},
				{
					"name": "Get the Realized State of a IPSec VPN Session",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/sessions/:ipsec-vpn-session-id/state?barrier_id={{barrier_id}}&request_id={{request_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"sessions",
								":ipsec-vpn-session-id",
								"state"
							],
							"query": [
								{
									"key": "barrier_id",
									"value": "{{barrier_id}}"
								},
								{
									"key": "request_id",
									"value": "{{request_id}}"
								}
							],
							"variable": [
								{
									"key": "ipsec-vpn-session-id",
									"value": "{{ipsec-vpn-session-id}}"
								}
							]
						},
						"description": "Return realized state information of a ipsec vpn session.\nAny configuration update that affects the ipsec vpn session can use this API\nto get its realized state by passing a request_id returned by the\nconfiguration change operation. e.g. Update configuration of ipsec vpn session,\nservice, endpoints, profiles, etc.\nIt will return a service disabled error, if the ipsec vpn service associated\nwith the session is disabled.\n"
					},
					"response": []
				},
				{
					"name": "Get L2VPN service",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/l2vpn/services/:l2vpn-service-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"l2vpn",
								"services",
								":l2vpn-service-id"
							],
							"variable": [
								{
									"key": "l2vpn-service-id",
									"value": "{{l2vpn-service-id}}"
								}
							]
						},
						"description": "Get a specific L2VPN service"
					},
					"response": []
				},
				{
					"name": "Edit a L2VPN service",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/l2vpn/services/:l2vpn-service-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"l2vpn",
								"services",
								":l2vpn-service-id"
							],
							"variable": [
								{
									"key": "l2vpn-service-id",
									"value": "{{l2vpn-service-id}}"
								}
							]
						},
						"description": "Edit a specific L2VPN service"
					},
					"response": []
				},
				{
					"name": "Delete a L2VPN service",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/l2vpn/services/:l2vpn-service-id?force=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"l2vpn",
								"services",
								":l2vpn-service-id"
							],
							"query": [
								{
									"key": "force",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "l2vpn-service-id",
									"value": "{{l2vpn-service-id}}"
								}
							]
						},
						"description": "Delete a specific L2VPN service. If there are any L2VpnSessions on this L2VpnService, those needs to be deleted first."
					},
					"response": []
				},
				{
					"name": "Get IPSec VPN IKE session status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/sessions/:session-id/status?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"sessions",
								":session-id",
								"status"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "session-id",
									"value": "{{session-id}}"
								}
							]
						},
						"description": "List status of IPSec session. Query parameter source supports both realtime and cached mode."
					},
					"response": []
				},
				{
					"name": "Fetch IPSec VPN session",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/sessions/:ipsec-vpn-session-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"sessions",
								":ipsec-vpn-session-id"
							],
							"variable": [
								{
									"key": "ipsec-vpn-session-id",
									"value": "{{ipsec-vpn-session-id}}"
								}
							]
						},
						"description": "Fetch IPSec VPN session."
					},
					"response": []
				},
				{
					"name": "Edit IPSec VPN session",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/sessions/:ipsec-vpn-session-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"sessions",
								":ipsec-vpn-session-id"
							],
							"variable": [
								{
									"key": "ipsec-vpn-session-id",
									"value": "{{ipsec-vpn-session-id}}"
								}
							]
						},
						"description": "Edit IPSec VPN session."
					},
					"response": []
				},
				{
					"name": "Delete IPSec VPN session",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/sessions/:ipsec-vpn-session-id?force=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"sessions",
								":ipsec-vpn-session-id"
							],
							"query": [
								{
									"key": "force",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "ipsec-vpn-session-id",
									"value": "{{ipsec-vpn-session-id}}"
								}
							]
						},
						"description": "Delete IPSec VPN session."
					},
					"response": []
				},
				{
					"name": "Get IPSec dead peer detection (DPD) profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/dpd-profiles/:ipsec-vpn-dpd-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"dpd-profiles",
								":ipsec-vpn-dpd-profile-id"
							],
							"variable": [
								{
									"key": "ipsec-vpn-dpd-profile-id",
									"value": "{{ipsec-vpn-dpd-profile-id}}"
								}
							]
						},
						"description": "Get IPSec dead peer detection (DPD) profile."
					},
					"response": []
				},
				{
					"name": "Edit IPSec dead peer detection (DPD) profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/dpd-profiles/:ipsec-vpn-dpd-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"dpd-profiles",
								":ipsec-vpn-dpd-profile-id"
							],
							"variable": [
								{
									"key": "ipsec-vpn-dpd-profile-id",
									"value": "{{ipsec-vpn-dpd-profile-id}}"
								}
							]
						},
						"description": "Edit IPSec dead peer detection (DPD) profile."
					},
					"response": []
				},
				{
					"name": "Delete dead peer detection (DPD) profile",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/dpd-profiles/:ipsec-vpn-dpd-profile-id?force=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"dpd-profiles",
								":ipsec-vpn-dpd-profile-id"
							],
							"query": [
								{
									"key": "force",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "ipsec-vpn-dpd-profile-id",
									"value": "{{ipsec-vpn-dpd-profile-id}}"
								}
							]
						},
						"description": "Delete dead peer detection (DPD) profile."
					},
					"response": []
				},
				{
					"name": "Get IPSec dead peer detection (DPD)  profile list result",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/dpd-profiles?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"dpd-profiles"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Get paginated list of all dead peer detection (DPD) profiles."
					},
					"response": []
				},
				{
					"name": "Create dead peer detection (DPD) profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/dpd-profiles",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"dpd-profiles"
							]
						},
						"description": "Create dead peer detection (DPD) profile. Any change in profile affects all sessions consuming this profile."
					},
					"response": []
				},
				{
					"name": "Get IPSec VPN session list result",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/sessions?cursor={{cursor}}&included_fields={{included_fields}}&ipsec_vpn_service_id={{ipsec_vpn_service_id}}&logical_router_id={{logical_router_id}}&page_size=1000&session_type={{session_type}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"sessions"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "ipsec_vpn_service_id",
									"value": "{{ipsec_vpn_service_id}}"
								},
								{
									"key": "logical_router_id",
									"value": "{{logical_router_id}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "session_type",
									"value": "{{session_type}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Get paginated list of all IPSec VPN sessions."
					},
					"response": []
				},
				{
					"name": "Create new VPN session",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/sessions",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"sessions"
							]
						},
						"description": "Create new VPN session."
					},
					"response": []
				},
				{
					"name": "Get custom IPSec local endpoint",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/local-endpoints/:ipsec-vpn-local-endpoint-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"local-endpoints",
								":ipsec-vpn-local-endpoint-id"
							],
							"variable": [
								{
									"key": "ipsec-vpn-local-endpoint-id",
									"value": "{{ipsec-vpn-local-endpoint-id}}"
								}
							]
						},
						"description": "Get custom IPSec local endpoint."
					},
					"response": []
				},
				{
					"name": "Edit custom IPSec local endpoint",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/local-endpoints/:ipsec-vpn-local-endpoint-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"local-endpoints",
								":ipsec-vpn-local-endpoint-id"
							],
							"variable": [
								{
									"key": "ipsec-vpn-local-endpoint-id",
									"value": "{{ipsec-vpn-local-endpoint-id}}"
								}
							]
						},
						"description": "Edit custom IPSec local endpoint."
					},
					"response": []
				},
				{
					"name": "Delete custom IPSec local endpoint",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/local-endpoints/:ipsec-vpn-local-endpoint-id?force=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"local-endpoints",
								":ipsec-vpn-local-endpoint-id"
							],
							"query": [
								{
									"key": "force",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "ipsec-vpn-local-endpoint-id",
									"value": "{{ipsec-vpn-local-endpoint-id}}"
								}
							]
						},
						"description": "Delete custom IPSec local endpoint."
					},
					"response": []
				},
				{
					"name": "Get IPSec VPN service",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/services/:ipsec-vpn-service-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"services",
								":ipsec-vpn-service-id"
							],
							"variable": [
								{
									"key": "ipsec-vpn-service-id",
									"value": "{{ipsec-vpn-service-id}}"
								}
							]
						},
						"description": "Get IPSec VPN service for given logical router."
					},
					"response": []
				},
				{
					"name": "Edit IPSec VPN service",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/services/:ipsec-vpn-service-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"services",
								":ipsec-vpn-service-id"
							],
							"variable": [
								{
									"key": "ipsec-vpn-service-id",
									"value": "{{ipsec-vpn-service-id}}"
								}
							]
						},
						"description": "Edit IPSec VPN service for given logical router."
					},
					"response": []
				},
				{
					"name": "Delete IPSec VPN service",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/services/:ipsec-vpn-service-id?force=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"services",
								":ipsec-vpn-service-id"
							],
							"query": [
								{
									"key": "force",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "ipsec-vpn-service-id",
									"value": "{{ipsec-vpn-service-id}}"
								}
							]
						},
						"description": "Delete IPSec VPN service for given router."
					},
					"response": []
				},
				{
					"name": "Get IPSec VPN service list result",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/services?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"services"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Get paginated list of all IPSec VPN services."
					},
					"response": []
				},
				{
					"name": "Create VPN service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/services",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"services"
							]
						},
						"description": "Create VPN service for given logical router."
					},
					"response": []
				},
				{
					"name": "List IKE profiles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/ike-profiles?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"ike-profiles"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Get paginated list of all IKE Profiles."
					},
					"response": []
				},
				{
					"name": "Create custom internet key exchange (IKE) Profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/ike-profiles",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"ike-profiles"
							]
						},
						"description": "Create custom internet key exchange (IKE) Profile. IKE Profile is a reusable profile that captures IKE and phase one negotiation parameters. System will be pre provisioned with system owned non editable default IKE profile and suggested set of profiles that can be used for peering with popular remote peers like AWS VPN. User can create custom profiles as needed. Any change in profile affects all sessions consuming this profile."
					},
					"response": []
				},
				{
					"name": "Get L2VPN session statistics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/l2vpn/sessions/:session-id/statistics?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"l2vpn",
								"sessions",
								":session-id",
								"statistics"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "session-id",
									"value": "{{session-id}}"
								}
							]
						},
						"description": "Get statistics of a L2VPN session. Query parameter source=realtime is the only supported source."
					},
					"response": []
				},
				{
					"name": "Get IPSecTunnelProfile List Result",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/tunnel-profiles?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"tunnel-profiles"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Get paginated list of all IPSecTunnelProfiles."
					},
					"response": []
				},
				{
					"name": "Create custom IPSec tunnel profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/tunnel-profiles",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"tunnel-profiles"
							]
						},
						"description": "Create custom IPSec tunnel profile. IPSec tunnel profile is a reusable profile that captures phase two negotiation parameters and tunnel properties. System will be provisioned with system owned non editable default IPSec tunnel profile. Any change in profile affects all sessions consuming this profile."
					},
					"response": []
				},
				{
					"name": "Get VPN configuration for the peer site",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/plain; charset=utf-8"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/vpn/ipsec/sessions/:ipsec-vpn-session-id/peer-config",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"vpn",
								"ipsec",
								"sessions",
								":ipsec-vpn-session-id",
								"peer-config"
							],
							"variable": [
								{
									"key": "ipsec-vpn-session-id",
									"value": "{{ipsec-vpn-session-id}}"
								}
							]
						},
						"description": "API to download VPN configuration for the peer site. The configuration contains pre-shared key and secret; be careful when sharing or storing it."
					},
					"response": []
				}
			],
			"description": "Folder for vpn"
		},
		{
			"name": "fabric",
			"item": [
				{
					"name": "Return Runtime Status Information for given Nodes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/nodes/status?node_ids={{node_ids}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"nodes",
								"status"
							],
							"query": [
								{
									"key": "node_ids",
									"value": "{{node_ids}}"
								}
							]
						},
						"description": "Returns connectivity, heartbeat, and version information about all fabric nodes\n(host or edge).\nThis api is deprecated as part of FN+TN unification. Please use Transport Node\nStatus API.\n"
					},
					"response": []
				},
				{
					"name": "Get the module details of a Fabric Node\nThis api is deprecated, use Transport Node API to get fabric node\nmodules.\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/nodes/:node-id/modules",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"nodes",
								":node-id",
								"modules"
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								}
							]
						},
						"description": "Get the module details of a Fabric Node\nThis api is deprecated, use Transport Node API to get fabric node\nmodules.\n"
					},
					"response": []
				},
				{
					"name": "Update tags applied to a virtual machine",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/virtual-machines?action=update_tags",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"virtual-machines"
							],
							"query": [
								{
									"key": "action",
									"value": "update_tags"
								}
							]
						},
						"description": "Update tags applied to the virtual machine. External id of the virtual machine will be specified in the request body. Request body should contain all the tags to be applied. To clear all tags, provide an empty list. User can apply maximum 25 tags on a virtual machine. The remaining 5 are reserved for system defined tags."
					},
					"response": []
				},
				{
					"name": "Return runtime status information for a compute manager",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/compute-managers/:compute-manager-id/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"compute-managers",
								":compute-manager-id",
								"status"
							],
							"variable": [
								{
									"key": "compute-manager-id",
									"value": "{{compute-manager-id}}"
								}
							]
						},
						"description": "Returns connection and version information about a compute manager\n"
					},
					"response": []
				},
				{
					"name": "Return the List of Compute Collections",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/compute-collections?cm_local_id={{cm_local_id}}&cursor={{cursor}}&discovered_node_id={{discovered_node_id}}&display_name={{display_name}}&external_id={{external_id}}&included_fields={{included_fields}}&node_id={{node_id}}&origin_id={{origin_id}}&origin_type={{origin_type}}&owner_id={{owner_id}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"compute-collections"
							],
							"query": [
								{
									"key": "cm_local_id",
									"value": "{{cm_local_id}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "discovered_node_id",
									"value": "{{discovered_node_id}}"
								},
								{
									"key": "display_name",
									"value": "{{display_name}}"
								},
								{
									"key": "external_id",
									"value": "{{external_id}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "node_id",
									"value": "{{node_id}}"
								},
								{
									"key": "origin_id",
									"value": "{{origin_id}}"
								},
								{
									"key": "origin_type",
									"value": "{{origin_type}}"
								},
								{
									"key": "owner_id",
									"value": "{{owner_id}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns information about all compute collections."
					},
					"response": []
				},
				{
					"name": "Restart the inventory sync for the node if it is paused currently.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/nodes/:node-id?action=restart_inventory_sync",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"nodes",
								":node-id"
							],
							"query": [
								{
									"key": "action",
									"value": "restart_inventory_sync"
								}
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								}
							]
						},
						"description": "Restart the inventory sync for the node if it is currently internally paused.\nAfter this action the next inventory sync coming from the node is processed.\nThis api is deprecated as part of FN+TN unification. Please use Transport Node API\nto restart inventory sync of node.\n"
					},
					"response": []
				},
				{
					"name": "Invoke GET request on target fabric node",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/nodes/:target-node-id/:target-uri",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"nodes",
								":target-node-id",
								":target-uri"
							],
							"variable": [
								{
									"key": "target-node-id",
									"value": "{{target-node-id}}"
								},
								{
									"key": "target-uri",
									"value": "{{target-uri}}"
								}
							]
						},
						"description": "Invoke GET request on target fabric node"
					},
					"response": []
				},
				{
					"name": "Invoke PUT request on target fabric node",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/nodes/:target-node-id/:target-uri",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"nodes",
								":target-node-id",
								":target-uri"
							],
							"variable": [
								{
									"key": "target-node-id",
									"value": "{{target-node-id}}"
								},
								{
									"key": "target-uri",
									"value": "{{target-uri}}"
								}
							]
						},
						"description": "Invoke PUT request on target fabric node"
					},
					"response": []
				},
				{
					"name": "Invoke POST request on target fabric node",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/nodes/:target-node-id/:target-uri",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"nodes",
								":target-node-id",
								":target-uri"
							],
							"variable": [
								{
									"key": "target-node-id",
									"value": "{{target-node-id}}"
								},
								{
									"key": "target-uri",
									"value": "{{target-uri}}"
								}
							]
						},
						"description": "Invoke POST request on target fabric node"
					},
					"response": []
				},
				{
					"name": "Invoke DELETE request on target fabric node",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/nodes/:target-node-id/:target-uri",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"nodes",
								":target-node-id",
								":target-uri"
							],
							"variable": [
								{
									"key": "target-node-id",
									"value": "{{target-node-id}}"
								},
								{
									"key": "target-uri",
									"value": "{{target-uri}}"
								}
							]
						},
						"description": "Invoke DELETE request on target fabric node"
					},
					"response": []
				},
				{
					"name": "Read the node's Network Interface",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/nodes/:node-id/network/interfaces/:interface-id?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"nodes",
								":node-id",
								"network",
								"interfaces",
								":interface-id"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								},
								{
									"key": "interface-id",
									"value": "{{interface-id}}"
								}
							]
						},
						"description": "Returns detailed information about the specified interface. Interface\ninformation includes MTU, broadcast and host IP addresses, link and admin\nstatus, MAC address, network  mask, and the IP configuration method (static\nor DHCP).\nThis api is deprecated as part of FN+TN unification. Please use Transport\nNode API to get interface details of a node.\n"
					},
					"response": []
				},
				{
					"name": "Return Discovered Node Information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/discovered-nodes/:node-ext-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"discovered-nodes",
								":node-ext-id"
							],
							"variable": [
								{
									"key": "node-ext-id",
									"value": "{{node-ext-id}}"
								}
							]
						},
						"description": "Returns information about a specific discovered node."
					},
					"response": []
				},
				{
					"name": "Return Compute Collection Information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/compute-collections/:cc-ext-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"compute-collections",
								":cc-ext-id"
							],
							"variable": [
								{
									"key": "cc-ext-id",
									"value": "{{cc-ext-id}}"
								}
							]
						},
						"description": "Returns information about a specific compute collection."
					},
					"response": []
				},
				{
					"name": "Perform action specific to NSX on the compute-collection",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/compute-collections/:cc-ext-id?action={{action}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"compute-collections",
								":cc-ext-id"
							],
							"query": [
								{
									"key": "action",
									"value": "{{action}}"
								}
							],
							"variable": [
								{
									"key": "cc-ext-id",
									"value": "{{cc-ext-id}}"
								}
							]
						},
						"description": "Perform action specific to NSX on the compute-collection"
					},
					"response": []
				},
				{
					"name": "Return list of supported host OS types",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/ostypes",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"ostypes"
							]
						},
						"description": "Returns names of all supported host OS."
					},
					"response": []
				},
				{
					"name": "Return the List of Virtual Machines",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/virtual-machines?cursor={{cursor}}&display_name={{display_name}}&external_id={{external_id}}&host_id={{host_id}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"virtual-machines"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "display_name",
									"value": "{{display_name}}"
								},
								{
									"key": "external_id",
									"value": "{{external_id}}"
								},
								{
									"key": "host_id",
									"value": "{{host_id}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns information about all virtual machines."
					},
					"response": []
				},
				{
					"name": "List the specified node's Network Interfaces",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/nodes/:node-id/network/interfaces?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"nodes",
								":node-id",
								"network",
								"interfaces"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								}
							]
						},
						"description": "Returns the number of interfaces on the node and detailed\ninformation about each interface. Interface information includes MTU,\nbroadcast and host IP addresses, link and admin status, MAC address, network\nmask, and the IP configuration method (static or DHCP).\nThis api is deprecated. Please use Transport Node API to list node\nnetwork interfaces for the corresponding TN.\n"
					},
					"response": []
				},
				{
					"name": "Perform a service deployment upgrade on a host node",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/nodes/:node-id?action=upgrade_infra?disable_vm_migration=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"nodes",
								":node-id"
							],
							"query": [
								{
									"key": "action",
									"value": "upgrade_infra?disable_vm_migration=false"
								}
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								}
							]
						},
						"description": "Perform a service deployment upgrade on a host node"
					},
					"response": []
				},
				{
					"name": "Return the List of Compute managers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/compute-managers?cursor={{cursor}}&included_fields={{included_fields}}&origin_type={{origin_type}}&page_size=1000&server={{server}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"compute-managers"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "origin_type",
									"value": "{{origin_type}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "server",
									"value": "{{server}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns information about all compute managers."
					},
					"response": []
				},
				{
					"name": "Register compute manager with NSX",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/compute-managers",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"compute-managers"
							]
						},
						"description": "Registers compute manager with NSX. Inventory service will collect\ndata from the registered compute manager\n"
					},
					"response": []
				},
				{
					"name": "Return the List of Virtual Network Interfaces (VIFs)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/vifs?cursor={{cursor}}&host_id={{host_id}}&included_fields={{included_fields}}&lport_attachment_id={{lport_attachment_id}}&owner_vm_id={{owner_vm_id}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&vm_id={{vm_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"vifs"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "host_id",
									"value": "{{host_id}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "lport_attachment_id",
									"value": "{{lport_attachment_id}}"
								},
								{
									"key": "owner_vm_id",
									"value": "{{owner_vm_id}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "vm_id",
									"value": "{{vm_id}}"
								}
							]
						},
						"description": "Returns information about all VIFs. A virtual network interface aggregates\nnetwork interfaces into a logical interface unit that is indistinuishable\nfrom a physical network interface.\n"
					},
					"response": []
				},
				{
					"name": "Created Transport Node for Discovered Node",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/discovered-nodes/:node-ext-id?action=create_transport_node",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"discovered-nodes",
								":node-ext-id"
							],
							"query": [
								{
									"key": "action",
									"value": "create_transport_node"
								}
							],
							"variable": [
								{
									"key": "node-ext-id",
									"value": "{{node-ext-id}}"
								}
							]
						},
						"description": "NSX components are installaed on host and transport node is created with given configurations."
					},
					"response": []
				},
				{
					"name": "(Deprecated) Prepares discovered Node for NSX",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/discovered-nodes/:node-ext-id?action=hostprep",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"discovered-nodes",
								":node-ext-id"
							],
							"query": [
								{
									"key": "action",
									"value": "hostprep"
								}
							],
							"variable": [
								{
									"key": "node-ext-id",
									"value": "{{node-ext-id}}"
								}
							]
						},
						"description": "Prepares(hostprep) discovered node for NSX. NSX LCP bundles are installed on this discovered node. This API is deprecated. Use /fabric/discovered-nodes/<node-ext-id>?action=create_transport_node"
					},
					"response": []
				},
				{
					"name": "Read the NSX Manager's Network Interface Statistics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/nodes/:node-id/network/interfaces/:interface-id/stats?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"nodes",
								":node-id",
								"network",
								"interfaces",
								":interface-id",
								"stats"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								},
								{
									"key": "interface-id",
									"value": "{{interface-id}}"
								}
							]
						},
						"description": "On the specified interface, returns the number of received (rx), transmitted\n(tx), and dropped packets; the number of bytes and errors received and\ntransmitted on the interface; and the number of detected collisions.\nThis api is deprecated as part of FN+TN unification. Please use\n/transport-nodes/<transportnode-id>/network/interfaces/<interface-id>/stats to\nread network interface statistics with contraint FN is converted to TN.\n"
					},
					"response": []
				},
				{
					"name": "List the Physical Network Interface for all discovered nodes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/compute-collections/:cc-ext-id/network/physical-interfaces",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"compute-collections",
								":cc-ext-id",
								"network",
								"physical-interfaces"
							],
							"variable": [
								{
									"key": "cc-ext-id",
									"value": "{{cc-ext-id}}"
								}
							]
						},
						"description": "Returns list of physical network interfaces for all discovered nodes in\ncompute collection. Interface information includes PNIC name, hostswitch\nname it's attached to(if any) and MAC address.\n"
					},
					"response": []
				},
				{
					"name": "Get the realized state of a compute manager",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/compute-managers/:compute-manager-id/state",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"compute-managers",
								":compute-manager-id",
								"state"
							],
							"variable": [
								{
									"key": "compute-manager-id",
									"value": "{{compute-manager-id}}"
								}
							]
						},
						"description": "Get the realized state of a compute manager"
					},
					"response": []
				},
				{
					"name": "Get compute collection fabric templates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/compute-collection-fabric-templates?compute_collection_id={{compute_collection_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"compute-collection-fabric-templates"
							],
							"query": [
								{
									"key": "compute_collection_id",
									"value": "{{compute_collection_id}}"
								}
							]
						},
						"description": "Returns compute collection fabric templates"
					},
					"response": []
				},
				{
					"name": "Create a compute collection fabric template",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/compute-collection-fabric-templates",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"compute-collection-fabric-templates"
							]
						},
						"description": "Fabric templates are fabric configurations applied at the compute collection level. This configurations is used to decide what automated operations should be a run when a host membership changes."
					},
					"response": []
				},
				{
					"name": "Return the List of Capabilities of a Single Node",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/nodes/:node-id/capabilities",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"nodes",
								":node-id",
								"capabilities"
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								}
							]
						},
						"description": "Returns information about capabilities of a single fabric host node. Edge nodes do not have capabilities. This api is deprecated, use GET /transport-nodes/<transportnode-id>/capabilities if FN is converted to TN."
					},
					"response": []
				},
				{
					"name": "Return the List of Nodes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/nodes?cursor={{cursor}}&discovered_node_id={{discovered_node_id}}&display_name={{display_name}}&external_id={{external_id}}&hardware_id={{hardware_id}}&hypervisor_os_type={{hypervisor_os_type}}&included_fields={{included_fields}}&ip_address={{ip_address}}&page_size=1000&resource_type={{resource_type}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"nodes"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "discovered_node_id",
									"value": "{{discovered_node_id}}"
								},
								{
									"key": "display_name",
									"value": "{{display_name}}"
								},
								{
									"key": "external_id",
									"value": "{{external_id}}"
								},
								{
									"key": "hardware_id",
									"value": "{{hardware_id}}"
								},
								{
									"key": "hypervisor_os_type",
									"value": "{{hypervisor_os_type}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "ip_address",
									"value": "{{ip_address}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "resource_type",
									"value": "{{resource_type}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns information about all fabric nodes (hosts and edges).\nThis api is deprecated as part of FN+TN unification. Please use GET Transport Node API\nto list all fabric nodes.\n"
					},
					"response": []
				},
				{
					"name": "Register and Install NSX Components on a Node",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/nodes",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"nodes"
							]
						},
						"description": "Creates a host node (hypervisor) or edge node (router) in the transport\nnetwork.\n\nWhen you run this command for a host, NSX Manager attempts to install the\nNSX kernel modules, which are packaged as VIB, RPM, or DEB files. For the\ninstallation to succeed, you must provide the host login credentials and the\nhost thumbprint.\n\nTo get the ESXi host thumbprint, SSH to the host and run the\n<b>openssl x509 -in /etc/vmware/ssl/rui.crt -fingerprint -sha256 -noout</b>\ncommand.\n\nTo generate host key thumbprint using SHA-256 algorithm please follow the\nsteps below.\n\nLog into the host, making sure that the connection is not vulnerable to a\nman in the middle attack. Check whether a public key already exists.\nHost public key is generally located at '/etc/ssh/ssh_host_rsa_key.pub'.\nIf the key is not present then generate a new key by running the following\ncommand and follow the instructions.\n\n<b>ssh-keygen -t rsa</b>\n\nNow generate a SHA256 hash of the key using the following command. Please\nmake sure to pass the appropriate file name if the public key is stored with\na different file name other than the default 'id_rsa.pub'.\n\n<b>awk '{print $2}' id_rsa.pub | base64 -d | sha256sum -b | sed 's/ .*$//' | xxd -r -p | base64</b>\nThis api is deprecated as part of FN+TN unification. Please use Transport Node API\nto install NSX components on a node.\n"
					},
					"response": []
				},
				{
					"name": "Return Runtime Status Information for a Node",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/nodes/:node-id/status?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"nodes",
								":node-id",
								"status"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								}
							]
						},
						"description": "Returns connectivity, heartbeat, and version information about a fabric node\n(host or edge). Note that the LCP connectivity status remains down until\nafter the fabric node has been added as a transpot node and the NSX host\nswitch has been successfully installed. See POST /api/v1/transport-nodes.\nThis api is deprecated, use GET /api/v1/transport-nodes/<node-id>/status to\nget status information of a node with constraint FN is converted to TN.\n"
					},
					"response": []
				},
				{
					"name": "Get compute collection fabric template by id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/compute-collection-fabric-templates/:fabric-template-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"compute-collection-fabric-templates",
								":fabric-template-id"
							],
							"variable": [
								{
									"key": "fabric-template-id",
									"value": "{{fabric-template-id}}"
								}
							]
						},
						"description": "Get compute collection fabric template for the given id"
					},
					"response": []
				},
				{
					"name": "Updates compute collection fabric template",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/compute-collection-fabric-templates/:fabric-template-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"compute-collection-fabric-templates",
								":fabric-template-id"
							],
							"variable": [
								{
									"key": "fabric-template-id",
									"value": "{{fabric-template-id}}"
								}
							]
						},
						"description": "Updates compute collection fabric template for the given id"
					},
					"response": []
				},
				{
					"name": "Deletes compute collection fabric template",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/compute-collection-fabric-templates/:fabric-template-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"compute-collection-fabric-templates",
								":fabric-template-id"
							],
							"variable": [
								{
									"key": "fabric-template-id",
									"value": "{{fabric-template-id}}"
								}
							]
						},
						"description": "Deletes compute collection fabric template for the given id"
					},
					"response": []
				},
				{
					"name": "Return compute manager Information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/compute-managers/:compute-manager-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"compute-managers",
								":compute-manager-id"
							],
							"variable": [
								{
									"key": "compute-manager-id",
									"value": "{{compute-manager-id}}"
								}
							]
						},
						"description": "Returns information about a specific compute manager"
					},
					"response": []
				},
				{
					"name": "Update compute manager",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/compute-managers/:compute-manager-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"compute-managers",
								":compute-manager-id"
							],
							"variable": [
								{
									"key": "compute-manager-id",
									"value": "{{compute-manager-id}}"
								}
							]
						},
						"description": "Updates a specified compute manager\n"
					},
					"response": []
				},
				{
					"name": "Unregister a compute manager",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/compute-managers/:compute-manager-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"compute-managers",
								":compute-manager-id"
							],
							"variable": [
								{
									"key": "compute-manager-id",
									"value": "{{compute-manager-id}}"
								}
							]
						},
						"description": "Unregisters a specified compute manager\n"
					},
					"response": []
				},
				{
					"name": "Return Node Information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/nodes/:node-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"nodes",
								":node-id"
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								}
							]
						},
						"description": "Returns information about a specific fabric node (host or edge).\nThis api is deprecated, use Transport Node API to get fabric\nnode information.\n"
					},
					"response": []
				},
				{
					"name": "Update a Node",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/nodes/:node-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"nodes",
								":node-id"
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								}
							]
						},
						"description": "Modifies attributes of a fabric node (host or edge).\nThis api is deprecated as part of FN+TN unification. Please use Transport Node\nAPI to update fabric node details.\n"
					},
					"response": []
				},
				{
					"name": "Perform an Action on Fabric Node",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/nodes/:node-id?action={{action}}&evacuate_powered_off_vms=false&vsan_mode=ensure_object_accessibility",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"nodes",
								":node-id"
							],
							"query": [
								{
									"key": "action",
									"value": "{{action}}"
								},
								{
									"key": "evacuate_powered_off_vms",
									"value": "false"
								},
								{
									"key": "vsan_mode",
									"value": "ensure_object_accessibility"
								}
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								}
							]
						},
						"description": "The supported fabric node actions are enter_maintenance_mode,\nexit_maintenance_mode for EdgeNode.\nThis API is deprecated, please call TransportNode maintenance mode API to\nupdate maintenance mode, refer to \"Update transport node maintenance mode\".\n"
					},
					"response": []
				},
				{
					"name": "Delete a Node",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/nodes/:node-id?unprepare_host=true",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"nodes",
								":node-id"
							],
							"query": [
								{
									"key": "unprepare_host",
									"value": "true"
								}
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								}
							]
						},
						"description": "Removes a specified fabric node (host or edge).\nA fabric node may only be deleted when it is no longer referenced\nby a Transport Node. If unprepare_host option is set to false, the\nhost will be deleted without uninstalling the NSX components from\nthe host.\nThis api is deprecated, use DELETE Transport Node API to delete FN.\n"
					},
					"response": []
				},
				{
					"name": "Get the Realized State of a Fabric Node.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/nodes/:node-id/state",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"nodes",
								":node-id",
								"state"
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								}
							]
						},
						"description": "For edge nodes, returns the current install\nstate when deployment is in progress, NODE_READY\nwhen deployment is complete and the failure state\nwhen deployment has failed.\nThis api is deprecated. Please use /transport-nodes/<transportnode-id>/state\nto get realized state of a Fabric Node.\n"
					},
					"response": []
				},
				{
					"name": "Return the list of tools and agents installed in VMs.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/virtual-machines/tools-info?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"virtual-machines",
								"tools-info"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "This API returns the list of tools and agents installed in VMs."
					},
					"response": []
				},
				{
					"name": "Return the List of Discovered Nodes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/fabric/discovered-nodes?cm_local_id={{cm_local_id}}&cursor={{cursor}}&display_name={{display_name}}&external_id={{external_id}}&has_parent={{has_parent}}&included_fields={{included_fields}}&ip_address={{ip_address}}&node_id={{node_id}}&node_type={{node_type}}&origin_id={{origin_id}}&page_size=1000&parent_compute_collection={{parent_compute_collection}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"fabric",
								"discovered-nodes"
							],
							"query": [
								{
									"key": "cm_local_id",
									"value": "{{cm_local_id}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "display_name",
									"value": "{{display_name}}"
								},
								{
									"key": "external_id",
									"value": "{{external_id}}"
								},
								{
									"key": "has_parent",
									"value": "{{has_parent}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "ip_address",
									"value": "{{ip_address}}"
								},
								{
									"key": "node_id",
									"value": "{{node_id}}"
								},
								{
									"key": "node_type",
									"value": "{{node_type}}"
								},
								{
									"key": "origin_id",
									"value": "{{origin_id}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "parent_compute_collection",
									"value": "{{parent_compute_collection}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns information about all discovered nodes."
					},
					"response": []
				}
			],
			"description": "Folder for fabric"
		},
		{
			"name": "app-discovery",
			"item": [
				{
					"name": "Re-classify a completed application discovery session.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/app-discovery/sessions/:session-id/re-classify",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"app-discovery",
								"sessions",
								":session-id",
								"re-classify"
							],
							"variable": [
								{
									"key": "session-id",
									"value": "{{session-id}}"
								}
							]
						},
						"description": "Re-classify completed application discovery session against input \nAppProfiles. If no AppProfiles are specified then we use the previous \nAppProfiles of that session.\n"
					},
					"response": []
				},
				{
					"name": "Export app discovery results in CSV format",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/app-discovery/sessions/:session-id/report/app-info-and-vm?format=csv",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"app-discovery",
								"sessions",
								":session-id",
								"report",
								"app-info-and-vm"
							],
							"query": [
								{
									"key": "format",
									"value": "csv"
								}
							],
							"variable": [
								{
									"key": "session-id",
									"value": "{{session-id}}"
								}
							]
						},
						"description": "Returns app discovery results in CSV format, each row contains discovered app information\nand the id of the vms this app is discovered from for a given set of vms\n(or for all vms belong to this session when no vm id is passed in)\n"
					},
					"response": []
				},
				{
					"name": "ns-groups in this application discovery session",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/app-discovery/sessions/:session-id/ns-groups?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"app-discovery",
								"sessions",
								":session-id",
								"ns-groups"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							],
							"variable": [
								{
									"key": "session-id",
									"value": "{{session-id}}"
								}
							]
						},
						"description": "Returns the ns groups that was part of the application discovery session |\nwhile it was started\n"
					},
					"response": []
				},
				{
					"name": "Returns the summary of the application discovery session",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/app-discovery/sessions/:session-id/summary",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"app-discovery",
								"sessions",
								":session-id",
								"summary"
							],
							"variable": [
								{
									"key": "session-id",
									"value": "{{session-id}}"
								}
							]
						},
						"description": "Returns the summary of the application discovery session\n"
					},
					"response": []
				},
				{
					"name": "Returns list of app profile IDs created",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/app-discovery/app-profiles?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"app-discovery",
								"app-profiles"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns list of app profile IDs created\n"
					},
					"response": []
				},
				{
					"name": "Adds a new app profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/app-discovery/app-profiles",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"app-discovery",
								"app-profiles"
							]
						},
						"description": "Adds a new app profile\n"
					},
					"response": []
				},
				{
					"name": "Returns detail of the app profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/app-discovery/app-profiles/:app-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"app-discovery",
								"app-profiles",
								":app-profile-id"
							],
							"variable": [
								{
									"key": "app-profile-id",
									"value": "{{app-profile-id}}"
								}
							]
						},
						"description": "Returns detail of the app profile\n"
					},
					"response": []
				},
				{
					"name": "Update AppProfile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/app-discovery/app-profiles/:app-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"app-discovery",
								"app-profiles",
								":app-profile-id"
							],
							"variable": [
								{
									"key": "app-profile-id",
									"value": "{{app-profile-id}}"
								}
							]
						},
						"description": "Update AppProfile\n"
					},
					"response": []
				},
				{
					"name": "Delete App Profile",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/app-discovery/app-profiles/:app-profile-id?force=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"app-discovery",
								"app-profiles",
								":app-profile-id"
							],
							"query": [
								{
									"key": "force",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "app-profile-id",
									"value": "{{app-profile-id}}"
								}
							]
						},
						"description": "Deletes the specified AppProfile.\n"
					},
					"response": []
				},
				{
					"name": "Export app profiles in CSV format for a given sessiom",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/app-discovery/sessions/:session-id/report/app-profile-and-app-info?format=csv",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"app-discovery",
								"sessions",
								":session-id",
								"report",
								"app-profile-and-app-info"
							],
							"query": [
								{
									"key": "format",
									"value": "csv"
								}
							],
							"variable": [
								{
									"key": "session-id",
									"value": "{{session-id}}"
								}
							]
						},
						"description": "Returns app profiles information for a given session in CSV format\nEach row will contain detailed info of an app profile, and the id of\napps which is member of this app profile in this session\n"
					},
					"response": []
				},
				{
					"name": "Returns the status of the application discovery session and other details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/app-discovery/sessions/:session-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"app-discovery",
								"sessions",
								":session-id"
							],
							"variable": [
								{
									"key": "session-id",
									"value": "{{session-id}}"
								}
							]
						},
						"description": "Returns the status of the application discovery session and other details\n"
					},
					"response": []
				},
				{
					"name": "Cancel and delete the application discovery session",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/app-discovery/sessions/:session-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"app-discovery",
								"sessions",
								":session-id"
							],
							"variable": [
								{
									"key": "session-id",
									"value": "{{session-id}}"
								}
							]
						},
						"description": "Cancel and delete the application discovery session\n"
					},
					"response": []
				},
				{
					"name": "application profiles in this application discovery session",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/app-discovery/sessions/:session-id/app-profiles?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"app-discovery",
								"sessions",
								":session-id",
								"app-profiles"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							],
							"variable": [
								{
									"key": "session-id",
									"value": "{{session-id}}"
								}
							]
						},
						"description": "Returns the application profiles that was part of the application discovery session |\nwhile it was started.\n"
					},
					"response": []
				},
				{
					"name": "Returns the details of the installed apps for the app profile ID in that session",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/app-discovery/sessions/:session-id/installed-apps?app_profile_id={{app_profile_id}}&cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&vm_id={{vm_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"app-discovery",
								"sessions",
								":session-id",
								"installed-apps"
							],
							"query": [
								{
									"key": "app_profile_id",
									"value": "{{app_profile_id}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "vm_id",
									"value": "{{vm_id}}"
								}
							],
							"variable": [
								{
									"key": "session-id",
									"value": "{{session-id}}"
								}
							]
						},
						"description": "Returns the details of the installed apps for the app profile ID in that session\n"
					},
					"response": []
				},
				{
					"name": "vms in the ns-group of the application discovery session",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/app-discovery/sessions/:session-id/ns-groups/:ns-group-id/members?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"app-discovery",
								"sessions",
								":session-id",
								"ns-groups",
								":ns-group-id",
								"members"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							],
							"variable": [
								{
									"key": "session-id",
									"value": "{{session-id}}"
								},
								{
									"key": "ns-group-id",
									"value": "{{ns-group-id}}"
								}
							]
						},
						"description": "Returns the vms in the ns-group of the application discovery session\n"
					},
					"response": []
				},
				{
					"name": "Returns the list of the application discovery sessions available",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/app-discovery/sessions?cursor={{cursor}}&group_id={{group_id}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&status={{status}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"app-discovery",
								"sessions"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "group_id",
									"value": "{{group_id}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "status",
									"value": "{{status}}"
								}
							]
						},
						"description": "Returns the list of the application discovery sessions available\n"
					},
					"response": []
				},
				{
					"name": "Starts the discovery of application discovery session",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/app-discovery/sessions",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"app-discovery",
								"sessions"
							]
						},
						"description": "Starts the discovery of application discovery session\n"
					},
					"response": []
				}
			],
			"description": "Folder for app-discovery"
		},
		{
			"name": "firewall",
			"item": [
				{
					"name": "Read an Existing Rule",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/rules/:rule-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"rules",
								":rule-id"
							],
							"variable": [
								{
									"key": "rule-id",
									"value": "{{rule-id}}"
								}
							]
						},
						"description": "Return existing firewall rule information.\n"
					},
					"response": []
				},
				{
					"name": "Get firewall status for target resource in dfw context",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/status/:context-type/:id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"status",
								":context-type",
								":id"
							],
							"variable": [
								{
									"key": "context-type",
									"value": "{{context-type}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get firewall status for target resource in dfw context"
					},
					"response": []
				},
				{
					"name": "Update an Existing Section with Rules",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/sections/:section-id?action=revise_with_rules?id={{id}}&operation=insert_top",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"sections",
								":section-id"
							],
							"query": [
								{
									"key": "action",
									"value": "revise_with_rules?id={{id}}"
								},
								{
									"key": "operation",
									"value": "insert_top"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Modifies an existing firewall section along with its relative position\namong other firewall sections with rules. When invoked on a large number\nof rules, this API is supported only at low rates of invocation (not more\nthan 2 times per minute). The typical latency of this API with about 1024\nrules is about 15 seconds in a cluster setup. This API should not be\ninvoked with large payloads at automation speeds.\n\nInstead, to move a section above or below another section, use:\nPOST /api/v1/firewall/sections/&lt;section-id&gt;?action=revise\n\nTo modify rules, use:\nPUT /api/v1/firewall/sections/&lt;section-id&gt;/rules/&lt;rule-id&gt;\n\nSimultaneous update (modify) operations on same section are not allowed to\nprevent overwriting stale contents to firewall section. If a concurrent\nupdate is performed, HTTP response code 409 will be returned to the client\noperating on stale data. That client should retrieve the firewall section\nagain and re-apply its update.\n"
					},
					"response": []
				},
				{
					"name": "Get the summary of sections in the firewall configuration.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/sections/summary?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"sections",
								"summary"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							]
						},
						"description": "List the summary of number of sections and number of rules for each firewall\ncategory (L2DFW, L3DFW).\n"
					},
					"response": []
				},
				{
					"name": "Get firewall global status for dfw context",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/status/:context-type",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"status",
								":context-type"
							],
							"variable": [
								{
									"key": "context-type",
									"value": "{{context-type}}"
								}
							]
						},
						"description": "Get firewall global status for dfw context"
					},
					"response": []
				},
				{
					"name": "Update global firewall status for dfw context",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/status/:context-type",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"status",
								":context-type"
							],
							"variable": [
								{
									"key": "context-type",
									"value": "{{context-type}}"
								}
							]
						},
						"description": "Update global firewall status for dfw context"
					},
					"response": []
				},
				{
					"name": "Enable firewall on target resource in dfw context",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/status/:context-type/:id?action=enable_firewall",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"status",
								":context-type",
								":id"
							],
							"query": [
								{
									"key": "action",
									"value": "enable_firewall"
								}
							],
							"variable": [
								{
									"key": "context-type",
									"value": "{{context-type}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Enable firewall on target resource in dfw context"
					},
					"response": []
				},
				{
					"name": "Update an Existing Section, Including Its Rules",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/sections/:section-id?action=update_with_rules",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"sections",
								":section-id"
							],
							"query": [
								{
									"key": "action",
									"value": "update_with_rules"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Modifies existing firewall section along with its association with rules.\nWhen invoked on a large number of rules, this API is supported only at low\nrates of invocation (not more than 2 times per minute). The typical latency\nof this API with about 1024 rules is about 15 seconds in a cluster setup.\nThis API should not be invoked with large payloads at automation speeds.\n\nInstead, to update rule content, use:\nPUT /api/v1/firewall/sections/&lt;section-id&gt;/rules/&lt;rule-id&gt;\n\nSimultaneous update (modify) operations on same section are not allowed to\nprevent overwriting stale contents to firewall section. If a concurrent\nupdate is performed, HTTP response code 409 will be returned to the client\noperating on stale data. That client should retrieve the firewall section\nagain and re-apply its update.\n"
					},
					"response": []
				},
				{
					"name": "Get All the Rules for a Section",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/sections/:section-id/rules?applied_tos={{applied_tos}}&context_profiles={{context_profiles}}&cursor={{cursor}}&deep_search=false&destinations={{destinations}}&extended_sources={{extended_sources}}&filter_type=FILTER&included_fields={{included_fields}}&page_size=1000&search_invalid_references=false&services={{services}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&sources={{sources}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"sections",
								":section-id",
								"rules"
							],
							"query": [
								{
									"key": "applied_tos",
									"value": "{{applied_tos}}"
								},
								{
									"key": "context_profiles",
									"value": "{{context_profiles}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "deep_search",
									"value": "false"
								},
								{
									"key": "destinations",
									"value": "{{destinations}}"
								},
								{
									"key": "extended_sources",
									"value": "{{extended_sources}}"
								},
								{
									"key": "filter_type",
									"value": "FILTER"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "search_invalid_references",
									"value": "false"
								},
								{
									"key": "services",
									"value": "{{services}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sources",
									"value": "{{sources}}"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Return all firewall rule(s) information for a given firewall section.\n"
					},
					"response": []
				},
				{
					"name": "Add a Single Rule in a Section",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/sections/:section-id/rules?id={{id}}&operation=insert_top",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"sections",
								":section-id",
								"rules"
							],
							"query": [
								{
									"key": "id",
									"value": "{{id}}"
								},
								{
									"key": "operation",
									"value": "insert_top"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Adds a new firewall rule in existing firewall section. Adding firewall rule\nto a section modifies parent section entity and simultaneous update (modify)\noperations on same section are not allowed to prevent overwriting stale\ncontent to firewall section. If a concurrent update is performed, HTTP\nresponse code 409 will be returned to the client operating on stale data.\nThat client should retrieve the firewall section again and re-apply its\nupdate.\n"
					},
					"response": []
				},
				{
					"name": "Remove an existing object from the exclude list",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/excludelist?action=remove_member?deep_check=false&object_id={{object_id}}&object_type={{object_type}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"excludelist"
							],
							"query": [
								{
									"key": "action",
									"value": "remove_member?deep_check=false"
								},
								{
									"key": "object_id",
									"value": "{{object_id}}"
								},
								{
									"key": "object_type",
									"value": "{{object_type}}"
								}
							]
						},
						"description": "Remove an existing object from the exclude list"
					},
					"response": []
				},
				{
					"name": "Disable firewall on target resource in dfw context",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/status/:context-type/:id?action=disable_firewall",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"status",
								":context-type",
								":id"
							],
							"query": [
								{
									"key": "action",
									"value": "disable_firewall"
								}
							],
							"variable": [
								{
									"key": "context-type",
									"value": "{{context-type}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Disable firewall on target resource in dfw context"
					},
					"response": []
				},
				{
					"name": "Get list of entities in exclude list",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/excludelist",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"excludelist"
							]
						},
						"description": "Get list of entities in exclude list"
					},
					"response": []
				},
				{
					"name": "Modify exclude list",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/excludelist",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"excludelist"
							]
						},
						"description": "Modify exclude list"
					},
					"response": []
				},
				{
					"name": "Unlock a section",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/sections/:section-id?action=unlock",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"sections",
								":section-id"
							],
							"query": [
								{
									"key": "action",
									"value": "unlock"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Unlock a section\n"
					},
					"response": []
				},
				{
					"name": "Create a Section with Rules",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/sections?action=create_with_rules?id={{id}}&operation=insert_top",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"sections"
							],
							"query": [
								{
									"key": "action",
									"value": "create_with_rules?id={{id}}"
								},
								{
									"key": "operation",
									"value": "insert_top"
								}
							]
						},
						"description": "Creates a new firewall section with rules. The limit on the number of\nrules is defined by maxItems in collection types for FirewallRule\n(FirewallRuleXXXList types). When invoked on a section with a large number\nof rules, this API is supported only at low rates of invocation (not more\nthan 4-5 times per minute). The typical latency of this API with about 1024\nrules is about 4-5 seconds. This API should not be invoked with large\npayloads at automation speeds. More than 50 rules with a large number of\nrule references is not supported.\n\nInstead, to create sections, use:\nPOST /api/v1/firewall/sections\n\nTo create rules, use:\nPOST /api/v1/firewall/sections/&lt;section-id&gt;/rules\n"
					},
					"response": []
				},
				{
					"name": "Get all firewall session timer profiles.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/profiles/:profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"profiles",
								":profile-id"
							],
							"variable": [
								{
									"key": "profile-id",
									"value": "{{profile-id}}"
								}
							]
						},
						"description": "Return firewall session timer profile.\n"
					},
					"response": []
				},
				{
					"name": "Update a firewall profile.",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/profiles/:profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"profiles",
								":profile-id"
							],
							"variable": [
								{
									"key": "profile-id",
									"value": "{{profile-id}}"
								}
							]
						},
						"description": "Update user configurable properties of firewall profile.\n"
					},
					"response": []
				},
				{
					"name": "Delete a firewall profile.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/profiles/:profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"profiles",
								":profile-id"
							],
							"variable": [
								{
									"key": "profile-id",
									"value": "{{profile-id}}"
								}
							]
						},
						"description": "Deletes a firewall profile.\n"
					},
					"response": []
				},
				{
					"name": "Add a new object in the exclude list",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/excludelist?action=add_member",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"excludelist"
							],
							"query": [
								{
									"key": "action",
									"value": "add_member"
								}
							]
						},
						"description": "Add a new object in the exclude list"
					},
					"response": []
				},
				{
					"name": "Get Firewall section level statistics section",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/sections/:section-id/rules/stats?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"sections",
								":section-id",
								"rules",
								"stats"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Get aggregated statistics for all rules for a given firewall section. The\nAPI only supports access to cached (source=cached) statistical data\ncollected offline in the system. Data includes total number of packets,\nbytes, sessions counters and popularity index for a firewall rule and\noverall session count, max session count and max popularity index for\nall firewall rules on transport nodes or edge nodes. Aggregated\nstatistics like maximum popularity index, maximum session count and\ntotal session count are computed with lower frequency compared to\nindividual generic rule statistics, hence they may have a computation\ndelay up to 15 minutes to reflect in response to this API.\n"
					},
					"response": []
				},
				{
					"name": "Update an Existing Section, Including Its Position",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/sections/:section-id?action=revise?id={{id}}&operation=insert_top",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"sections",
								":section-id"
							],
							"query": [
								{
									"key": "action",
									"value": "revise?id={{id}}"
								},
								{
									"key": "operation",
									"value": "insert_top"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Modifies an existing firewall section along with its relative position\namong other firewall sections in the system. Simultaneous update (modify)\noperations on same section are not allowed to prevent overwriting stale\ncontents to firewall section. If a concurrent update is performed, HTTP\nresponse code 409 will be returned to the client operating on stale data.\nThat client should retrieve the firewall section again and re-apply its\nupdate.\n"
					},
					"response": []
				},
				{
					"name": "Update an Existing Rule and Reorder the Rule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/sections/:section-id/rules/:rule-id?action=revise?id={{id}}&operation=insert_top",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"sections",
								":section-id",
								"rules",
								":rule-id"
							],
							"query": [
								{
									"key": "action",
									"value": "revise?id={{id}}"
								},
								{
									"key": "operation",
									"value": "insert_top"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								},
								{
									"key": "rule-id",
									"value": "{{rule-id}}"
								}
							]
						},
						"description": "Modifies existing firewall rule along with relative position among\nother firewall rules inside a firewall section. Revising firewall rule in a\nsection modifies parent section entity and simultaneous update (modify)\noperations on same section are not allowed to prevent overwriting stale\ncontents to firewall section. If a concurrent update is performed, HTTP\nresponse code 409 will be returned to the client operating on stale data.\nThat client should retrieve the firewall section again and re-apply its\nupdate.\n"
					},
					"response": []
				},
				{
					"name": "Check if the object a member of the exclude list",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/excludelist?action=check_if_exists?deep_check=false&object_id={{object_id}}&object_type={{object_type}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"excludelist"
							],
							"query": [
								{
									"key": "action",
									"value": "check_if_exists?deep_check=false"
								},
								{
									"key": "object_id",
									"value": "{{object_id}}"
								},
								{
									"key": "object_type",
									"value": "{{object_type}}"
								}
							]
						},
						"description": "Check if the object a member of the exclude list"
					},
					"response": []
				},
				{
					"name": "Lock a section",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/sections/:section-id?action=lock",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"sections",
								":section-id"
							],
							"query": [
								{
									"key": "action",
									"value": "lock"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Lock a section\n"
					},
					"response": []
				},
				{
					"name": "List All Firewall Sections",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/sections?applied_tos={{applied_tos}}&context_profiles={{context_profiles}}&cursor={{cursor}}&deep_search=false&destinations={{destinations}}&enforced_on={{enforced_on}}&exclude_applied_to_type={{exclude_applied_to_type}}&extended_sources={{extended_sources}}&filter_type=FILTER&include_applied_to_type={{include_applied_to_type}}&included_fields={{included_fields}}&locked={{locked}}&page_size=1000&search_invalid_references=false&search_scope={{search_scope}}&services={{services}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&sources={{sources}}&type=LAYER3",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"sections"
							],
							"query": [
								{
									"key": "applied_tos",
									"value": "{{applied_tos}}"
								},
								{
									"key": "context_profiles",
									"value": "{{context_profiles}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "deep_search",
									"value": "false"
								},
								{
									"key": "destinations",
									"value": "{{destinations}}"
								},
								{
									"key": "enforced_on",
									"value": "{{enforced_on}}"
								},
								{
									"key": "exclude_applied_to_type",
									"value": "{{exclude_applied_to_type}}"
								},
								{
									"key": "extended_sources",
									"value": "{{extended_sources}}"
								},
								{
									"key": "filter_type",
									"value": "FILTER"
								},
								{
									"key": "include_applied_to_type",
									"value": "{{include_applied_to_type}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "locked",
									"value": "{{locked}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "search_invalid_references",
									"value": "false"
								},
								{
									"key": "search_scope",
									"value": "{{search_scope}}"
								},
								{
									"key": "services",
									"value": "{{services}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sources",
									"value": "{{sources}}"
								},
								{
									"key": "type",
									"value": "LAYER3"
								}
							]
						},
						"description": "List all firewall section in paginated form. A default page size is limited\nto 1000 firewall sections. By default list of section is filtered by LAYER3\ntype.\n"
					},
					"response": []
				},
				{
					"name": "Create a New Empty Section",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/sections?id={{id}}&operation=insert_top",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"sections"
							],
							"query": [
								{
									"key": "id",
									"value": "{{id}}"
								},
								{
									"key": "operation",
									"value": "insert_top"
								}
							]
						},
						"description": "Creates new empty firewall section in the system.\n"
					},
					"response": []
				},
				{
					"name": "Get an Existing Section",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/sections/:section-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"sections",
								":section-id"
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Returns information about firewall section for the identifier.\n"
					},
					"response": []
				},
				{
					"name": "Update an Existing Section",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/sections/:section-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"sections",
								":section-id"
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Modifies the specified section, but does not modify the section's\nassociated rules. Simultaneous update (modify) operations on same section\nare not allowed to prevent overwriting stale contents to firewall section.\nIf a concurrent update is performed, HTTP response code 409 will be\nreturned to the client operating on stale data. That client should retrieve\nthe firewall section again and re-apply its update.\n"
					},
					"response": []
				},
				{
					"name": "Delete an Existing Section and Its Associated Rules",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/sections/:section-id?cascade=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"sections",
								":section-id"
							],
							"query": [
								{
									"key": "cascade",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Removes firewall section from the system. Firewall section with\nrules can only be deleted by passing \"cascade=true\" parameter.\n"
					},
					"response": []
				},
				{
					"name": "Read an Existing Rule",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/sections/:section-id/rules/:rule-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"sections",
								":section-id",
								"rules",
								":rule-id"
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								},
								{
									"key": "rule-id",
									"value": "{{rule-id}}"
								}
							]
						},
						"description": "Return existing firewall rule information in a firewall section.\n"
					},
					"response": []
				},
				{
					"name": "Update an Existing Rule",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/sections/:section-id/rules/:rule-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"sections",
								":section-id",
								"rules",
								":rule-id"
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								},
								{
									"key": "rule-id",
									"value": "{{rule-id}}"
								}
							]
						},
						"description": "Modifies existing firewall rule in a firewall section. Updating firewall\nrule in a section modifies parent section entity and simultaneous update\n(modify) operations on same section are not allowed to prevent overwriting\nstale contents to firewall section. If a concurrent update is performed,\nHTTP response code 409 will be returned to the client operating on stale\ndata. That client should retrieve the firewall section again and re-apply\nits update.\n"
					},
					"response": []
				},
				{
					"name": "Delete an Existing Rule",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/sections/:section-id/rules/:rule-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"sections",
								":section-id",
								"rules",
								":rule-id"
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								},
								{
									"key": "rule-id",
									"value": "{{rule-id}}"
								}
							]
						},
						"description": "Delete existing firewall rule in a firewall section. Deleting firewall rule\nin a section modifies parent section and simultaneous update (modify)\noperations on same section are not allowed to prevent overwriting stale\ncontents to firewall section. If a concurrent update is performed, HTTP\nresponse code 409 will be returned to the client operating on stale data.\nThat client should retrieve the firewall section again and re-apply its\nupdate.\n"
					},
					"response": []
				},
				{
					"name": "Get the Realized State of a Firewall Section",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/sections/:section-id/state?barrier_id={{barrier_id}}&request_id={{request_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"sections",
								":section-id",
								"state"
							],
							"query": [
								{
									"key": "barrier_id",
									"value": "{{barrier_id}}"
								},
								{
									"key": "request_id",
									"value": "{{request_id}}"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Return realized state information of a firewall section.\n"
					},
					"response": []
				},
				{
					"name": "Get Firewall rule level statistics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/sections/:section-id/rules/:rule-id/stats?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"sections",
								":section-id",
								"rules",
								":rule-id",
								"stats"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								},
								{
									"key": "rule-id",
									"value": "{{rule-id}}"
								}
							]
						},
						"description": "Get aggregated statistics for a rule for given firewall section. The\nAPI only supports access to cached (source=cached) statistical data\ncollected offline in the system. Data includes total number of packets,\nbytes, sessions counters and popularity index for a firewall rule and\noverall session count, max session count and max popularity index for\nall firewall rules on transport nodes or edge nodes. Aggregated\nstatistics like maximum popularity index, maximum session count and\ntotal session count are computed with lower frequency compared to\nindividual generic rule statistics, hence they may have a computation\ndelay up to 15 minutes to reflect in response to this API.\n"
					},
					"response": []
				},
				{
					"name": "Get the Realized State of a Firewall Rule",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/rules/:rule-id/state?barrier_id={{barrier_id}}&request_id={{request_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"rules",
								":rule-id",
								"state"
							],
							"query": [
								{
									"key": "barrier_id",
									"value": "{{barrier_id}}"
								},
								{
									"key": "request_id",
									"value": "{{request_id}}"
								}
							],
							"variable": [
								{
									"key": "rule-id",
									"value": "{{rule-id}}"
								}
							]
						},
						"description": "Return realized state information of a firewall rule. Returned response is same as rule's\nsection realization state response.\n"
					},
					"response": []
				},
				{
					"name": "Get firewall profiles available.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/profiles?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&resource_type={{resource_type}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"profiles"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "resource_type",
									"value": "{{resource_type}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "List all the firewall profiles available by requested resource_type.\n"
					},
					"response": []
				},
				{
					"name": "Create a firewall profile.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/profiles",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"profiles"
							]
						},
						"description": "Create a firewall profile with values provided. It creates profile based\nresource_type in the payload.\n"
					},
					"response": []
				},
				{
					"name": "Reset firewall rule statistics",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/stats?action=reset?category={{category}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"stats"
							],
							"query": [
								{
									"key": "action",
									"value": "reset?category={{category}}"
								}
							]
						},
						"description": "Sets firewall rule statistics counter to zero. This operation is supported\nfor given category, for example: L3DFW i.e. for all layer3 firewall\n(transport nodes only) rules or L3EDGE i.e. for all layer3 edge firewall\n(edge nodes only) rules or L3BRIDGEPORT i.e. for all layer3 bridge port firewall\n(bridge ports only) rules.\n"
					},
					"response": []
				},
				{
					"name": "Add Multiple Rules in a Section",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/sections/:section-id/rules?action=create_multiple?id={{id}}&operation=insert_top",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"sections",
								":section-id",
								"rules"
							],
							"query": [
								{
									"key": "action",
									"value": "create_multiple?id={{id}}"
								},
								{
									"key": "operation",
									"value": "insert_top"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Create multiple firewall rules in existing firewall section bounded by\nlimit of 1000 firewall rules per section. Adding multiple firewall rules in\na section modifies parent section entity and simultaneous update (modify)\noperations on same section are not allowed to prevent overwriting stale\ncontents to firewall section. If a concurrent update is performed, HTTP\nresponse code 409 will be returned to the client operating on stale data.\nThat client should retrieve the firewall section again and re-apply its\nupdate.\n"
					},
					"response": []
				},
				{
					"name": "Get an Existing Section, Including Rules",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/sections/:section-id?action=list_with_rules",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"sections",
								":section-id"
							],
							"query": [
								{
									"key": "action",
									"value": "list_with_rules"
								}
							],
							"variable": [
								{
									"key": "section-id",
									"value": "{{section-id}}"
								}
							]
						},
						"description": "Returns firewall section information with rules for a section identifier.\nWhen invoked on a section with a large number of rules, this API is supported\nonly at low rates of invocation (not more than 4-5 times per minute). The\ntypical latency of this API with about 1024 rules is about 4-5 seconds. This\nAPI should not be invoked with large payloads at automation speeds. More than\n50 rules with a large number rule references is not supported.\n\nInstead, to read firewall rules, use:\nGET /api/v1/firewall/sections/&lt;section-id&gt;/rules with the appropriate\npage_size.\n"
					},
					"response": []
				},
				{
					"name": "List all firewall status for supported contexts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/firewall/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"firewall",
								"status"
							]
						},
						"description": "List all firewall status for supported contexts"
					},
					"response": []
				}
			],
			"description": "Folder for firewall"
		},
		{
			"name": "normalizations",
			"item": [
				{
					"name": "Get normalizations based on the query parameters",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/normalizations?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&preferred_normalization_type={{preferred_normalization_type}}&resource_id={{resource_id}}&resource_type={{resource_type}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"normalizations"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "preferred_normalization_type",
									"value": "{{preferred_normalization_type}}"
								},
								{
									"key": "resource_id",
									"value": "{{resource_id}}"
								},
								{
									"key": "resource_type",
									"value": "{{resource_type}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns the list of normalized resources based on the query parameters.\nId and Type of the resource on which the normalizations is to be performed,\nare to be specified as query parameters in the URI. The target resource\ntypes to which normalization is to be done should also be specified as\nquery parameter.\n"
					},
					"response": []
				}
			],
			"description": "Folder for normalizations"
		},
		{
			"name": "migration",
			"item": [
				{
					"name": "Get migration stats for logical constructs phase",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/logical-constructs/stats?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"logical-constructs",
								"stats"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Get migration stats for logical constructs phase. This API can be polled for getting runtime progress of the migration from source to target."
					},
					"response": []
				},
				{
					"name": "Migration feedback response",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/feedback-response",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"feedback-response"
							]
						},
						"description": "Provide response for feedback queries needed for migration.\n"
					},
					"response": []
				},
				{
					"name": "Feedback request summary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/feedback-summary?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"feedback-summary"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Get feedback summary of NSX-V to be migrated.\n"
					},
					"response": []
				},
				{
					"name": "Abort migration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/plan?action=abort",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"plan"
							],
							"query": [
								{
									"key": "action",
									"value": "abort"
								}
							]
						},
						"description": "Resets all migration steps done so far, so that migration can be restarted\nwith new setup details.\n"
					},
					"response": []
				},
				{
					"name": "Get migration status summary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/status-summary?component_type={{component_type}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"status-summary"
							],
							"query": [
								{
									"key": "component_type",
									"value": "{{component_type}}"
								}
							]
						},
						"description": "Get migration status summary"
					},
					"response": []
				},
				{
					"name": "Start migration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/plan?action=start",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"plan"
							],
							"query": [
								{
									"key": "action",
									"value": "start"
								}
							]
						},
						"description": "Start the migration. Migration will start as per the migration plan.\n"
					},
					"response": []
				},
				{
					"name": "Get migration units stats",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/migration-units-stats?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&sync=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"migration-units-stats"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sync",
									"value": "false"
								}
							]
						},
						"description": "Get migration units stats"
					},
					"response": []
				},
				{
					"name": "Return migration unit group information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/migration-unit-groups/:group-id?summary=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"migration-unit-groups",
								":group-id"
							],
							"query": [
								{
									"key": "summary",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "group-id",
									"value": "{{group-id}}"
								}
							]
						},
						"description": "Returns information about a specific migration unit group in the\nmigration plan.  If request parameter summary is set to true, then\nonly count of migration units will be returned, migration units list\nwill be empty.\n"
					},
					"response": []
				},
				{
					"name": "Update the migration unit group",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/migration-unit-groups/:group-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"migration-unit-groups",
								":group-id"
							],
							"variable": [
								{
									"key": "group-id",
									"value": "{{group-id}}"
								}
							]
						},
						"description": "Update the specified migration unit group. Removal of migration units from the group\nusing this is not allowed. An error will be returned in that case.\n"
					},
					"response": []
				},
				{
					"name": "Delete the migration unit group",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/migration-unit-groups/:group-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"migration-unit-groups",
								":group-id"
							],
							"variable": [
								{
									"key": "group-id",
									"value": "{{group-id}}"
								}
							]
						},
						"description": "Delete the specified group.\nNOTE - A group can be deleted only if it is empty.\nIf user tries to delete a group containing one\nor more migration units, the operation will fail and an error\nwill be returned.\n"
					},
					"response": []
				},
				{
					"name": "Mark completion of a migration cycle",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/plan?action=finish",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"plan"
							],
							"query": [
								{
									"key": "action",
									"value": "finish"
								}
							]
						},
						"description": "This API marks the completion of one execution of migration workflow. This API resets internal \nexecution state and hence needs to be invoked before starting subsequent workflow run.\n"
					},
					"response": []
				},
				{
					"name": "Reorder migration unit group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/migration-unit-groups/:group-id?action=reorder",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"migration-unit-groups",
								":group-id"
							],
							"query": [
								{
									"key": "action",
									"value": "reorder"
								}
							],
							"variable": [
								{
									"key": "group-id",
									"value": "{{group-id}}"
								}
							]
						},
						"description": "Reorder an migration unit group by placing it before/after\nthe specified migration unit group.\n"
					},
					"response": []
				},
				{
					"name": "Accept default action for feedbacks",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/feedback-response?action=accept-recommended",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"feedback-response"
							],
							"query": [
								{
									"key": "action",
									"value": "accept-recommended"
								}
							]
						},
						"description": "Pick default resolution for all feedback items.\n"
					},
					"response": []
				},
				{
					"name": "Reorder an migration unit within the migration unit group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/migration-unit-groups/:group-id/migration-unit/:migration-unit-id?action=reorder",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"migration-unit-groups",
								":group-id",
								"migration-unit",
								":migration-unit-id"
							],
							"query": [
								{
									"key": "action",
									"value": "reorder"
								}
							],
							"variable": [
								{
									"key": "group-id",
									"value": "{{group-id}}"
								},
								{
									"key": "migration-unit-id",
									"value": "{{migration-unit-id}}"
								}
							]
						},
						"description": "Reorder an migration unit within the migration unit group by placing it\nbefore/after the specified migration unit\n"
					},
					"response": []
				},
				{
					"name": "Reset migration plan to default plan",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/plan?action=reset?component_type={{component_type}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"plan"
							],
							"query": [
								{
									"key": "action",
									"value": "reset?component_type={{component_type}}"
								}
							]
						},
						"description": "Reset the migration plan to default plan. User has an option to change\nthe default plan. But if after making changes, user wants to go\nback to the default plan, this is the way to do so.\n"
					},
					"response": []
				},
				{
					"name": "Get migration status for migration unit groups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/migration-unit-groups-status?component_type={{component_type}}&cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"migration-unit-groups-status"
							],
							"query": [
								{
									"key": "component_type",
									"value": "{{component_type}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Get migration status for migration unit groups"
					},
					"response": []
				},
				{
					"name": "Pause migration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/plan?action=pause",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"plan"
							],
							"query": [
								{
									"key": "action",
									"value": "pause"
								}
							]
						},
						"description": "Pause the migration. Migration will be paused after migration of all\nthe nodes currently in progress is completed either successfully\nor with failure. User can make changes in the migration plan when\nthe migration is paused.\n"
					},
					"response": []
				},
				{
					"name": "Get migration status for group",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/migration-unit-groups/:group-id/status?cursor={{cursor}}&has_errors=false&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"migration-unit-groups",
								":group-id",
								"status"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "has_errors",
									"value": "false"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							],
							"variable": [
								{
									"key": "group-id",
									"value": "{{group-id}}"
								}
							]
						},
						"description": "Get migration status for migration units in the specified group. User can\nspecify whether to show only the migration units with errors.\n"
					},
					"response": []
				},
				{
					"name": "Return information of all migration unit groups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/migration-unit-groups?component_type={{component_type}}&cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&summary=false&sync=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"migration-unit-groups"
							],
							"query": [
								{
									"key": "component_type",
									"value": "{{component_type}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "summary",
									"value": "false"
								},
								{
									"key": "sync",
									"value": "false"
								}
							]
						},
						"description": "Return information of all migration unit groups in the\nmigration plan.  If request parameter summary is set to true, then\nonly count of migration units will be returned, migration units list\nwill be empty. If request parameter component type is specified,\nthen all migration unit groups for that component will be returned.\n"
					},
					"response": []
				},
				{
					"name": "Create a group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/migration-unit-groups",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"migration-unit-groups"
							]
						},
						"description": "Create a group of migration units.\n"
					},
					"response": []
				},
				{
					"name": "Get migration units aggregate-info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/migration-units/aggregate-info?component_type={{component_type}}&cursor={{cursor}}&group_id={{group_id}}&has_errors=false&included_fields={{included_fields}}&metadata={{metadata}}&page_size=1000&selection_status=ALL&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"migration-units",
								"aggregate-info"
							],
							"query": [
								{
									"key": "component_type",
									"value": "{{component_type}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "group_id",
									"value": "{{group_id}}"
								},
								{
									"key": "has_errors",
									"value": "false"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "metadata",
									"value": "{{metadata}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "selection_status",
									"value": "ALL"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Get migration units aggregate-info"
					},
					"response": []
				},
				{
					"name": "Rollbabck migration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/plan?action=rollback",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"plan"
							],
							"query": [
								{
									"key": "action",
									"value": "rollback"
								}
							]
						},
						"description": "Roll back the migration. Changes applied to target NSX will be reverted.\nUse the migration status API to monitor progress of roll back.\n"
					},
					"response": []
				},
				{
					"name": "Get summary of nodes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/nodes-summary",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"nodes-summary"
							]
						},
						"description": "Get summary of nodes, which includes node count for each type and component version."
					},
					"response": []
				},
				{
					"name": "NSX-V feedback details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/grouped-feedback-requests?category={{category}}&cursor={{cursor}}&hash={{hash}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&state=ALL&sub_category={{sub_category}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"grouped-feedback-requests"
							],
							"query": [
								{
									"key": "category",
									"value": "{{category}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "hash",
									"value": "{{hash}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "state",
									"value": "ALL"
								},
								{
									"key": "sub_category",
									"value": "{{sub_category}}"
								}
							]
						},
						"description": "Get feedback details of NSX-V to be migrated, grouped by feedback type.\n"
					},
					"response": []
				},
				{
					"name": "Get list of nodes across all types",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/nodes?component_type={{component_type}}&component_version={{component_version}}&cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"nodes"
							],
							"query": [
								{
									"key": "component_type",
									"value": "{{component_type}}"
								},
								{
									"key": "component_version",
									"value": "{{component_version}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Get list of nodes. If request parameter component type is specified, then\nall nodes for that component will be returned. If request parameter component\nversion is specified, then all nodes at that version will be returned.\n"
					},
					"response": []
				},
				{
					"name": "NSX-V setup details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/setup",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"setup"
							]
						},
						"description": "Get setup details of NSX-V to be migrated.\n"
					},
					"response": []
				},
				{
					"name": "NSX-V setup details",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/setup",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"setup"
							]
						},
						"description": "Provide setup details of NSX-V to be migrated.\n"
					},
					"response": []
				},
				{
					"name": "Get migration summary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/summary",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"summary"
							]
						},
						"description": "Get migration summary"
					},
					"response": []
				},
				{
					"name": "Get migration plan settings for the component",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/plan/:component_type/settings",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"plan",
								":component_type",
								"settings"
							],
							"variable": [
								{
									"key": "component_type",
									"value": "{{component_type}}"
								}
							]
						},
						"description": "Get the migration plan settings for the component.\n"
					},
					"response": []
				},
				{
					"name": "Update migration plan settings for the component",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/plan/:component_type/settings",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"plan",
								":component_type",
								"settings"
							],
							"variable": [
								{
									"key": "component_type",
									"value": "{{component_type}}"
								}
							]
						},
						"description": "Update the migration plan settings for the component.\n"
					},
					"response": []
				},
				{
					"name": "Continue migration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/plan?action=continue?skip=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"plan"
							],
							"query": [
								{
									"key": "action",
									"value": "continue?skip=false"
								}
							]
						},
						"description": "Continue the migration. Resumes the migration from the point where\nit was paused.\n"
					},
					"response": []
				},
				{
					"name": "NSX-V feedback details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/feedback-requests?category={{category}}&cursor={{cursor}}&hash={{hash}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&state=ALL&sub_category={{sub_category}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"feedback-requests"
							],
							"query": [
								{
									"key": "category",
									"value": "{{category}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "hash",
									"value": "{{hash}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "state",
									"value": "ALL"
								},
								{
									"key": "sub_category",
									"value": "{{sub_category}}"
								}
							]
						},
						"description": "Get feedback details of NSX-V to be migrated.\n"
					},
					"response": []
				},
				{
					"name": "Get the list of discovered switches (DVS, VSS)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/discovered-switches?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"discovered-switches"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Get the list of discovered switches (DVS, VSS) for the selected VC.\n"
					},
					"response": []
				},
				{
					"name": "Add migration units to specified migration unit group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/migration-unit-groups/:group-id?action=add_migration_units",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"migration-unit-groups",
								":group-id"
							],
							"query": [
								{
									"key": "action",
									"value": "add_migration_units"
								}
							],
							"variable": [
								{
									"key": "group-id",
									"value": "{{group-id}}"
								}
							]
						},
						"description": "Add migration units to specified migration unit group. The migration\nunits will be added at the end of the migration unit list.\n"
					},
					"response": []
				},
				{
					"name": "Get migration units",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/migration-units?component_type={{component_type}}&current_version={{current_version}}&cursor={{cursor}}&group_id={{group_id}}&has_warnings=false&included_fields={{included_fields}}&metadata={{metadata}}&migration_unit_type={{migration_unit_type}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"migration-units"
							],
							"query": [
								{
									"key": "component_type",
									"value": "{{component_type}}"
								},
								{
									"key": "current_version",
									"value": "{{current_version}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "group_id",
									"value": "{{group_id}}"
								},
								{
									"key": "has_warnings",
									"value": "false"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "metadata",
									"value": "{{metadata}}"
								},
								{
									"key": "migration_unit_type",
									"value": "{{migration_unit_type}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Get migration units"
					},
					"response": []
				},
				{
					"name": "Get the switch set as current scope for migration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/switch",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"switch"
							]
						},
						"description": "The user is returned the switch (DVS/VSS) set as current scope of migration.\n"
					},
					"response": []
				},
				{
					"name": "Set the switch as current scope for migration",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/switch",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"switch"
							]
						},
						"description": "The user specifies a DVS / VSS as the current scope of migration.\n"
					},
					"response": []
				},
				{
					"name": "Return aggregate information of all migration unit groups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/migration-unit-groups/aggregate-info?component_type={{component_type}}&cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&summary=false&sync=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"migration-unit-groups",
								"aggregate-info"
							],
							"query": [
								{
									"key": "component_type",
									"value": "{{component_type}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "summary",
									"value": "false"
								},
								{
									"key": "sync",
									"value": "false"
								}
							]
						},
						"description": "Return information of all migration unit groups in the\nmigration plan.  If request parameter summary is set to true, then\nonly count of migration units will be returned, migration units list\nwill be empty. If request parameter component type is specified,\nthen all migration unit groups for that component will be returned.\n"
					},
					"response": []
				},
				{
					"name": "Get a specific migration unit",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/migration/migration-units/:migration-unit-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"migration",
								"migration-units",
								":migration-unit-id"
							],
							"variable": [
								{
									"key": "migration-unit-id",
									"value": "{{migration-unit-id}}"
								}
							]
						},
						"description": "Get a specific migration unit"
					},
					"response": []
				}
			],
			"description": "Folder for migration"
		},
		{
			"name": "ns-services",
			"item": [
				{
					"name": "Read NSService",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-services/:ns-service-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-services",
								":ns-service-id"
							],
							"variable": [
								{
									"key": "ns-service-id",
									"value": "{{ns-service-id}}"
								}
							]
						},
						"description": "Returns information about the specified NSService\n"
					},
					"response": []
				},
				{
					"name": "Update NSService",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-services/:ns-service-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-services",
								":ns-service-id"
							],
							"variable": [
								{
									"key": "ns-service-id",
									"value": "{{ns-service-id}}"
								}
							]
						},
						"description": "Updates the specified NSService. Modifiable parameters include the description,\ndisplay_name and the NSService element. The system defined NSServices can't be\nmodified\n"
					},
					"response": []
				},
				{
					"name": "Delete NSService",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-services/:ns-service-id?force=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-services",
								":ns-service-id"
							],
							"query": [
								{
									"key": "force",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "ns-service-id",
									"value": "{{ns-service-id}}"
								}
							]
						},
						"description": "Deletes the specified NSService. By default, if the NSService is being\nreferred in an NSServiceGroup, it can't be deleted. In such situations,\npass \"force=true\" as a parameter to force delete the NSService. System\ndefined NSServices can't be deleted using \"force\" flag.\n"
					},
					"response": []
				},
				{
					"name": "List all NSServices",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-services?cursor={{cursor}}&default_service={{default_service}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-services"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "default_service",
									"value": "{{default_service}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns paginated list of NSServices\n"
					},
					"response": []
				},
				{
					"name": "Create NSService",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-services",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-services"
							]
						},
						"description": "Creates a new NSService which allows users to specify characteristics to use\nfor matching network traffic.\n"
					},
					"response": []
				}
			],
			"description": "Folder for ns-services"
		},
		{
			"name": "aaa",
			"item": [
				{
					"name": "Get role information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/aaa/roles/:role",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"aaa",
								"roles",
								":role"
							],
							"variable": [
								{
									"key": "role",
									"value": "{{role}}"
								}
							]
						},
						"description": "Get role information"
					},
					"response": []
				},
				{
					"name": "Get all the User Groups where vIDM display name matches the search key case insensitively. The search key is checked to be a substring of display name. This is a non paginated API.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/aaa/vidm/groups?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&search_string={{search_string}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"aaa",
								"vidm",
								"groups"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "search_string",
									"value": "{{search_string}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Get all the User Groups where vIDM display name matches the search key case insensitively. The search key is checked to be a substring of display name. This is a non paginated API."
					},
					"response": []
				},
				{
					"name": "Get information about logged-in user. The permissions parameter of the NsxRole has been deprecated.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/aaa/user-info",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"aaa",
								"user-info"
							]
						},
						"description": "Get information about logged-in user. The permissions parameter of the NsxRole has been deprecated."
					},
					"response": []
				},
				{
					"name": "Get all the users from vIDM whose userName, givenName or familyName matches the search key case insensitively. The search key is checked to be a substring of name or given name or family name. This is a non paginated API.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/aaa/vidm/users?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&search_string={{search_string}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"aaa",
								"vidm",
								"users"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "search_string",
									"value": "{{search_string}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Get all the users from vIDM whose userName, givenName or familyName matches the search key case insensitively. The search key is checked to be a substring of name or given name or family name. This is a non paginated API."
					},
					"response": []
				},
				{
					"name": "Get user/group's role information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/aaa/role-bindings/:binding-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"aaa",
								"role-bindings",
								":binding-id"
							],
							"variable": [
								{
									"key": "binding-id",
									"value": "{{binding-id}}"
								}
							]
						},
						"description": "Get user/group's role information"
					},
					"response": []
				},
				{
					"name": "Update User or Group's roles",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/aaa/role-bindings/:binding-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"aaa",
								"role-bindings",
								":binding-id"
							],
							"variable": [
								{
									"key": "binding-id",
									"value": "{{binding-id}}"
								}
							]
						},
						"description": "Update User or Group's roles"
					},
					"response": []
				},
				{
					"name": "Delete user/group's roles assignment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/aaa/role-bindings/:binding-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"aaa",
								"role-bindings",
								":binding-id"
							],
							"variable": [
								{
									"key": "binding-id",
									"value": "{{binding-id}}"
								}
							]
						},
						"description": "Delete user/group's roles assignment"
					},
					"response": []
				},
				{
					"name": "Get all the users and groups from vIDM matching the search key case insensitively. The search key is checked to be a substring of name or given name or family name of user and display name of group. This is a non paginated API.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/aaa/vidm/search?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&search_string={{search_string}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"aaa",
								"vidm",
								"search"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "search_string",
									"value": "{{search_string}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Get all the users and groups from vIDM matching the search key case insensitively. The search key is checked to be a substring of name or given name or family name of user and display name of group. This is a non paginated API."
					},
					"response": []
				},
				{
					"name": "Create registration access token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/aaa/registration-token",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"aaa",
								"registration-token"
							]
						},
						"description": "The privileges of the registration token will be the same as the caller."
					},
					"response": []
				},
				{
					"name": "Delete all stale role assignments",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/aaa/role-bindings?action=delete_stale_bindings",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"aaa",
								"role-bindings"
							],
							"query": [
								{
									"key": "action",
									"value": "delete_stale_bindings"
								}
							]
						},
						"description": "Delete all stale role assignments"
					},
					"response": []
				},
				{
					"name": "Get information about all roles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/aaa/roles",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"aaa",
								"roles"
							]
						},
						"description": "Get information about all roles"
					},
					"response": []
				},
				{
					"name": "Get registration access token",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/aaa/registration-token/:token",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"aaa",
								"registration-token",
								":token"
							],
							"variable": [
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Get registration access token"
					},
					"response": []
				},
				{
					"name": "Delete registration access token",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/aaa/registration-token/:token",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"aaa",
								"registration-token",
								":token"
							],
							"variable": [
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Delete registration access token"
					},
					"response": []
				},
				{
					"name": "Get all users and groups with their roles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/aaa/role-bindings?cursor={{cursor}}&included_fields={{included_fields}}&name={{name}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&type={{type}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"aaa",
								"role-bindings"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "type",
									"value": "{{type}}"
								}
							]
						},
						"description": "Get all users and groups with their roles"
					},
					"response": []
				},
				{
					"name": "Assign roles to User or Group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/aaa/role-bindings",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"aaa",
								"role-bindings"
							]
						},
						"description": "When assigning a user role, specify the user name with the same\ncase as it appears in vIDM to access the NSX-T user interface.\nFor example, if vIDM has the user name User1@example.com then\nthe name attribute in the API call must be be User1@example.com\nand cannot be user1@example.com.\n"
					},
					"response": []
				}
			],
			"description": "Folder for aaa"
		},
		{
			"name": "ui-views",
			"item": [
				{
					"name": "Returns the Widget Configurations based on query criteria defined in WidgetQueryParameters.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ui-views/:view-id/widgetconfigurations?container={{container}}&widget_ids={{widget_ids}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ui-views",
								":view-id",
								"widgetconfigurations"
							],
							"query": [
								{
									"key": "container",
									"value": "{{container}}"
								},
								{
									"key": "widget_ids",
									"value": "{{widget_ids}}"
								}
							],
							"variable": [
								{
									"key": "view-id",
									"value": "{{view-id}}"
								}
							]
						},
						"description": "If no query params are specified then all the Widget Configurations of\nthe specified view are returned.\n"
					},
					"response": []
				},
				{
					"name": "Creates a new Widget Configuration.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ui-views/:view-id/widgetconfigurations",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ui-views",
								":view-id",
								"widgetconfigurations"
							],
							"variable": [
								{
									"key": "view-id",
									"value": "{{view-id}}"
								}
							]
						},
						"description": "Creates a new Widget Configuration and adds it to the specified view.\nSupported resource_types are LabelValueConfiguration, DonutConfiguration,\nGridConfiguration, StatsConfiguration, MultiWidgetConfiguration,\nGraphConfiguration and ContainerConfiguration.\n\nNote: Expressions should be given in a single line. If an expression spans\n  multiple lines, then form the expression in a single line.\nFor label-value pairs, expressions are evaluated as follows:\n  a. First, render configurations are evaluated in their order of\n     appearance in the widget config. The 'field' is evaluated at the end.\n  b. Second, when render configuration is provided then the order of\n     evaluation is\n     1. If expressions provided in 'condition' and 'display value' are\n        well-formed and free of runtime-errors such as 'null pointers' and\n        evaluates to 'true'; Then remaining render configurations are not\n        evaluated, and the current render configuration's 'display value'\n        is taken as the final value.\n     2. If expression provided in 'condition' of render configuration is\n        false, then next render configuration is evaluated.\n     3. Finally, 'field' is evaluated only when every render configuration\n        evaluates to false and no error occurs during steps 1 and 2 above.\n\nIf an error occurs during evaluation of render configuration, then an\n  error message is shown. The display value corresponding to that label is\n  not shown and evaluation of the remaining render configurations continues\n  to collect and show all the error messages (marked with the 'Label' for\n  identification) as 'Error_Messages: {}'.\n\nIf during evaluation of expressions for any label-value pair an error\n  occurs, then it is marked with error. The errors are shown in the report,\n  along with the label value pairs that are error-free.\n\nImportant: For elements that take expressions, strings should be provided\n  by escaping them with a back-slash. These elements are - condition, field,\n  tooltip text and render_configuration's display_value.\n"
					},
					"response": []
				},
				{
					"name": "Returns Widget Configuration Information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ui-views/:view-id/widgetconfigurations/:widgetconfiguration-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ui-views",
								":view-id",
								"widgetconfigurations",
								":widgetconfiguration-id"
							],
							"variable": [
								{
									"key": "view-id",
									"value": "{{view-id}}"
								},
								{
									"key": "widgetconfiguration-id",
									"value": "{{widgetconfiguration-id}}"
								}
							]
						},
						"description": "Returns Information about a specific Widget Configuration.\n"
					},
					"response": []
				},
				{
					"name": "Update Widget Configuration",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ui-views/:view-id/widgetconfigurations/:widgetconfiguration-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ui-views",
								":view-id",
								"widgetconfigurations",
								":widgetconfiguration-id"
							],
							"variable": [
								{
									"key": "view-id",
									"value": "{{view-id}}"
								},
								{
									"key": "widgetconfiguration-id",
									"value": "{{widgetconfiguration-id}}"
								}
							]
						},
						"description": "Updates the widget at the given view. If the widget is referenced by other\nviews, then the widget will be updated in all the views that it is part of.\n"
					},
					"response": []
				},
				{
					"name": "Delete Widget Configuration",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ui-views/:view-id/widgetconfigurations/:widgetconfiguration-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ui-views",
								":view-id",
								"widgetconfigurations",
								":widgetconfiguration-id"
							],
							"variable": [
								{
									"key": "view-id",
									"value": "{{view-id}}"
								},
								{
									"key": "widgetconfiguration-id",
									"value": "{{widgetconfiguration-id}}"
								}
							]
						},
						"description": "Detaches widget from a given view. If the widget is no longer part of any\nview, then it will be purged.\n"
					},
					"response": []
				},
				{
					"name": "Returns View Information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ui-views/:view-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ui-views",
								":view-id"
							],
							"variable": [
								{
									"key": "view-id",
									"value": "{{view-id}}"
								}
							]
						},
						"description": "Returns Information about a specific View.\n"
					},
					"response": []
				},
				{
					"name": "Update View",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ui-views/:view-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ui-views",
								":view-id"
							],
							"variable": [
								{
									"key": "view-id",
									"value": "{{view-id}}"
								}
							]
						},
						"description": "Update View"
					},
					"response": []
				},
				{
					"name": "Delete View",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ui-views/:view-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ui-views",
								":view-id"
							],
							"variable": [
								{
									"key": "view-id",
									"value": "{{view-id}}"
								}
							]
						},
						"description": "Delete View"
					},
					"response": []
				},
				{
					"name": "Returns the Views based on query criteria defined in ViewQueryParameters.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ui-views?tag={{tag}}&view_ids={{view_ids}}&widget_id={{widget_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ui-views"
							],
							"query": [
								{
									"key": "tag",
									"value": "{{tag}}"
								},
								{
									"key": "view_ids",
									"value": "{{view_ids}}"
								},
								{
									"key": "widget_id",
									"value": "{{widget_id}}"
								}
							]
						},
						"description": "If no query params are specified then all the views entitled for the user\nare returned. The views to which a user is entitled to include the views\ncreated by the user and the shared views.\n"
					},
					"response": []
				},
				{
					"name": "Creates a new View.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ui-views",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ui-views"
							]
						},
						"description": "Creates a new View."
					},
					"response": []
				}
			],
			"description": "Folder for ui-views"
		},
		{
			"name": "transport-zones",
			"item": [
				{
					"name": "Get a Transport Zone",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-zones/:zone-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-zones",
								":zone-id"
							],
							"variable": [
								{
									"key": "zone-id",
									"value": "{{zone-id}}"
								}
							]
						},
						"description": "Returns information about a single transport zone."
					},
					"response": []
				},
				{
					"name": "Update a Transport Zone",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-zones/:zone-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-zones",
								":zone-id"
							],
							"variable": [
								{
									"key": "zone-id",
									"value": "{{zone-id}}"
								}
							]
						},
						"description": "Updates an existing transport zone. Modifiable parameters are\ntransport_type (VLAN or OVERLAY), description, and display_name. The\nrequest must include the existing host_switch_name.\n"
					},
					"response": []
				},
				{
					"name": "Delete a Transport Zone",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-zones/:zone-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-zones",
								":zone-id"
							],
							"variable": [
								{
									"key": "zone-id",
									"value": "{{zone-id}}"
								}
							]
						},
						"description": "Deletes an existing transport zone."
					},
					"response": []
				},
				{
					"name": "Read status of transport nodes in a transport zone",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-zones/:zone-id/transport-node-status?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&source={{source}}&status={{status}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-zones",
								":zone-id",
								"transport-node-status"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "source",
									"value": "{{source}}"
								},
								{
									"key": "status",
									"value": "{{status}}"
								}
							],
							"variable": [
								{
									"key": "zone-id",
									"value": "{{zone-id}}"
								}
							]
						},
						"description": "Read status of transport nodes in a transport zone"
					},
					"response": []
				},
				{
					"name": "Get a Transport Zone's Current Runtime Status Information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-zones/:zone-id/summary",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-zones",
								":zone-id",
								"summary"
							],
							"variable": [
								{
									"key": "zone-id",
									"value": "{{zone-id}}"
								}
							]
						},
						"description": "Returns information about a specified transport zone, including the number\nof logical switches in the transport zone, number of logical spitch ports\nassigned to the transport zone, and number of transport nodes in the\ntransport zone.\n"
					},
					"response": []
				},
				{
					"name": "List Transport Zones",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-zones?cursor={{cursor}}&included_fields={{included_fields}}&is_default={{is_default}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&transport_type={{transport_type}}&uplink_teaming_policy_name={{uplink_teaming_policy_name}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-zones"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "is_default",
									"value": "{{is_default}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "transport_type",
									"value": "{{transport_type}}"
								},
								{
									"key": "uplink_teaming_policy_name",
									"value": "{{uplink_teaming_policy_name}}"
								}
							]
						},
						"description": "Returns information about configured transport zones. NSX requires at\nleast one transport zone. NSX uses transport zones to provide connectivity\nbased on the topology of the underlying network, trust zones, or\norganizational separations. For example, you might have hypervisors that\nuse one network for management traffic and a different network for VM\ntraffic. This architecture would require two transport zones. The\ncombination of transport zones plus transport connectors enables NSX to\nform tunnels between hypervisors. Transport zones define which interfaces\non the hypervisors can communicate with which other interfaces on other\nhypervisors to establish overlay tunnels or provide connectivity to a VLAN.\nA logical switch can be in one (and only one) transport zone. This means\nthat all of a switch's interfaces must be in the same transport zone.\nHowever, each hypervisor virtual switch (OVS or VDS) has multiple\ninterfaces (connectors), and each connector can be attached to a different\nlogical switch. For example, on a single hypervisor with two connectors,\nconnector A can be attached to logical switch 1 in transport zone A, while\nconnector B is attached to logical switch 2 in transport zone B. In this\nway, a single hypervisor can participate in multiple transport zones. The\nAPI for creating a transport zone requires that a single host switch be\nspecified for each transport zone, and multiple transport zones can share\nthe same host switch.\n"
					},
					"response": []
				},
				{
					"name": "Create a Transport Zone",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-zones",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-zones"
							]
						},
						"description": "Creates a new transport zone. The required parameters are host_switch_name\nand transport_type (OVERLAY or VLAN). The optional parameters are\ndescription and display_name.\n"
					},
					"response": []
				},
				{
					"name": "Get high-level summary of a transport zone. The service layer does not support source = realtime or cached.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-zones/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-zones",
								"status"
							]
						},
						"description": "Get high-level summary of a transport zone. The service layer does not support source = realtime or cached."
					},
					"response": []
				},
				{
					"name": "Get high-level summary of a transport zone",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-zones/:zone-id/status?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-zones",
								":zone-id",
								"status"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "zone-id",
									"value": "{{zone-id}}"
								}
							]
						},
						"description": "Get high-level summary of a transport zone"
					},
					"response": []
				},
				{
					"name": "Creates a status report of transport nodes in a transport zone",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/octet-stream"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-zones/:zone-id/transport-node-status-report?source={{source}}&status={{status}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-zones",
								":zone-id",
								"transport-node-status-report"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								},
								{
									"key": "status",
									"value": "{{status}}"
								}
							],
							"variable": [
								{
									"key": "zone-id",
									"value": "{{zone-id}}"
								}
							]
						},
						"description": "You must provide the request header \"Accept:application/octet-stream\" when calling this API."
					},
					"response": []
				},
				{
					"name": "Creates a status report of transport nodes of all the transport zones",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/octet-stream"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-zones/transport-node-status-report?source={{source}}&status={{status}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-zones",
								"transport-node-status-report"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								},
								{
									"key": "status",
									"value": "{{status}}"
								}
							]
						},
						"description": "You must provide the request header \"Accept:application/octet-stream\" when calling this API."
					},
					"response": []
				},
				{
					"name": "Read status of all the transport nodes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-zones/transport-node-status?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&source={{source}}&status={{status}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-zones",
								"transport-node-status"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "source",
									"value": "{{source}}"
								},
								{
									"key": "status",
									"value": "{{status}}"
								}
							]
						},
						"description": "Read status of all the transport nodes"
					},
					"response": []
				}
			],
			"description": "Folder for transport-zones"
		},
		{
			"name": "pools",
			"item": [
				{
					"name": "List VNI Pools",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pools/vni-pools?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pools",
								"vni-pools"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns information about the default and configured virtual\nnetwork identifier (VNI) pools for use when building logical network\nsegments. Each virtual network has a unique ID called a VNI. Instead\nof creating a new VNI each time you need a new logical switch, you\ncan instead allocate a VNI from a VNI pool. VNI pools are sometimes\ncalled segment ID pools. Each VNI pool has a range of usable VNIs. By\ndefault, there is one pool with two ranges [5000, 65535] and [65536,\n75000]. To create multiple smaller pools, specify a smaller range for\neach pool such as 75001-75100 and 75101-75200. The VNI range determines\nthe maximum number of logical switches that can be created in each\nnetwork segment.\n"
					},
					"response": []
				},
				{
					"name": "List MAC Pools",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pools/mac-pools?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pools",
								"mac-pools"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns a list of all the MAC pools\n"
					},
					"response": []
				},
				{
					"name": "List subnets within an IP block",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pools/ip-subnets?block_id={{block_id}}&cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pools",
								"ip-subnets"
							],
							"query": [
								{
									"key": "block_id",
									"value": "{{block_id}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns information about all subnets present within an IP address\nblock. Information includes subnet's id, display_name, description, cidr and\nallocation ranges.\n"
					},
					"response": []
				},
				{
					"name": "Create subnet of specified size within an IP block",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pools/ip-subnets",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pools",
								"ip-subnets"
							]
						},
						"description": "Carves out a subnet of requested size from the specified IP block. The \"size\"\nparameter  and the \"block_id \" are the requireds field while invoking this API.\nIf the IP block has sufficient resources/space to allocate a subnet of specified size,\nthe response will contain all the details of the newly created subnet including the\ndisplay_name, description, cidr & allocation_ranges. Returns a conflict error\nif the IP block does not have enough resources/space to allocate a subnet of\nthe requested size.\n"
					},
					"response": []
				},
				{
					"name": "List virtual tunnel endpoint Label Pools",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pools/vtep-label-pools?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pools",
								"vtep-label-pools"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns a list of all virtual tunnel endpoint label pools\n"
					},
					"response": []
				},
				{
					"name": "Returns list of configured IP address blocks.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pools/ip-blocks?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pools",
								"ip-blocks"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns information about configured IP address blocks. Information includes\nthe id, display name, description & CIDR of IP address blocks\n"
					},
					"response": []
				},
				{
					"name": "Create a new IP address block.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pools/ip-blocks",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pools",
								"ip-blocks"
							]
						},
						"description": "Creates a new IPv4 address block using the specified cidr. cidr is a required\nparameter. display_name & description are optional parameters\n"
					},
					"response": []
				},
				{
					"name": "Get IP address block information.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pools/ip-blocks/:block-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pools",
								"ip-blocks",
								":block-id"
							],
							"variable": [
								{
									"key": "block-id",
									"value": "{{block-id}}"
								}
							]
						},
						"description": "Returns information about the IP address block with specified id.\nInformation includes id, display_name, description & cidr.\n"
					},
					"response": []
				},
				{
					"name": "Update an IP Address Block",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pools/ip-blocks/:block-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pools",
								"ip-blocks",
								":block-id"
							],
							"variable": [
								{
									"key": "block-id",
									"value": "{{block-id}}"
								}
							]
						},
						"description": "Modifies the IP address block with specifed id. display_name, description\nand cidr are parameters that can be modified. If a new cidr is specified,\nit should contain all existing subnets in the IP block. Returns a conflict error\nif the IP address block cidr can not be modified due to the presence of\nsubnets that it contains. Eg: If the IP block contains a subnet 192.168.0.1/24\nand we try to change the IP block cidr to 10.1.0.1/16, it results in a conflict.\n"
					},
					"response": []
				},
				{
					"name": "Delete an IP Address Block",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pools/ip-blocks/:block-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pools",
								"ip-blocks",
								":block-id"
							],
							"variable": [
								{
									"key": "block-id",
									"value": "{{block-id}}"
								}
							]
						},
						"description": "Deletes the IP address block with specified id if it exists. IP\nblock cannot be deleted if there are allocated subnets from the block.\n"
					},
					"response": []
				},
				{
					"name": "Read MAC Pool",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pools/mac-pools/:pool-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pools",
								"mac-pools",
								":pool-id"
							],
							"variable": [
								{
									"key": "pool-id",
									"value": "{{pool-id}}"
								}
							]
						},
						"description": "Returns information about the specified MAC pool.\n"
					},
					"response": []
				},
				{
					"name": "Read VNI Pool",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pools/vni-pools/:pool-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pools",
								"vni-pools",
								":pool-id"
							],
							"variable": [
								{
									"key": "pool-id",
									"value": "{{pool-id}}"
								}
							]
						},
						"description": "Returns information about the specified virtual network identifier (VNI) pool.\n"
					},
					"response": []
				},
				{
					"name": "Update a VNI Pool",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pools/vni-pools/:pool-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pools",
								"vni-pools",
								":pool-id"
							],
							"variable": [
								{
									"key": "pool-id",
									"value": "{{pool-id}}"
								}
							]
						},
						"description": "Updates the specified VNI pool. Modifiable parameters include description, display_name and ranges.\nRanges can be added, modified or deleted. Overlapping ranges are not allowed.\nOnly range end can be modified for any existing range.\nRange shrinking or deletion is not allowed if there are any allocated VNIs.\n"
					},
					"response": []
				},
				{
					"name": "Get the subnet within an IP block",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pools/ip-subnets/:subnet-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pools",
								"ip-subnets",
								":subnet-id"
							],
							"variable": [
								{
									"key": "subnet-id",
									"value": "{{subnet-id}}"
								}
							]
						},
						"description": "Returns information about the subnet with specified id within a given\nIP address block. Information includes display_name, description, cidr and\nallocation_ranges.\n"
					},
					"response": []
				},
				{
					"name": "Allocate or Release an IP Address from a Ip Subnet",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pools/ip-subnets/:subnet-id?action={{action}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pools",
								"ip-subnets",
								":subnet-id"
							],
							"query": [
								{
									"key": "action",
									"value": "{{action}}"
								}
							],
							"variable": [
								{
									"key": "subnet-id",
									"value": "{{subnet-id}}"
								}
							]
						},
						"description": "Allocates or releases an IP address from the specified IP subnet. To allocate\nan address, include ?action=ALLOCATE in the request and a \"{}\"\nin the request body. When the request is successful, the response is\n\"allocation_id\": \"<ip-address>\", where <ip-address> is an IP address from\nthe specified pool. To release an IP address (return it back to the pool),\ninclude ?action=RELEASE in the request and \"allocation_id\":<ip-address> in\nthe request body, where <ip-address> is the address to be released. When the\nrequest is successful, the response is NULL.\n"
					},
					"response": []
				},
				{
					"name": "Delete subnet within an IP block",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pools/ip-subnets/:subnet-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pools",
								"ip-subnets",
								":subnet-id"
							],
							"variable": [
								{
									"key": "subnet-id",
									"value": "{{subnet-id}}"
								}
							]
						},
						"description": "Deletes a subnet with specified id within a given IP address block.\nDeletion is allowed only when there are no allocated IP addresses\nfrom that subnet.\n"
					},
					"response": []
				},
				{
					"name": "List IP Pools",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pools/ip-pools?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pools",
								"ip-pools"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns information about the configured IP address pools. Information\nincludes the display name and description of the pool and the details of\neach of the subnets in the pool, including the DNS servers, allocation\nranges, gateway, and CIDR subnet address.\n"
					},
					"response": []
				},
				{
					"name": "Create an IP Pool",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pools/ip-pools",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pools",
								"ip-pools"
							]
						},
						"description": "Creates a new IPv4 or IPv6 address pool. Required parameters are\nallocation_ranges and cidr. Optional parameters are display_name,\ndescription, dns_nameservers, dns_suffix, and gateway_ip.\n"
					},
					"response": []
				},
				{
					"name": "Read IP Pool",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pools/ip-pools/:pool-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pools",
								"ip-pools",
								":pool-id"
							],
							"variable": [
								{
									"key": "pool-id",
									"value": "{{pool-id}}"
								}
							]
						},
						"description": "Returns information about the specified IP address pool."
					},
					"response": []
				},
				{
					"name": "Update an IP Pool",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pools/ip-pools/:pool-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pools",
								"ip-pools",
								":pool-id"
							],
							"variable": [
								{
									"key": "pool-id",
									"value": "{{pool-id}}"
								}
							]
						},
						"description": "Modifies the specified IP address pool. Modifiable parameters include the\ndescription, display_name, and all subnet information.\n"
					},
					"response": []
				},
				{
					"name": "Allocate or Release an IP Address from a Pool",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pools/ip-pools/:pool-id?action={{action}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pools",
								"ip-pools",
								":pool-id"
							],
							"query": [
								{
									"key": "action",
									"value": "{{action}}"
								}
							],
							"variable": [
								{
									"key": "pool-id",
									"value": "{{pool-id}}"
								}
							]
						},
						"description": "Allocates or releases an IP address from the specified IP pool. To allocate\nan address, include ?action=ALLOCATE in the request and \"allocation_id\":null\nin the request body. When the request is successful, the response is\n\"allocation_id\": \"<ip-address>\", where <ip-address> is an IP address from\nthe specified pool. To release an IP address (return it back to the pool),\ninclude ?action=RELEASE in the request and \"allocation_id\":<ip-address> in\nthe request body, where <ip-address> is the address to be released. When the\nrequest is successful, the response is NULL. Tags, display_name and description\nattributes are not supported for AllocationIpAddress in this release.\n"
					},
					"response": []
				},
				{
					"name": "Delete an IP Pool",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pools/ip-pools/:pool-id?force=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pools",
								"ip-pools",
								":pool-id"
							],
							"query": [
								{
									"key": "force",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "pool-id",
									"value": "{{pool-id}}"
								}
							]
						},
						"description": "Deletes the specified IP address pool. By default, if the IpPool is used in other configurations (such as transport node template), it won't be deleted. In such situations, pass \"force=true\" as query param to force delete the IpPool"
					},
					"response": []
				},
				{
					"name": "Read a virtual tunnel endpoint label pool",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pools/vtep-label-pools/:pool-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pools",
								"vtep-label-pools",
								":pool-id"
							],
							"variable": [
								{
									"key": "pool-id",
									"value": "{{pool-id}}"
								}
							]
						},
						"description": "Returns information about the specified virtual tunnel endpoint label pool.\n"
					},
					"response": []
				},
				{
					"name": "List IP Pool Allocations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pools/ip-pools/:pool-id/allocations",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pools",
								"ip-pools",
								":pool-id",
								"allocations"
							],
							"variable": [
								{
									"key": "pool-id",
									"value": "{{pool-id}}"
								}
							]
						},
						"description": "Returns information about which addresses have been allocated from a\nspecified IP address pool.\n"
					},
					"response": []
				}
			],
			"description": "Folder for pools"
		},
		{
			"name": "loadbalancer",
			"item": [
				{
					"name": "Retrieve a load balancer application profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/application-profiles/:application-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"application-profiles",
								":application-profile-id"
							],
							"variable": [
								{
									"key": "application-profile-id",
									"value": "{{application-profile-id}}"
								}
							]
						},
						"description": "Retrieve a load balancer application profile.\n"
					},
					"response": []
				},
				{
					"name": "Update a load balancer application profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/application-profiles/:application-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"application-profiles",
								":application-profile-id"
							],
							"variable": [
								{
									"key": "application-profile-id",
									"value": "{{application-profile-id}}"
								}
							]
						},
						"description": "Update a load balancer application profile.\n"
					},
					"response": []
				},
				{
					"name": "Delete a load balancer application profile",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/application-profiles/:application-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"application-profiles",
								":application-profile-id"
							],
							"variable": [
								{
									"key": "application-profile-id",
									"value": "{{application-profile-id}}"
								}
							]
						},
						"description": "Delete a load balancer application profile.\n"
					},
					"response": []
				},
				{
					"name": "Retrieve a paginated list of load balancer server-ssl profiles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/server-ssl-profiles?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"server-ssl-profiles"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Retrieve a paginated list of load balancer server-ssl profiles.\n"
					},
					"response": []
				},
				{
					"name": "Create a load balancer server-ssl profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/server-ssl-profiles",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"server-ssl-profiles"
							]
						},
						"description": "Create a load balancer server-ssl profile.\n"
					},
					"response": []
				},
				{
					"name": "Retrieve a load balancer service",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/services/:service-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"services",
								":service-id"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								}
							]
						},
						"description": "Retrieve a load balancer service.\n"
					},
					"response": []
				},
				{
					"name": "Update a load balancer service",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/services/:service-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"services",
								":service-id"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								}
							]
						},
						"description": "Update a load balancer service.\n"
					},
					"response": []
				},
				{
					"name": "Delete a load balancer service",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/services/:service-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"services",
								":service-id"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								}
							]
						},
						"description": "Delete a load balancer service.\n"
					},
					"response": []
				},
				{
					"name": "Retrieve a load balancer rule",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/rules/:rule-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"rules",
								":rule-id"
							],
							"variable": [
								{
									"key": "rule-id",
									"value": "{{rule-id}}"
								}
							]
						},
						"description": "Retrieve a load balancer rule.\n"
					},
					"response": []
				},
				{
					"name": "Update a load balancer rule",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/rules/:rule-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"rules",
								":rule-id"
							],
							"variable": [
								{
									"key": "rule-id",
									"value": "{{rule-id}}"
								}
							]
						},
						"description": "Update a load balancer rule.\n"
					},
					"response": []
				},
				{
					"name": "Delete a load balancer rule",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/rules/:rule-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"rules",
								":rule-id"
							],
							"variable": [
								{
									"key": "rule-id",
									"value": "{{rule-id}}"
								}
							]
						},
						"description": "Delete a load balancer rule.\n"
					},
					"response": []
				},
				{
					"name": "Retrieve a load balancer pool",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/pools/:pool-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"pools",
								":pool-id"
							],
							"variable": [
								{
									"key": "pool-id",
									"value": "{{pool-id}}"
								}
							]
						},
						"description": "Retrieve a load balancer pool.\n"
					},
					"response": []
				},
				{
					"name": "Update a load balancer pool",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/pools/:pool-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"pools",
								":pool-id"
							],
							"variable": [
								{
									"key": "pool-id",
									"value": "{{pool-id}}"
								}
							]
						},
						"description": "Update a load balancer pool.\n"
					},
					"response": []
				},
				{
					"name": "Add, remove, or modify load balancer pool members",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/pools/:pool-id?action={{action}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"pools",
								":pool-id"
							],
							"query": [
								{
									"key": "action",
									"value": "{{action}}"
								}
							],
							"variable": [
								{
									"key": "pool-id",
									"value": "{{pool-id}}"
								}
							]
						},
						"description": "For ADD_MEMBERS, pool members will be created and added to load balancer\npool. This action is only valid for static pool members.\nFor REMOVE_MEMBERS, pool members will be removed from load balancer pool\nvia IP and port in pool member settings. This action is only valid for\nstatic pool members.\nFor UPDATE_MEMBERS, pool members admin state will be updated. This action\nis valid for both static pool members and dynamic pool members. For dynamic\npool members, this update will be stored in customized_members field in load\nbalancer pool member group.\n"
					},
					"response": []
				},
				{
					"name": "Delete a load balancer pool",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/pools/:pool-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"pools",
								":pool-id"
							],
							"variable": [
								{
									"key": "pool-id",
									"value": "{{pool-id}}"
								}
							]
						},
						"description": "Delete a load balancer pool.\n"
					},
					"response": []
				},
				{
					"name": "Retrieve a load balancer TCP profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/tcp-profiles/:tcp-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"tcp-profiles",
								":tcp-profile-id"
							],
							"variable": [
								{
									"key": "tcp-profile-id",
									"value": "{{tcp-profile-id}}"
								}
							]
						},
						"description": "Retrieve a load balancer TCP profile.\n"
					},
					"response": []
				},
				{
					"name": "Update a load balancer TCP profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/tcp-profiles/:tcp-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"tcp-profiles",
								":tcp-profile-id"
							],
							"variable": [
								{
									"key": "tcp-profile-id",
									"value": "{{tcp-profile-id}}"
								}
							]
						},
						"description": "Update a load balancer TCP profile.\n"
					},
					"response": []
				},
				{
					"name": "Delete a load balancer TCP profile",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/tcp-profiles/:tcp-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"tcp-profiles",
								":tcp-profile-id"
							],
							"variable": [
								{
									"key": "tcp-profile-id",
									"value": "{{tcp-profile-id}}"
								}
							]
						},
						"description": "Delete a load balancer TCP profile.\n"
					},
					"response": []
				},
				{
					"name": "Retrieve a paginated list of load balancer rules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/rules?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"rules"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Retrieve a paginated list of load balancer rules.\n"
					},
					"response": []
				},
				{
					"name": "Create a load balancer rule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/rules",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"rules"
							]
						},
						"description": "Create a load balancer rule.\n"
					},
					"response": []
				},
				{
					"name": "Retrieve a paginated list of load balancer pools",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/pools?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"pools"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Retrieve a paginated list of load balancer pools.\n"
					},
					"response": []
				},
				{
					"name": "Create a load balancer pool",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/pools",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"pools"
							]
						},
						"description": "Create a load balancer pool.\n"
					},
					"response": []
				},
				{
					"name": "Update a load balancer virtual server with rules",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/virtual-servers/:virtual-server-id?action=update_with_rules",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"virtual-servers",
								":virtual-server-id"
							],
							"query": [
								{
									"key": "action",
									"value": "update_with_rules"
								}
							],
							"variable": [
								{
									"key": "virtual-server-id",
									"value": "{{virtual-server-id}}"
								}
							]
						},
						"description": "It is used to update virtual servers, the associated rules and update the\nbinding of virtual server and rules.\nTo add new rules, make sure the rules which have no identifier specified,\nthe new rules are automatically generated and associated to the virtual\nserver.\nTo delete old rules, the rules should not be configured in new action, the\nUUID of deleted rules should be also removed from rule_ids.\nTo update rules, the rules should be specified with new change and\nconfigured with identifier.\nIf there are some rules which are not modified, those rule should not be\nspecified in the rules list, the UUID list of rules should be specified in\nrule_ids of LbVirtualServer.\n"
					},
					"response": []
				},
				{
					"name": "Retrieve a paginated list of load balancer persistence profiles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/persistence-profiles?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&type={{type}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"persistence-profiles"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "type",
									"value": "{{type}}"
								}
							]
						},
						"description": "Retrieve a paginated list of load balancer persistence profiles.\n"
					},
					"response": []
				},
				{
					"name": "Create a load balancer persistence profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/persistence-profiles",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"persistence-profiles"
							]
						},
						"description": "Create a load balancer persistence profile.\n"
					},
					"response": []
				},
				{
					"name": "Retrieve a load balancer server-ssl profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/server-ssl-profiles/:server-ssl-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"server-ssl-profiles",
								":server-ssl-profile-id"
							],
							"variable": [
								{
									"key": "server-ssl-profile-id",
									"value": "{{server-ssl-profile-id}}"
								}
							]
						},
						"description": "Retrieve a load balancer server-ssl profile.\n"
					},
					"response": []
				},
				{
					"name": "Update a load balancer server-ssl profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/server-ssl-profiles/:server-ssl-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"server-ssl-profiles",
								":server-ssl-profile-id"
							],
							"variable": [
								{
									"key": "server-ssl-profile-id",
									"value": "{{server-ssl-profile-id}}"
								}
							]
						},
						"description": "Update a load balancer server-ssl profile.\n"
					},
					"response": []
				},
				{
					"name": "Delete a load balancer server-ssl profile",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/server-ssl-profiles/:server-ssl-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"server-ssl-profiles",
								":server-ssl-profile-id"
							],
							"variable": [
								{
									"key": "server-ssl-profile-id",
									"value": "{{server-ssl-profile-id}}"
								}
							]
						},
						"description": "Delete a load balancer server-ssl profile.\n"
					},
					"response": []
				},
				{
					"name": "Get the status list of virtual servers in given load balancer service",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/services/:service-id/virtual-servers/status?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"services",
								":service-id",
								"virtual-servers",
								"status"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								}
							]
						},
						"description": "Returns the status list of virtual servers in given load balancer service.\n"
					},
					"response": []
				},
				{
					"name": "Retrieve a list of supported SSL ciphers and protocols",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/ssl/ciphers-and-protocols?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"ssl",
								"ciphers-and-protocols"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Retrieve a list of supported SSL ciphers and protocols.\n"
					},
					"response": []
				},
				{
					"name": "Read the debug information of the load balancer service",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/services/:service-id/debug-info",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"services",
								":service-id",
								"debug-info"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								}
							]
						},
						"description": "API to download below information which will be used for debugging and\ntroubleshooting.\n1) Load balancer service\n2) Load balancer associated virtual servers\n3) Load balancer associated pools\n4) Load balancer associated profiles such as persistence, SSL, application.\n5) Load balancer associated monitors\n6) Load balancer associated rules\n"
					},
					"response": []
				},
				{
					"name": "Retrieve a paginated list of load balancer application profiles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/application-profiles?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&type={{type}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"application-profiles"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "type",
									"value": "{{type}}"
								}
							]
						},
						"description": "Retrieve a paginated list of load balancer application profiles.\n"
					},
					"response": []
				},
				{
					"name": "Create a load balancer application profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/application-profiles",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"application-profiles"
							]
						},
						"description": "Create a load balancer application profile.\n"
					},
					"response": []
				},
				{
					"name": "Retrieve a load balancer monitor",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/monitors/:monitor-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"monitors",
								":monitor-id"
							],
							"variable": [
								{
									"key": "monitor-id",
									"value": "{{monitor-id}}"
								}
							]
						},
						"description": "Retrieve a load balancer monitor.\n"
					},
					"response": []
				},
				{
					"name": "Update a load balancer monitor",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/monitors/:monitor-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"monitors",
								":monitor-id"
							],
							"variable": [
								{
									"key": "monitor-id",
									"value": "{{monitor-id}}"
								}
							]
						},
						"description": "Update a load balancer monitor.\n"
					},
					"response": []
				},
				{
					"name": "Delete a load balancer monitor",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/monitors/:monitor-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"monitors",
								":monitor-id"
							],
							"variable": [
								{
									"key": "monitor-id",
									"value": "{{monitor-id}}"
								}
							]
						},
						"description": "Delete a load balancer monitor.\n"
					},
					"response": []
				},
				{
					"name": "Retrieve a load balancer client-ssl profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/client-ssl-profiles/:client-ssl-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"client-ssl-profiles",
								":client-ssl-profile-id"
							],
							"variable": [
								{
									"key": "client-ssl-profile-id",
									"value": "{{client-ssl-profile-id}}"
								}
							]
						},
						"description": "Retrieve a load balancer client-ssl profile.\n"
					},
					"response": []
				},
				{
					"name": "Update a load balancer client-ssl profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/client-ssl-profiles/:client-ssl-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"client-ssl-profiles",
								":client-ssl-profile-id"
							],
							"variable": [
								{
									"key": "client-ssl-profile-id",
									"value": "{{client-ssl-profile-id}}"
								}
							]
						},
						"description": "Update a load balancer client-ssl profile.\n"
					},
					"response": []
				},
				{
					"name": "Delete a load balancer client-ssl profile",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/client-ssl-profiles/:client-ssl-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"client-ssl-profiles",
								":client-ssl-profile-id"
							],
							"variable": [
								{
									"key": "client-ssl-profile-id",
									"value": "{{client-ssl-profile-id}}"
								}
							]
						},
						"description": "Delete a load balancer client-ssl profile.\n"
					},
					"response": []
				},
				{
					"name": "Get the statistics list of load balancer pools",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/services/:service-id/pools/statistics?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"services",
								":service-id",
								"pools",
								"statistics"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								}
							]
						},
						"description": "Returns the statistics list of load balancer pools in given load balancer service.\nCurrently, only realtime mode is supported.\n"
					},
					"response": []
				},
				{
					"name": "Get the status of the load balancer virtual server",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/services/:service-id/virtual-servers/:virtual-server-id/status?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"services",
								":service-id",
								"virtual-servers",
								":virtual-server-id",
								"status"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "virtual-server-id",
									"value": "{{virtual-server-id}}"
								}
							]
						},
						"description": "Returns the status of the virtual server by given load balancer serives id\nand load balancer virtual server id.\n"
					},
					"response": []
				},
				{
					"name": "Get the statistics of the given load balancer virtual server",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/services/:service-id/virtual-servers/:virtual-server-id/statistics?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"services",
								":service-id",
								"virtual-servers",
								":virtual-server-id",
								"statistics"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "virtual-server-id",
									"value": "{{virtual-server-id}}"
								}
							]
						},
						"description": "Returns the statistics of the load balancer virtual server by given load\n balancer serives id and load balancer virtual server id.\n"
					},
					"response": []
				},
				{
					"name": "Get the status of load balancer pool",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/services/:service-id/pools/:pool-id/status?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"services",
								":service-id",
								"pools",
								":pool-id",
								"status"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "pool-id",
									"value": "{{pool-id}}"
								}
							]
						},
						"description": "Returns the status of the given load balancer pool by given load balancer\nserives id and load balancer pool id.\n"
					},
					"response": []
				},
				{
					"name": "Get the statistics list of virtual servers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/services/:service-id/virtual-servers/statistics?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"services",
								":service-id",
								"virtual-servers",
								"statistics"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								}
							]
						},
						"description": "Returns the statistics list of virtual servers in given load balancer service.\nCurrently, only realtime mode is supported.\n"
					},
					"response": []
				},
				{
					"name": "Get the statistics of load balancer service",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/services/:service-id/statistics?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"services",
								":service-id",
								"statistics"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								}
							]
						},
						"description": "Returns the statistics of the given load balancer service.\n"
					},
					"response": []
				},
				{
					"name": "Get the status list of load balancer pools",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/services/:service-id/pools/status?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"services",
								":service-id",
								"pools",
								"status"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								}
							]
						},
						"description": "Returns the status list of load balancer pools in given load balancer service.\n"
					},
					"response": []
				},
				{
					"name": "Read the usage information of the given load balancer service",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/services/:service-id/usage",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"services",
								":service-id",
								"usage"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								}
							]
						},
						"description": "API to fetch the capacity and current usage of the given load balancer\nservice.\n"
					},
					"response": []
				},
				{
					"name": "Retrieve a paginated list of load balancer client-ssl profiles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/client-ssl-profiles?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"client-ssl-profiles"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Retrieve a paginated list of load balancer client-ssl profiles.\n"
					},
					"response": []
				},
				{
					"name": "Create a load balancer client-ssl profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/client-ssl-profiles",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"client-ssl-profiles"
							]
						},
						"description": "Create a load balancer client-ssl profile.\n"
					},
					"response": []
				},
				{
					"name": "Get the status of the given load balancer service",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/services/:service-id/status?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"services",
								":service-id",
								"status"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								}
							]
						},
						"description": "Returns the status of the given load balancer service.\n"
					},
					"response": []
				},
				{
					"name": "Retrieve a paginated list of load balancer monitors",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/monitors?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&type={{type}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"monitors"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "type",
									"value": "{{type}}"
								}
							]
						},
						"description": "Retrieve a paginated list of load balancer monitors.\n"
					},
					"response": []
				},
				{
					"name": "Create a load balancer monitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/monitors",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"monitors"
							]
						},
						"description": "Create a load balancer monitor.\n"
					},
					"response": []
				},
				{
					"name": "Retrieve a paginated list of load balancer services",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/services?cursor={{cursor}}&included_fields={{included_fields}}&logical_router_id={{logical_router_id}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"services"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "logical_router_id",
									"value": "{{logical_router_id}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Retrieve a paginated list of load balancer services.\nWhen logical_router_id is specified in request parameters, the\nassociated load balancer services which are related to the given\nlogical router returned.\n"
					},
					"response": []
				},
				{
					"name": "Create a load balancer service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/services",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"services"
							]
						},
						"description": "Create a load balancer service.\n"
					},
					"response": []
				},
				{
					"name": "Retrieve a load balancer virtual server",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/virtual-servers/:virtual-server-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"virtual-servers",
								":virtual-server-id"
							],
							"variable": [
								{
									"key": "virtual-server-id",
									"value": "{{virtual-server-id}}"
								}
							]
						},
						"description": "Retrieve a load balancer virtual server.\n"
					},
					"response": []
				},
				{
					"name": "Update a load balancer virtual server",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/virtual-servers/:virtual-server-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"virtual-servers",
								":virtual-server-id"
							],
							"variable": [
								{
									"key": "virtual-server-id",
									"value": "{{virtual-server-id}}"
								}
							]
						},
						"description": "Update a load balancer virtual server.\n"
					},
					"response": []
				},
				{
					"name": "Delete a load balancer virtual server",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/virtual-servers/:virtual-server-id?delete_associated_rules=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"virtual-servers",
								":virtual-server-id"
							],
							"query": [
								{
									"key": "delete_associated_rules",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "virtual-server-id",
									"value": "{{virtual-server-id}}"
								}
							]
						},
						"description": "Delete a load balancer virtual server.\n"
					},
					"response": []
				},
				{
					"name": "Retrieve a paginated list of load balancer TCP profiles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/tcp-profiles?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"tcp-profiles"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Retrieve a paginated list of load balancer TCP profiles.\n"
					},
					"response": []
				},
				{
					"name": "Create a load balancer TCP profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/tcp-profiles",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"tcp-profiles"
							]
						},
						"description": "Create a load balancer TCP profile.\n"
					},
					"response": []
				},
				{
					"name": "Retrieve a load balancer persistence profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/persistence-profiles/:persistence-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"persistence-profiles",
								":persistence-profile-id"
							],
							"variable": [
								{
									"key": "persistence-profile-id",
									"value": "{{persistence-profile-id}}"
								}
							]
						},
						"description": "Retrieve a load balancer persistence profile.\n"
					},
					"response": []
				},
				{
					"name": "Update a load balancer persistence profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/persistence-profiles/:persistence-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"persistence-profiles",
								":persistence-profile-id"
							],
							"variable": [
								{
									"key": "persistence-profile-id",
									"value": "{{persistence-profile-id}}"
								}
							]
						},
						"description": "Update a load balancer persistence profile.\n"
					},
					"response": []
				},
				{
					"name": "Delete a load balancer persistence profile",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/persistence-profiles/:persistence-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"persistence-profiles",
								":persistence-profile-id"
							],
							"variable": [
								{
									"key": "persistence-profile-id",
									"value": "{{persistence-profile-id}}"
								}
							]
						},
						"description": "Delete a load balancer persistence profile.\n"
					},
					"response": []
				},
				{
					"name": "Retrieve a paginated list of load balancer virtual servers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/virtual-servers?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"virtual-servers"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Retrieve a paginated list of load balancer virtual servers.\n"
					},
					"response": []
				},
				{
					"name": "Create a load balancer virtual server",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/virtual-servers",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"virtual-servers"
							]
						},
						"description": "Create a load balancer virtual server.\n"
					},
					"response": []
				},
				{
					"name": "Get the statistics of load balancer pool",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/services/:service-id/pools/:pool-id/statistics?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"services",
								":service-id",
								"pools",
								":pool-id",
								"statistics"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								},
								{
									"key": "pool-id",
									"value": "{{pool-id}}"
								}
							]
						},
						"description": "Returns the statistics of the given load balancer pool by given load balancer\nserives id and load balancer pool id.\nCurrently, only realtime mode is supported.\n"
					},
					"response": []
				},
				{
					"name": "Create a load balancer virtual server with rules",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/loadbalancer/virtual-servers?action=create_with_rules",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"loadbalancer",
								"virtual-servers"
							],
							"query": [
								{
									"key": "action",
									"value": "create_with_rules"
								}
							]
						},
						"description": "It is used to create virtual servers, the associated rules and bind the\nrules to the virtual server.\nTo add new rules, make sure the rules which have no identifier specified,\nthe new rules are automatically generated and associated to the virtual\nserver.\nIf the virtual server need to consume some existed rules without change,\nthose rules should not be specified in this array, otherwise, the rules\nare updated.\n"
					},
					"response": []
				}
			],
			"description": "Folder for loadbalancer"
		},
		{
			"name": "directory",
			"item": [
				{
					"name": "Get a specific domain with given identifier",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/directory/domains/:domain-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"directory",
								"domains",
								":domain-id"
							],
							"variable": [
								{
									"key": "domain-id",
									"value": "{{domain-id}}"
								}
							]
						},
						"description": "Get a specific domain with given identifier"
					},
					"response": []
				},
				{
					"name": "Update a directory domain",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/directory/domains/:domain-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"directory",
								"domains",
								":domain-id"
							],
							"variable": [
								{
									"key": "domain-id",
									"value": "{{domain-id}}"
								}
							]
						},
						"description": "Update to any field in the directory domain will trigger a full sync"
					},
					"response": []
				},
				{
					"name": "Invoke full sync or delta sync for a specific domain, with additional delay in seconds if needed",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/directory/domains/:domain-id?action={{action}}&delay=0",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"directory",
								"domains",
								":domain-id"
							],
							"query": [
								{
									"key": "action",
									"value": "{{action}}"
								},
								{
									"key": "delay",
									"value": "0"
								}
							],
							"variable": [
								{
									"key": "domain-id",
									"value": "{{domain-id}}"
								}
							]
						},
						"description": "Invoke full sync or delta sync for a specific domain, with additional delay in seconds if needed"
					},
					"response": []
				},
				{
					"name": "Delete a specific domain with given identifier",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/directory/domains/:domain-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"directory",
								"domains",
								":domain-id"
							],
							"variable": [
								{
									"key": "domain-id",
									"value": "{{domain-id}}"
								}
							]
						},
						"description": "Delete a specific domain with given identifier"
					},
					"response": []
				},
				{
					"name": "List members of a directory group",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/directory/domains/:domain-id/groups/:group-id/member-groups?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"directory",
								"domains",
								":domain-id",
								"groups",
								":group-id",
								"member-groups"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							],
							"variable": [
								{
									"key": "domain-id",
									"value": "{{domain-id}}"
								},
								{
									"key": "group-id",
									"value": "{{group-id}}"
								}
							]
						},
						"description": "A member group could be either direct member of the group specified by group_id or nested member of it. Both direct member groups and nested member groups are returned."
					},
					"response": []
				},
				{
					"name": "Search for directory groups within a domain based on the substring of a distinguished name. (e.g. CN=User,DC=acme,DC=com) The search filter pattern can optionally support multiple (up to 100 maximum) search pattern separated by '|' (url encoded %7C). In this case, the search results will be returned as the union of all matching criteria. (e.g. CN=Ann,CN=Users,DC=acme,DC=com|CN=Bob,CN=Users,DC=acme,DC=com)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/directory/domains/:domain-id/groups?cursor={{cursor}}&filter_value={{filter_value}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"directory",
								"domains",
								":domain-id",
								"groups"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "filter_value",
									"value": "{{filter_value}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							],
							"variable": [
								{
									"key": "domain-id",
									"value": "{{domain-id}}"
								}
							]
						},
						"description": "Search for directory groups within a domain based on the substring of a distinguished name. (e.g. CN=User,DC=acme,DC=com) The search filter pattern can optionally support multiple (up to 100 maximum) search pattern separated by '|' (url encoded %7C). In this case, the search results will be returned as the union of all matching criteria. (e.g. CN=Ann,CN=Users,DC=acme,DC=com|CN=Bob,CN=Users,DC=acme,DC=com)"
					},
					"response": []
				},
				{
					"name": "Test a directory domain LDAP server connectivity",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/directory/ldap-server?action={{action}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"directory",
								"ldap-server"
							],
							"query": [
								{
									"key": "action",
									"value": "{{action}}"
								}
							]
						},
						"description": "This API tests a LDAP server connectivity before the actual domain or LDAP server is configured. If the connectivity is good, the response will be HTTP status 200. Otherwise the response will be HTTP status 500 and corresponding error message will be returned."
					},
					"response": []
				},
				{
					"name": "Get domain sync statistics for the given identifier",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/directory/domains/:domain-id/sync-stats",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"directory",
								"domains",
								":domain-id",
								"sync-stats"
							],
							"variable": [
								{
									"key": "domain-id",
									"value": "{{domain-id}}"
								}
							]
						},
						"description": "Get domain sync statistics for the given identifier"
					},
					"response": []
				},
				{
					"name": "List all configured domain LDAP servers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/directory/domains/:domain-id/ldap-servers?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"directory",
								"domains",
								":domain-id",
								"ldap-servers"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							],
							"variable": [
								{
									"key": "domain-id",
									"value": "{{domain-id}}"
								}
							]
						},
						"description": "List all configured domain LDAP servers"
					},
					"response": []
				},
				{
					"name": "Create a LDAP server for directory domain",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/directory/domains/:domain-id/ldap-servers",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"directory",
								"domains",
								":domain-id",
								"ldap-servers"
							],
							"variable": [
								{
									"key": "domain-id",
									"value": "{{domain-id}}"
								}
							]
						},
						"description": "More than one LDAP server can be created and only one LDAP server is used to synchronize directory objects. If more than one LDAP server is configured, NSX will try all the servers until it is able to successfully connect to one."
					},
					"response": []
				},
				{
					"name": "List all configured domains",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/directory/domains?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"directory",
								"domains"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "List all configured domains"
					},
					"response": []
				},
				{
					"name": "Create a directory domain",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/directory/domains",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"directory",
								"domains"
							]
						},
						"description": "Create a directory domain"
					},
					"response": []
				},
				{
					"name": "Get a specific LDAP server for a given directory domain",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/directory/domains/:domain-id/ldap-servers/:server-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"directory",
								"domains",
								":domain-id",
								"ldap-servers",
								":server-id"
							],
							"variable": [
								{
									"key": "domain-id",
									"value": "{{domain-id}}"
								},
								{
									"key": "server-id",
									"value": "{{server-id}}"
								}
							]
						},
						"description": "Get a specific LDAP server for a given directory domain"
					},
					"response": []
				},
				{
					"name": "Update a LDAP server for directory domain",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/directory/domains/:domain-id/ldap-servers/:server-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"directory",
								"domains",
								":domain-id",
								"ldap-servers",
								":server-id"
							],
							"variable": [
								{
									"key": "domain-id",
									"value": "{{domain-id}}"
								},
								{
									"key": "server-id",
									"value": "{{server-id}}"
								}
							]
						},
						"description": "Update a LDAP server for directory domain"
					},
					"response": []
				},
				{
					"name": "Test a LDAP server connection for directory domain",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/directory/domains/:domain-id/ldap-servers/:server-id?action={{action}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"directory",
								"domains",
								":domain-id",
								"ldap-servers",
								":server-id"
							],
							"query": [
								{
									"key": "action",
									"value": "{{action}}"
								}
							],
							"variable": [
								{
									"key": "domain-id",
									"value": "{{domain-id}}"
								},
								{
									"key": "server-id",
									"value": "{{server-id}}"
								}
							]
						},
						"description": "The API tests a LDAP server connection for an already configured domain. If the connection is successful, the response will be HTTP status 200. Otherwise the response will be HTTP status 500 and corresponding error message will be returned."
					},
					"response": []
				},
				{
					"name": "Delete a LDAP server for directory domain",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/directory/domains/:domain-id/ldap-servers/:server-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"directory",
								"domains",
								":domain-id",
								"ldap-servers",
								":server-id"
							],
							"variable": [
								{
									"key": "domain-id",
									"value": "{{domain-id}}"
								},
								{
									"key": "server-id",
									"value": "{{server-id}}"
								}
							]
						},
						"description": "Delete a LDAP server for directory domain"
					},
					"response": []
				}
			],
			"description": "Folder for directory"
		},
		{
			"name": "ipfix",
			"item": [
				{
					"name": "List IPFIX configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ipfix/configs?applied_to={{applied_to}}&cursor={{cursor}}&included_fields={{included_fields}}&ipfix_config_type={{ipfix_config_type}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ipfix",
								"configs"
							],
							"query": [
								{
									"key": "applied_to",
									"value": "{{applied_to}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "ipfix_config_type",
									"value": "{{ipfix_config_type}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "List IPFIX configuration"
					},
					"response": []
				},
				{
					"name": "Create a new IPFIX configuration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ipfix/configs",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ipfix",
								"configs"
							]
						},
						"description": "Create a new IPFIX configuration"
					},
					"response": []
				},
				{
					"name": "Get an existing IPFIX configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ipfix/configs/:config-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ipfix",
								"configs",
								":config-id"
							],
							"variable": [
								{
									"key": "config-id",
									"value": "{{config-id}}"
								}
							]
						},
						"description": "Get an existing IPFIX configuration"
					},
					"response": []
				},
				{
					"name": "Update an existing IPFIX configuration",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ipfix/configs/:config-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ipfix",
								"configs",
								":config-id"
							],
							"variable": [
								{
									"key": "config-id",
									"value": "{{config-id}}"
								}
							]
						},
						"description": "Update an existing IPFIX configuration"
					},
					"response": []
				},
				{
					"name": "Delete an existing IPFIX configuration",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ipfix/configs/:config-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ipfix",
								"configs",
								":config-id"
							],
							"variable": [
								{
									"key": "config-id",
									"value": "{{config-id}}"
								}
							]
						},
						"description": "Delete an existing IPFIX configuration"
					},
					"response": []
				},
				{
					"name": "List IPFIX collector configurations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ipfix/collectorconfigs?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ipfix",
								"collectorconfigs"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "List IPFIX collector configurations"
					},
					"response": []
				},
				{
					"name": "Create a new IPFIX collector configuration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ipfix/collectorconfigs",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ipfix",
								"collectorconfigs"
							]
						},
						"description": "Create a new IPFIX collector configuration"
					},
					"response": []
				},
				{
					"name": "Get an existing IPFIX collector configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ipfix/collectorconfigs/:collector-config-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ipfix",
								"collectorconfigs",
								":collector-config-id"
							],
							"variable": [
								{
									"key": "collector-config-id",
									"value": "{{collector-config-id}}"
								}
							]
						},
						"description": "Get an existing IPFIX collector configuration"
					},
					"response": []
				},
				{
					"name": "Update an existing IPFIX collector configuration",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ipfix/collectorconfigs/:collector-config-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ipfix",
								"collectorconfigs",
								":collector-config-id"
							],
							"variable": [
								{
									"key": "collector-config-id",
									"value": "{{collector-config-id}}"
								}
							]
						},
						"description": "Update an existing IPFIX collector configuration"
					},
					"response": []
				},
				{
					"name": "Delete an existing IPFIX collector configuration",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ipfix/collectorconfigs/:collector-config-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ipfix",
								"collectorconfigs",
								":collector-config-id"
							],
							"variable": [
								{
									"key": "collector-config-id",
									"value": "{{collector-config-id}}"
								}
							]
						},
						"description": "Delete an existing IPFIX collector configuration"
					},
					"response": []
				}
			],
			"description": "Folder for ipfix"
		},
		{
			"name": "eula",
			"item": [
				{
					"name": "Return the content of end user license agreement\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/eula/content?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&value_format={{value_format}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"eula",
								"content"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "value_format",
									"value": "{{value_format}}"
								}
							]
						},
						"description": "Return the content of end user license agreement in the specified format.\nBy default, it's pure string without line break\n"
					},
					"response": []
				},
				{
					"name": "Return the acceptance status of end user license agreement\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/eula/acceptance",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"eula",
								"acceptance"
							]
						},
						"description": "Return the acceptance status of end user license agreement\n"
					},
					"response": []
				},
				{
					"name": "Accept end user license agreement\n",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/eula/accept",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"eula",
								"accept"
							]
						},
						"description": "Accept end user license agreement\n"
					},
					"response": []
				}
			],
			"description": "Folder for eula"
		},
		{
			"name": "notification-watchers",
			"item": [
				{
					"name": "Get notifications for the specified watcher ID.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/notification-watchers/:watcher-id/notifications",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"notification-watchers",
								":watcher-id",
								"notifications"
							],
							"variable": [
								{
									"key": "watcher-id",
									"value": "{{watcher-id}}"
								}
							]
						},
						"description": "Get notifications for the specified watcher ID."
					},
					"response": []
				},
				{
					"name": "Update notifications for the specified watcher ID.",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/notification-watchers/:watcher-id/notifications",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"notification-watchers",
								":watcher-id",
								"notifications"
							],
							"variable": [
								{
									"key": "watcher-id",
									"value": "{{watcher-id}}"
								}
							]
						},
						"description": "Update notifications for the specified watcher ID."
					},
					"response": []
				},
				{
					"name": "Returns notification watcher by watcher id.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/notification-watchers/:watcher-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"notification-watchers",
								":watcher-id"
							],
							"variable": [
								{
									"key": "watcher-id",
									"value": "{{watcher-id}}"
								}
							]
						},
						"description": "Returns notification watcher by watcher id."
					},
					"response": []
				},
				{
					"name": "Update notification watcher.",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/notification-watchers/:watcher-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"notification-watchers",
								":watcher-id"
							],
							"variable": [
								{
									"key": "watcher-id",
									"value": "{{watcher-id}}"
								}
							]
						},
						"description": "Update notification watcher."
					},
					"response": []
				},
				{
					"name": "Delete an existing Notification-Watcher.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/notification-watchers/:watcher-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"notification-watchers",
								":watcher-id"
							],
							"variable": [
								{
									"key": "watcher-id",
									"value": "{{watcher-id}}"
								}
							]
						},
						"description": "Delete notification watcher.\n"
					},
					"response": []
				},
				{
					"name": "Delete uri filters for the specified watcher ID.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/notification-watchers/:watcher-id/notifications?action=delete_uri_filters",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"notification-watchers",
								":watcher-id",
								"notifications"
							],
							"query": [
								{
									"key": "action",
									"value": "delete_uri_filters"
								}
							],
							"variable": [
								{
									"key": "watcher-id",
									"value": "{{watcher-id}}"
								}
							]
						},
						"description": "Delete uri filters for the specified watcher ID."
					},
					"response": []
				},
				{
					"name": "Add uri filters for the specified watcher ID.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/notification-watchers/:watcher-id/notifications?action=add_uri_filters",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"notification-watchers",
								":watcher-id",
								"notifications"
							],
							"query": [
								{
									"key": "action",
									"value": "add_uri_filters"
								}
							],
							"variable": [
								{
									"key": "watcher-id",
									"value": "{{watcher-id}}"
								}
							]
						},
						"description": "Add uri filters for the specified watcher ID."
					},
					"response": []
				},
				{
					"name": "Returns a list of registered notification watchers.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/notification-watchers",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"notification-watchers"
							]
						},
						"description": "Returns a list of registered notification watchers."
					},
					"response": []
				},
				{
					"name": "Add a new notification watcher.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/notification-watchers",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"notification-watchers"
							]
						},
						"description": "Add a new notification watcher."
					},
					"response": []
				}
			],
			"description": "Folder for notification-watchers"
		},
		{
			"name": "trust-management",
			"item": [
				{
					"name": "Show CSR Data for the Given CSR ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management/csrs/:csr-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management",
								"csrs",
								":csr-id"
							],
							"variable": [
								{
									"key": "csr-id",
									"value": "{{csr-id}}"
								}
							]
						},
						"description": "Returns information about the specified CSR."
					},
					"response": []
				},
				{
					"name": "Delete a CSR",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management/csrs/:csr-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management",
								"csrs",
								":csr-id"
							],
							"variable": [
								{
									"key": "csr-id",
									"value": "{{csr-id}}"
								}
							]
						},
						"description": "Removes a specified CSR. If a CSR is not used for verification, you can\ndelete it. Note that the CSR import and upload POST actions automatically\ndelete the associated CSR.\n"
					},
					"response": []
				},
				{
					"name": "Return the Properties of a Trust Manager",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management"
							]
						},
						"description": "Returns information about the supported algorithms and key sizes."
					},
					"response": []
				},
				{
					"name": "Add a New Certificate Revocation List",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management/crls?action=import",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management",
								"crls"
							],
							"query": [
								{
									"key": "action",
									"value": "import"
								}
							]
						},
						"description": "Adds a new certificate revocation list (CRL). The CRL is used to verify the\nclient certificate status against the revocation lists published by the CA.\nFor this reason, the administrator needs to add the CRL in certificate\nrepository as well.\n"
					},
					"response": []
				},
				{
					"name": "Import a Certificate Associated with an Approved CSR",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management/csrs/:csr-id?action=import",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management",
								"csrs",
								":csr-id"
							],
							"query": [
								{
									"key": "action",
									"value": "import"
								}
							],
							"variable": [
								{
									"key": "csr-id",
									"value": "{{csr-id}}"
								}
							]
						},
						"description": "Imports a certificate authority (CA)-signed certificate for a CSR. This\naction links the certificate to the private key created by the CSR. The\npem_encoded string in the request body is the signed certificate provided by\nyour CA in response to the CSR that you provide to them. The import POST\naction automatically deletes the associated CSR.\n"
					},
					"response": []
				},
				{
					"name": "Return the list of CrlDistributionPoints",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management/crl-distribution-points?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management",
								"crl-distribution-points"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Return the list of CrlDistributionPoints"
					},
					"response": []
				},
				{
					"name": "Create a Crl Distribution Point",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management/crl-distribution-points",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management",
								"crl-distribution-points"
							]
						},
						"description": "Create an entity that will represent a Crl Distribution Point\n"
					},
					"response": []
				},
				{
					"name": "Show Certificate Data for the Given Certificate ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management/certificates/:cert-id?details=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management",
								"certificates",
								":cert-id"
							],
							"query": [
								{
									"key": "details",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "cert-id",
									"value": "{{cert-id}}"
								}
							]
						},
						"description": "Returns information for the specified certificate ID, including the\ncertificate's UUID; resource_type (for example, certificate_self_signed,\ncertificate_ca, or certificate_signed); pem_encoded data; and history of the\ncertificate (who created or modified it and when). For additional\ninformation, include the ?details=true modifier at the end of the request\nURI.\n"
					},
					"response": []
				},
				{
					"name": "Delete Certificate for the Given Certificate ID",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management/certificates/:cert-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management",
								"certificates",
								":cert-id"
							],
							"variable": [
								{
									"key": "cert-id",
									"value": "{{cert-id}}"
								}
							]
						},
						"description": "Removes the specified certificate. The private key associated with the\ncertificate is also deleted.\n"
					},
					"response": []
				},
				{
					"name": "Get CSR PEM File for the Given CSR ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/plain;charset=UTF-8"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management/csrs/:csr-id/pem-file",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management",
								"csrs",
								":csr-id",
								"pem-file"
							],
							"variable": [
								{
									"key": "csr-id",
									"value": "{{csr-id}}"
								}
							]
						},
						"description": "Downloads the CSR PEM file for a specified CSR. Clients must include an Accept: text/plain request header."
					},
					"response": []
				},
				{
					"name": "Get a Principal Identity",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management/principal-identities/:principal-identity-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management",
								"principal-identities",
								":principal-identity-id"
							],
							"variable": [
								{
									"key": "principal-identity-id",
									"value": "{{principal-identity-id}}"
								}
							]
						},
						"description": "Get a stored principal identity\n"
					},
					"response": []
				},
				{
					"name": "Delete a principal identity",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management/principal-identities/:principal-identity-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management",
								"principal-identities",
								":principal-identity-id"
							],
							"variable": [
								{
									"key": "principal-identity-id",
									"value": "{{principal-identity-id}}"
								}
							]
						},
						"description": "Delete a principal identity. It does not delete the certificate.\n"
					},
					"response": []
				},
				{
					"name": "Return the status of the CrlDistributionPoint",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management/crl-distribution-points/:crl-distribution-point-id/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management",
								"crl-distribution-points",
								":crl-distribution-point-id",
								"status"
							],
							"variable": [
								{
									"key": "crl-distribution-point-id",
									"value": "{{crl-distribution-point-id}}"
								}
							]
						},
						"description": "Return the status of the CrlDistributionPoint"
					},
					"response": []
				},
				{
					"name": "Register a name-certificate combination.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management/principal-identities/with-certificate",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management",
								"principal-identities",
								"with-certificate"
							]
						},
						"description": "Create a Principal Identity with a new, unused, certificate.\n"
					},
					"response": []
				},
				{
					"name": "Return the CrlDistributionPoint with <crl-distribution-point-id>",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management/crl-distribution-points/:crl-distribution-point-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management",
								"crl-distribution-points",
								":crl-distribution-point-id"
							],
							"variable": [
								{
									"key": "crl-distribution-point-id",
									"value": "{{crl-distribution-point-id}}"
								}
							]
						},
						"description": "Return the CrlDistributionPoint with <crl-distribution-point-id>"
					},
					"response": []
				},
				{
					"name": "Update CrlDistributionPoint with <crl-distribution-point-id>\nThis allows updating the ManagedResource fields.\n",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management/crl-distribution-points/:crl-distribution-point-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management",
								"crl-distribution-points",
								":crl-distribution-point-id"
							],
							"variable": [
								{
									"key": "crl-distribution-point-id",
									"value": "{{crl-distribution-point-id}}"
								}
							]
						},
						"description": "Update CrlDistributionPoint with <crl-distribution-point-id>\nThis allows updating the ManagedResource fields.\n"
					},
					"response": []
				},
				{
					"name": "Delete a CrlDistributionPoint",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management/crl-distribution-points/:crl-distribution-point-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management",
								"crl-distribution-points",
								":crl-distribution-point-id"
							],
							"variable": [
								{
									"key": "crl-distribution-point-id",
									"value": "{{crl-distribution-point-id}}"
								}
							]
						},
						"description": "Delete a CrlDistributionPoint. It does not delete the actual CRL.\n"
					},
					"response": []
				},
				{
					"name": "Return All the Generated CSRs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management/csrs?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management",
								"csrs"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns information about all of the CSRs that have been created."
					},
					"response": []
				},
				{
					"name": "Generate a New Certificate Signing Request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management/csrs",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management",
								"csrs"
							]
						},
						"description": "Creates a new certificate signing request (CSR). A CSR is encrypted text that\ncontains information about your organization (organization name, country,\nand so on) and your Web server's public key, which is a public certificate\nthe is generated on the server that can be used to forward this request to a\ncertificate authority (CA). A private key is also usually created at the\nsame time as the CSR.\n"
					},
					"response": []
				},
				{
					"name": "Show CRL Data for the Given CRL ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management/crls/:crl-id?details=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management",
								"crls",
								":crl-id"
							],
							"query": [
								{
									"key": "details",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "crl-id",
									"value": "{{crl-id}}"
								}
							]
						},
						"description": "Returns information about the specified CRL. For additional information,\ninclude the ?details=true modifier at the end of the request URI.\n"
					},
					"response": []
				},
				{
					"name": "Update CRL for the Given CRL ID",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management/crls/:crl-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management",
								"crls",
								":crl-id"
							],
							"variable": [
								{
									"key": "crl-id",
									"value": "{{crl-id}}"
								}
							]
						},
						"description": "Updates an existing CRL."
					},
					"response": []
				},
				{
					"name": "Delete a CRL",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management/crls/:crl-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management",
								"crls",
								":crl-id"
							],
							"variable": [
								{
									"key": "crl-id",
									"value": "{{crl-id}}"
								}
							]
						},
						"description": "Deletes an existing CRL."
					},
					"response": []
				},
				{
					"name": "Self-Sign the CSR",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management/csrs/:csr-id?action=self_sign?days_valid=3650",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management",
								"csrs",
								":csr-id"
							],
							"query": [
								{
									"key": "action",
									"value": "self_sign?days_valid=3650"
								}
							],
							"variable": [
								{
									"key": "csr-id",
									"value": "{{csr-id}}"
								}
							]
						},
						"description": "Self-signs the previously generated CSR. This action is similar to the\nimport certificate action, but instead of using a public certificate signed\nby a CA, the self_sign POST action uses a certificate that is signed with\nNSX's own private key.\n"
					},
					"response": []
				},
				{
					"name": "Update a Principal Identity's certificate",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management/principal-identities?action=update_certificate",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management",
								"principal-identities"
							],
							"query": [
								{
									"key": "action",
									"value": "update_certificate"
								}
							]
						},
						"description": "Update a principal identity's certificate\n"
					},
					"response": []
				},
				{
					"name": "Add a New Certificate",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management/certificates?action=import",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management",
								"certificates"
							],
							"query": [
								{
									"key": "action",
									"value": "import"
								}
							]
						},
						"description": "Adds a new private-public certificate or a chain of certificates (CAs) and,\noptionally, a private key that can be applied to one of the user-facing\ncomponents (appliance management or edge). The certificate and the key\nshould be stored in PEM format. If no private key is provided, the\ncertificate is used as a client certificate in the trust store.\n"
					},
					"response": []
				},
				{
					"name": "Return All Added CRLs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management/crls?cursor={{cursor}}&details=false&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&type={{type}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management",
								"crls"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "details",
									"value": "false"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "type",
									"value": "{{type}}"
								}
							]
						},
						"description": "Returns information about all CRLs. For additional information, include the\n?details=true modifier at the end of the request URI.\n"
					},
					"response": []
				},
				{
					"name": "Return All the User-Facing Components' Certificates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management/certificates?cursor={{cursor}}&details=false&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&type={{type}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management",
								"certificates"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "details",
									"value": "false"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "type",
									"value": "{{type}}"
								}
							]
						},
						"description": "Returns all certificate information viewable by the user, including each\ncertificate's UUID; resource_type (for example, certificate_self_signed,\ncertificate_ca, or certificate_signed); pem_encoded data; and history of the\ncertificate (who created or modified it and when). For additional\ninformation, include the ?details=true modifier at the end of the request\nURI.\n"
					},
					"response": []
				},
				{
					"name": "Return the list of principal identities",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management/principal-identities",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management",
								"principal-identities"
							]
						},
						"description": "Returns the list of principals registered with a certificate."
					},
					"response": []
				},
				{
					"name": "Register a name-certificate combination.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management/principal-identities",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management",
								"principal-identities"
							]
						},
						"description": "Associates a principal's name with a certificate that is used to authenticate.\nDeprecated, use POST /trust-management/principal-identities/with-certificate instead.\n"
					},
					"response": []
				},
				{
					"name": "Return stored CRL in PEM format",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "text/plain;charset=UTF-8"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/trust-management/crl-distribution-points/pem-file",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"trust-management",
								"crl-distribution-points",
								"pem-file"
							]
						},
						"description": "Return stored CRL in PEM format"
					},
					"response": []
				}
			],
			"description": "Folder for trust-management"
		},
		{
			"name": "lldp",
			"item": [
				{
					"name": "List LLDP Neighbor Properties of Fabric Node",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/lldp/fabric-nodes/:fabric-node-id/interfaces",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"lldp",
								"fabric-nodes",
								":fabric-node-id",
								"interfaces"
							],
							"variable": [
								{
									"key": "fabric-node-id",
									"value": "{{fabric-node-id}}"
								}
							]
						},
						"description": "List LLDP Neighbor Properties for all interfaces of Fabric Node\n"
					},
					"response": []
				},
				{
					"name": "Read LLDP Neighbor Properties of Transport Node by Interface Name\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/lldp/transport-nodes/:node-id/interfaces/:interface-name",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"lldp",
								"transport-nodes",
								":node-id",
								"interfaces",
								":interface-name"
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								},
								{
									"key": "interface-name",
									"value": "{{interface-name}}"
								}
							]
						},
						"description": "Read LLDP Neighbor Properties for a specific interface of Transport Node\n"
					},
					"response": []
				},
				{
					"name": "Read LLDP Neighbor Properties of Fabric Node by Interface Name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/lldp/fabric-nodes/:fabric-node-id/interfaces/:interface-name",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"lldp",
								"fabric-nodes",
								":fabric-node-id",
								"interfaces",
								":interface-name"
							],
							"variable": [
								{
									"key": "fabric-node-id",
									"value": "{{fabric-node-id}}"
								},
								{
									"key": "interface-name",
									"value": "{{interface-name}}"
								}
							]
						},
						"description": "Read LLDP Neighbor Properties for a specific interface of Fabric Node\n"
					},
					"response": []
				},
				{
					"name": "List LLDP Neighbor Properties of Transport Node",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/lldp/transport-nodes/:node-id/interfaces",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"lldp",
								"transport-nodes",
								":node-id",
								"interfaces"
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								}
							]
						},
						"description": "List LLDP Neighbor Properties for all interfaces of Transport Node\n"
					},
					"response": []
				}
			],
			"description": "Folder for lldp"
		},
		{
			"name": "ip-sets",
			"item": [
				{
					"name": "Get all IPAddresses in a IPSet",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ip-sets/:ip-set-id/members",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ip-sets",
								":ip-set-id",
								"members"
							],
							"variable": [
								{
									"key": "ip-set-id",
									"value": "{{ip-set-id}}"
								}
							]
						},
						"description": "List all IP addresses in a IPSet\n"
					},
					"response": []
				},
				{
					"name": "List IPSets",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ip-sets?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ip-sets"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns paginated list of IPSets\n"
					},
					"response": []
				},
				{
					"name": "Create IPSet",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ip-sets",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ip-sets"
							]
						},
						"description": "Creates a new IPSet that can group either IPv4 or IPv6 individual ip addresses,\nranges or subnets.\n"
					},
					"response": []
				},
				{
					"name": "Read IPSet",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ip-sets/:ip-set-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ip-sets",
								":ip-set-id"
							],
							"variable": [
								{
									"key": "ip-set-id",
									"value": "{{ip-set-id}}"
								}
							]
						},
						"description": "Returns information about the specified IPSet\n"
					},
					"response": []
				},
				{
					"name": "Update IPSet",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ip-sets/:ip-set-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ip-sets",
								":ip-set-id"
							],
							"variable": [
								{
									"key": "ip-set-id",
									"value": "{{ip-set-id}}"
								}
							]
						},
						"description": "Updates the specified IPSet. Modifiable parameters include description,\ndisplay_name and ip_addresses.\n"
					},
					"response": []
				},
				{
					"name": "Add a IP address to a IPSet",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ip-sets/:ip-set-id?action={{action}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ip-sets",
								":ip-set-id"
							],
							"query": [
								{
									"key": "action",
									"value": "{{action}}"
								}
							],
							"variable": [
								{
									"key": "ip-set-id",
									"value": "{{ip-set-id}}"
								}
							]
						},
						"description": "Add/Remove an individual IP address to an IPSet\n"
					},
					"response": []
				},
				{
					"name": "Delete IPSet",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ip-sets/:ip-set-id?force=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ip-sets",
								":ip-set-id"
							],
							"query": [
								{
									"key": "force",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "ip-set-id",
									"value": "{{ip-set-id}}"
								}
							]
						},
						"description": "Deletes the specified IPSet.  By default, if the IPSet is added to an\nNSGroup, it won't be deleted. In such situations, pass \"force=true\" as\nquery param to force delete the IPSet.\n"
					},
					"response": []
				}
			],
			"description": "Folder for ip-sets"
		},
		{
			"name": "transport-nodes",
			"item": [
				{
					"name": "Update transport node maintenance mode",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-nodes/:transportnode-id?action={{action}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-nodes",
								":transportnode-id"
							],
							"query": [
								{
									"key": "action",
									"value": "{{action}}"
								}
							],
							"variable": [
								{
									"key": "transportnode-id",
									"value": "{{transportnode-id}}"
								}
							]
						},
						"description": "Put transport node into maintenance mode or exit from maintenance mode."
					},
					"response": []
				},
				{
					"name": "Restart the inventory sync for the node if it is paused currently.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-nodes/:transport-node-id?action=restart_inventory_sync",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-nodes",
								":transport-node-id"
							],
							"query": [
								{
									"key": "action",
									"value": "restart_inventory_sync"
								}
							],
							"variable": [
								{
									"key": "transport-node-id",
									"value": "{{transport-node-id}}"
								}
							]
						},
						"description": "Restart the inventory sync for the node if it is currently internally paused.\nAfter this action the next inventory sync coming from the node is processed.\n"
					},
					"response": []
				},
				{
					"name": "Return the list of capabilities of transport node",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-nodes/:transport-node-id/capabilities",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-nodes",
								":transport-node-id",
								"capabilities"
							],
							"variable": [
								{
									"key": "transport-node-id",
									"value": "{{transport-node-id}}"
								}
							]
						},
						"description": "Returns information about capabilities of transport host node. Edge nodes do not have capabilities."
					},
					"response": []
				},
				{
					"name": "Resync a Transport Node",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-nodes/:transportnode-id?action=resync_host_config",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-nodes",
								":transportnode-id"
							],
							"query": [
								{
									"key": "action",
									"value": "resync_host_config"
								}
							],
							"variable": [
								{
									"key": "transportnode-id",
									"value": "{{transportnode-id}}"
								}
							]
						},
						"description": "Resync the TransportNode configuration on a host.\nIt is similar to updating the TransportNode with existing configuration,\nbut force synce these configurations to the host (no backend optimizations).\n"
					},
					"response": []
				},
				{
					"name": "List of tunnels",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-nodes/:node-id/tunnels?bfd_diagnostic_code={{bfd_diagnostic_code}}&cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&remote_node_id={{remote_node_id}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&source={{source}}&status={{status}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-nodes",
								":node-id",
								"tunnels"
							],
							"query": [
								{
									"key": "bfd_diagnostic_code",
									"value": "{{bfd_diagnostic_code}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "remote_node_id",
									"value": "{{remote_node_id}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "source",
									"value": "{{source}}"
								},
								{
									"key": "status",
									"value": "{{status}}"
								}
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								}
							]
						},
						"description": "List of tunnels"
					},
					"response": []
				},
				{
					"name": "Read the transport node's network interface",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-nodes/:transport-node-id/network/interfaces/:interface-id?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-nodes",
								":transport-node-id",
								"network",
								"interfaces",
								":interface-id"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "transport-node-id",
									"value": "{{transport-node-id}}"
								},
								{
									"key": "interface-id",
									"value": "{{interface-id}}"
								}
							]
						},
						"description": "Returns detailed information about the specified interface. Interface\ninformation includes MTU, broadcast and host IP addresses, link and admin\nstatus, MAC address, network  mask, and the IP configuration method (static\nor DHCP).\n"
					},
					"response": []
				},
				{
					"name": "Get high-level summary of a transport node",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-nodes/:node-id/pnic-bond-status?status={{status}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-nodes",
								":node-id",
								"pnic-bond-status"
							],
							"query": [
								{
									"key": "status",
									"value": "{{status}}"
								}
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								}
							]
						},
						"description": "Get high-level summary of a transport node"
					},
					"response": []
				},
				{
					"name": "Get a Transport Node's State",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-nodes/:transport-node-id/state",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-nodes",
								":transport-node-id",
								"state"
							],
							"variable": [
								{
									"key": "transport-node-id",
									"value": "{{transport-node-id}}"
								}
							]
						},
						"description": "Returns information about the current state of the transport node\nconfiguration and information about the associated hostswitch.\n"
					},
					"response": []
				},
				{
					"name": "Tunnel properties",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-nodes/:node-id/tunnels/:tunnel-name?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-nodes",
								":node-id",
								"tunnels",
								":tunnel-name"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								},
								{
									"key": "tunnel-name",
									"value": "{{tunnel-name}}"
								}
							]
						},
						"description": "Tunnel properties"
					},
					"response": []
				},
				{
					"name": "Get high-level summary of all transport nodes. The service layer does not support source = realtime or cached.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-nodes/status?node_type={{node_type}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-nodes",
								"status"
							],
							"query": [
								{
									"key": "node_type",
									"value": "{{node_type}}"
								}
							]
						},
						"description": "Get high-level summary of all transport nodes. The service layer does not support source = realtime or cached."
					},
					"response": []
				},
				{
					"name": "Apply cluster level Transport Node Profile on overridden host",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-nodes/:transport-node-id?action=restore_cluster_config",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-nodes",
								":transport-node-id"
							],
							"query": [
								{
									"key": "action",
									"value": "restore_cluster_config"
								}
							],
							"variable": [
								{
									"key": "transport-node-id",
									"value": "{{transport-node-id}}"
								}
							]
						},
						"description": "A host can be overridden to have different configuration than Transport\nNode Profile(TNP) on cluster. This action will restore such overridden host\nback to cluster level TNP.\n"
					},
					"response": []
				},
				{
					"name": "Read status of all transport nodes with tunnel connections to transport node\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-nodes/:node-id/remote-transport-node-status?bfd_diagnostic_code={{bfd_diagnostic_code}}&cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&source={{source}}&tunnel_status={{tunnel_status}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-nodes",
								":node-id",
								"remote-transport-node-status"
							],
							"query": [
								{
									"key": "bfd_diagnostic_code",
									"value": "{{bfd_diagnostic_code}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "source",
									"value": "{{source}}"
								},
								{
									"key": "tunnel_status",
									"value": "{{tunnel_status}}"
								}
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								}
							]
						},
						"description": "Read status of all transport nodes with tunnel connections to transport node\n"
					},
					"response": []
				},
				{
					"name": "Read status of a transport node",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-nodes/:node-id/status?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-nodes",
								":node-id",
								"status"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								}
							]
						},
						"description": "Read status of a transport node"
					},
					"response": []
				},
				{
					"name": "Get statistics for all logical router NAT rules on a transport node",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-nodes/:node-id/statistics/nat-rules?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-nodes",
								":node-id",
								"statistics",
								"nat-rules"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "node-id",
									"value": "{{node-id}}"
								}
							]
						},
						"description": "Returns the summation of statistics for all rules from all logical routers\nwhich are present on given transport node. Only cached statistics are supported.\nThe query parameter \"source=realtime\" is not supported.\n"
					},
					"response": []
				},
				{
					"name": "List the specified transport node's network interfaces",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-nodes/:transport-node-id/network/interfaces?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-nodes",
								":transport-node-id",
								"network",
								"interfaces"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "transport-node-id",
									"value": "{{transport-node-id}}"
								}
							]
						},
						"description": "Returns the number of interfaces on the node and detailed\ninformation about each interface. Interface information includes MTU,\nbroadcast and host IP addresses, link and admin status, MAC address, network\nmask, and the IP configuration method (static or DHCP).\n"
					},
					"response": []
				},
				{
					"name": "Get a Transport Node",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-nodes/:transport-node-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-nodes",
								":transport-node-id"
							],
							"variable": [
								{
									"key": "transport-node-id",
									"value": "{{transport-node-id}}"
								}
							]
						},
						"description": "Returns information about a specified transport node."
					},
					"response": []
				},
				{
					"name": "Update a Transport Node",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-nodes/:transport-node-id?esx_mgmt_if_migration_dest={{esx_mgmt_if_migration_dest}}&if_id={{if_id}}&ping_ip={{ping_ip}}&vnic={{vnic}}&vnic_migration_dest={{vnic_migration_dest}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-nodes",
								":transport-node-id"
							],
							"query": [
								{
									"key": "esx_mgmt_if_migration_dest",
									"value": "{{esx_mgmt_if_migration_dest}}"
								},
								{
									"key": "if_id",
									"value": "{{if_id}}"
								},
								{
									"key": "ping_ip",
									"value": "{{ping_ip}}"
								},
								{
									"key": "vnic",
									"value": "{{vnic}}"
								},
								{
									"key": "vnic_migration_dest",
									"value": "{{vnic_migration_dest}}"
								}
							],
							"variable": [
								{
									"key": "transport-node-id",
									"value": "{{transport-node-id}}"
								}
							]
						},
						"description": "Modifies the transport node information. The host_switch_name field\nmust match the host_switch_name value specified in the transport zone\n(API: transport-zones). You must create the associated uplink profile\n(API: host-switch-profiles) before you can specify an uplink_name here.\nIf the host is an ESX and has only one physical NIC being used by a vSphere\nstandard switch, TransportNodeUpdateParameters should be used to migrate\nthe management interface and the physical NIC into a logical switch that\nis in a transport zone this transport node will join or has already joined.\nIf the migration is already done, TransportNodeUpdateParameters can also be\nused to migrate the management interface and the physical NIC back to a\nvSphere standard switch.\nIn other cases, the TransportNodeUpdateParameters should NOT be used.\nWhen updating transport node you should follow pattern where you should\nfetch the existing transport node and then only modify the required\nproperties keeping other properties as is. For API backward compatibility,\nproperty host_switches will be still returned in response and will contain\nthe configuration matching the one in host_switch_spec. In update call you\nshould only modify configuration in either host_switch_spec or\nhost_switches, but not both. Property host_switch_spec should be preferred\nover deprecated host_switches property when creating or updating transport\nnodes.\n\nIt also modifies attributes of node (host or edge).\n"
					},
					"response": []
				},
				{
					"name": "Delete a Transport Node",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-nodes/:transport-node-id?force=false&keep_fabric=false&unprepare_host=true",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-nodes",
								":transport-node-id"
							],
							"query": [
								{
									"key": "force",
									"value": "false"
								},
								{
									"key": "keep_fabric",
									"value": "false"
								},
								{
									"key": "unprepare_host",
									"value": "true"
								}
							],
							"variable": [
								{
									"key": "transport-node-id",
									"value": "{{transport-node-id}}"
								}
							]
						},
						"description": "Deletes the specified transport node. Query param force can be used to\nforce delete the host nodes. Force deletion of edge and public cloud\ngateway nodes is not supported.\n\nIt also removes the specified node (host or edge) from system.\nIf unprepare_host option is set to false, then host will be deleted\nwithout uninstalling the NSX components from the host.\n"
					},
					"response": []
				},
				{
					"name": "List Transport Nodes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-nodes?cursor={{cursor}}&in_maintenance_mode={{in_maintenance_mode}}&included_fields={{included_fields}}&node_id={{node_id}}&node_ip={{node_ip}}&node_types={{node_types}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&transport_zone_id={{transport_zone_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-nodes"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "in_maintenance_mode",
									"value": "{{in_maintenance_mode}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "node_id",
									"value": "{{node_id}}"
								},
								{
									"key": "node_ip",
									"value": "{{node_ip}}"
								},
								{
									"key": "node_types",
									"value": "{{node_types}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "transport_zone_id",
									"value": "{{transport_zone_id}}"
								}
							]
						},
						"description": "Returns information about all transport nodes along with underlying host or\nedge details. A transport node is a host or edge that contains hostswitches.\nA hostswitch can have virtual machines connected to them.\n\nBecause each transport node has hostswitches, transport nodes can also have\nvirtual tunnel endpoints, which means that they can be part of the overlay.\n"
					},
					"response": []
				},
				{
					"name": "Create a Transport Node",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-nodes",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-nodes"
							]
						},
						"description": "Transport nodes are hypervisor hosts and NSX Edges that will participate\nin an NSX-T overlay. For a hypervisor host, this means that it hosts\nVMs that will communicate over NSX-T logical switches. For NSX Edges,\nthis means that it will have logical router uplinks and downlinks.\n\nThis API creates transport node for a host node (hypervisor) or edge node\n(router) in the transport network.\n\nWhen you run this command for a host, NSX Manager attempts to install the\nNSX kernel modules, which are packaged as VIB, RPM, or DEB files. For the\ninstallation to succeed, you must provide the host login credentials and the\nhost thumbprint.\n\nTo get the ESXi host thumbprint, SSH to the host and run the\n<b>openssl x509 -in /etc/vmware/ssl/rui.crt -fingerprint -sha256 -noout</b>\ncommand.\n\nTo generate host key thumbprint using SHA-256 algorithm please follow the\nsteps below.\n\nLog into the host, making sure that the connection is not vulnerable to a\nman in the middle attack. Check whether a public key already exists.\nHost public key is generally located at '/etc/ssh/ssh_host_rsa_key.pub'.\nIf the key is not present then generate a new key by running the following\ncommand and follow the instructions.\n\n<b>ssh-keygen -t rsa</b>\n\nNow generate a SHA256 hash of the key using the following command. Please\nmake sure to pass the appropriate file name if the public key is stored with\na different file name other than the default 'id_rsa.pub'.\n\n<b>awk '{print $2}' id_rsa.pub | base64 -d | sha256sum -b | sed 's/ .*$//' | xxd -r -p | base64</b>\nThis api is deprecated as part of FN+TN unification. Please use Transport Node API\nto install NSX components on a node.\n\nAdditional documentation on creating a transport node can be found\nin the NSX-T Installation Guide.\n\nIn order for the transport node to forward packets,\nthe host_switch_spec property must be specified.\n\nHost switches (called bridges in OVS on KVM hypervisors) are the\nindividual switches within the host virtual switch. Virtual machines\nare connected to the host switches.\n\nWhen creating a transport node, you need to specify if the host switches\nare already manually preconfigured on the node, or if NSX should create\nand manage the host switches. You specify this choice by the type\nof host switches you pass in the host_switch_spec property of the\nTransportNode request payload.\n\nFor a KVM host, you can preconfigure the host switch, or you can have\nNSX Manager perform the configuration. For an ESXi host or NSX Edge\nnode, NSX Manager always configures the host switch.\n\nTo preconfigure the host switches on a KVM host, pass an array\nof PreconfiguredHostSwitchSpec objects that describes those host\nswitches. In the current NSX-T release, only one prefonfigured host\nswitch can be specified.  See the PreconfiguredHostSwitchSpec schema\ndefinition for documentation on the properties that must be provided.\nPreconfigured host switches are only supported on KVM hosts, not on\nESXi hosts or NSX Edge nodes.\n\nTo allow NSX to manage the host switch configuration on KVM hosts,\nESXi hosts, or NSX Edge nodes, pass an array of StandardHostSwitchSpec\nobjects in the host_switch_spec property, and NSX will automatically\ncreate host switches with the properties you provide. In the current\nNSX-T release, up to 5 host switches can be automatically managed.\nSee the StandardHostSwitchSpec schema definition for documentation on\nthe properties that must be provided.\n\nNote: previous versions of NSX-T used a property named host_switches\nto specify the host switch configuration on the transport node. That\nproperty is deprecated, but still functions. You should configure new\nhost switches using the host_switch_spec property.\n\nThe request should either provide node_deployement_info or node_id.\n\nIf the host node (hypervisor) or edge node (router) is already added in\nsystem then it can be converted to transport node by providing node_id in\nrequest.\n\nIf host node (hypervisor) or edge node (router) is not already present in\nsystem then information should be provided under node_deployment_info.\n"
					},
					"response": []
				},
				{
					"name": "Read the NSX Manager's Network Interface Statistics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-nodes/:transport-node-id/network/interfaces/:interface-id/stats?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-nodes",
								":transport-node-id",
								"network",
								"interfaces",
								":interface-id",
								"stats"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "transport-node-id",
									"value": "{{transport-node-id}}"
								},
								{
									"key": "interface-id",
									"value": "{{interface-id}}"
								}
							]
						},
						"description": "On the specified interface, returns the number of received (rx), transmitted\n(tx), and dropped packets; the number of bytes and errors received and\ntransmitted on the interface; and the number of detected collisions.\n"
					},
					"response": []
				},
				{
					"name": "List transport nodes by realized state",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-nodes/state?mm_state={{mm_state}}&status={{status}}&vtep_ip={{vtep_ip}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-nodes",
								"state"
							],
							"query": [
								{
									"key": "mm_state",
									"value": "{{mm_state}}"
								},
								{
									"key": "status",
									"value": "{{status}}"
								},
								{
									"key": "vtep_ip",
									"value": "{{vtep_ip}}"
								}
							]
						},
						"description": "Returns a list of transport node states that have realized state as provided\nas query parameter\n"
					},
					"response": []
				}
			],
			"description": "Folder for transport-nodes"
		},
		{
			"name": "compute-collection-transport-node-templates",
			"item": [
				{
					"name": "List compute collection transportnode templates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/compute-collection-transport-node-templates?compute_collection_id={{compute_collection_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"compute-collection-transport-node-templates"
							],
							"query": [
								{
									"key": "compute_collection_id",
									"value": "{{compute_collection_id}}"
								}
							]
						},
						"description": "Returns all eligible compute collection transportnode templates"
					},
					"response": []
				},
				{
					"name": "Create transport node template for compute collection.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/compute-collection-transport-node-templates",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"compute-collection-transport-node-templates"
							]
						},
						"description": "If automated transport node creation is configured on compute collection, this template will serve as the default setting for transport node creation."
					},
					"response": []
				},
				{
					"name": "Get compute collection transportnode template application states",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/compute-collection-transport-node-templates/:template-id/state?compute_collection_id={{compute_collection_id}}&cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"compute-collection-transport-node-templates",
								":template-id",
								"state"
							],
							"query": [
								{
									"key": "compute_collection_id",
									"value": "{{compute_collection_id}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							],
							"variable": [
								{
									"key": "template-id",
									"value": "{{template-id}}"
								}
							]
						},
						"description": "Returns detailed transport node states for this compute collection"
					},
					"response": []
				},
				{
					"name": "Get compute collection transportnode template by id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/compute-collection-transport-node-templates/:template-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"compute-collection-transport-node-templates",
								":template-id"
							],
							"variable": [
								{
									"key": "template-id",
									"value": "{{template-id}}"
								}
							]
						},
						"description": "Returns compute collection transportnode template by id"
					},
					"response": []
				},
				{
					"name": "Update compute collection transportnode template",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/compute-collection-transport-node-templates/:template-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"compute-collection-transport-node-templates",
								":template-id"
							],
							"variable": [
								{
									"key": "template-id",
									"value": "{{template-id}}"
								}
							]
						},
						"description": "Update configuration of compute collection transportnode template.\nCompute_collection_id isn't allowed to be changed since it represents\nthe association between ComputeCollection and this template. This is\ndetermined when ComputeCollectionTransportNodeTemplate got created.\n"
					},
					"response": []
				},
				{
					"name": "Delete a compute collection transport node template",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/compute-collection-transport-node-templates/:template-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"compute-collection-transport-node-templates",
								":template-id"
							],
							"variable": [
								{
									"key": "template-id",
									"value": "{{template-id}}"
								}
							]
						},
						"description": "Delete the specified compute collection transport node template."
					},
					"response": []
				}
			],
			"description": "Folder for compute-collection-transport-node-templates"
		},
		{
			"name": "transport-node-collections",
			"item": [
				{
					"name": "Get Transport Node collection application state",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-node-collections/:transport-node-collection-id/state",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-node-collections",
								":transport-node-collection-id",
								"state"
							],
							"variable": [
								{
									"key": "transport-node-collection-id",
									"value": "{{transport-node-collection-id}}"
								}
							]
						},
						"description": "Returns the state of transport node collection based on the states of\ntransport nodes of the hosts which are part of compute collection.\n"
					},
					"response": []
				},
				{
					"name": "Get Transport Node collection by id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-node-collections/:transport-node-collection-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-node-collections",
								":transport-node-collection-id"
							],
							"variable": [
								{
									"key": "transport-node-collection-id",
									"value": "{{transport-node-collection-id}}"
								}
							]
						},
						"description": "Returns transport node collection by id"
					},
					"response": []
				},
				{
					"name": "Update Transport Node collection",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-node-collections/:transport-node-collection-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-node-collections",
								":transport-node-collection-id"
							],
							"variable": [
								{
									"key": "transport-node-collection-id",
									"value": "{{transport-node-collection-id}}"
								}
							]
						},
						"description": "Attach different transport node profile to compute collection by updating\ntransport node collection.\n"
					},
					"response": []
				},
				{
					"name": "Detach transport node profile from compute collection.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-node-collections/:transport-node-collection-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-node-collections",
								":transport-node-collection-id"
							],
							"variable": [
								{
									"key": "transport-node-collection-id",
									"value": "{{transport-node-collection-id}}"
								}
							]
						},
						"description": "By deleting transport node collection, we are detaching the transport node\nprofile(TNP) from the compute collection. It has no effect on existing\ntransport nodes. However, new hosts added to the compute collection will no\nlonger be automatically converted to NSX transport node.\nDetaching TNP from compute collection does not delete TNP.\n"
					},
					"response": []
				},
				{
					"name": "List Transport Node collections",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-node-collections",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-node-collections"
							]
						},
						"description": "Returns all Transport Node collections"
					},
					"response": []
				},
				{
					"name": "Create transport node collection by attaching Transport Node Profile to cluster.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-node-collections",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-node-collections"
							]
						},
						"description": "When transport node collection is created the hosts which are part\nof compute collection will be prepared automatically i.e. NSX Manager\nattempts to install the NSX components on hosts. Transport nodes for these\nhosts are created using the configuration specified in transport node\nprofile.\n"
					},
					"response": []
				}
			],
			"description": "Folder for transport-node-collections"
		},
		{
			"name": "cluster?action=join_cluster",
			"item": [
				{
					"name": "Join this node to a NSX Cluster",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster?action=join_cluster",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster"
							],
							"query": [
								{
									"key": "action",
									"value": "join_cluster"
								}
							]
						},
						"description": "Join this node to a NSX Cluster"
					},
					"response": []
				}
			],
			"description": "Folder for cluster?action=join_cluster"
		},
		{
			"name": "administration",
			"item": [
				{
					"name": "Collect support bundles from registered cluster and fabric nodes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, application/octet-stream"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/administration/support-bundles?action=collect?override_async_response=false&require_delete_or_override_async_response=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"administration",
								"support-bundles"
							],
							"query": [
								{
									"key": "action",
									"value": "collect?override_async_response=false"
								},
								{
									"key": "require_delete_or_override_async_response",
									"value": "false"
								}
							]
						},
						"description": "Collect support bundles from registered cluster and fabric nodes."
					},
					"response": []
				},
				{
					"name": "Collect audit logs from registered manager nodes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/administration/audit-logs?cursor={{cursor}}&fields={{fields}}&page_size=100",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"administration",
								"audit-logs"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "fields",
									"value": "{{fields}}"
								},
								{
									"key": "page_size",
									"value": "100"
								}
							]
						},
						"description": "This API is executed on a manager node to display audit logs from all nodes\ninside the management plane cluster. An audit log collection will be\ntriggered if the local master audit log is outdated.\n"
					},
					"response": []
				},
				{
					"name": "Delete existing support bundles waiting to be downloaded",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/administration/support-bundles?action=delete_async_response",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"administration",
								"support-bundles"
							],
							"query": [
								{
									"key": "action",
									"value": "delete_async_response"
								}
							]
						},
						"description": "Delete existing support bundles waiting to be downloaded."
					},
					"response": []
				}
			],
			"description": "Folder for administration"
		},
		{
			"name": "switching-profiles",
			"item": [
				{
					"name": "Get Counts of Ports and Switches Using This Switching Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/switching-profiles/:switching-profile-id/summary",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"switching-profiles",
								":switching-profile-id",
								"summary"
							],
							"variable": [
								{
									"key": "switching-profile-id",
									"value": "{{switching-profile-id}}"
								}
							]
						},
						"description": "Get Counts of Ports and Switches Using This Switching Profile"
					},
					"response": []
				},
				{
					"name": "Get Switching Profile by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/switching-profiles/:switching-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"switching-profiles",
								":switching-profile-id"
							],
							"variable": [
								{
									"key": "switching-profile-id",
									"value": "{{switching-profile-id}}"
								}
							]
						},
						"description": "Returns information about a specified switching profile."
					},
					"response": []
				},
				{
					"name": "Update a Switching Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/switching-profiles/:switching-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"switching-profiles",
								":switching-profile-id"
							],
							"variable": [
								{
									"key": "switching-profile-id",
									"value": "{{switching-profile-id}}"
								}
							]
						},
						"description": "Updates the user-configurable parameters of a switching profile. Only the qos,\nport-mirroring, spoof-guard and port-security switching profiles can be modified.\nYou cannot modify the ipfix or ip-discovery switching profiles.\n"
					},
					"response": []
				},
				{
					"name": "Delete a Switching Profile",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/switching-profiles/:switching-profile-id?unbind=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"switching-profiles",
								":switching-profile-id"
							],
							"query": [
								{
									"key": "unbind",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "switching-profile-id",
									"value": "{{switching-profile-id}}"
								}
							]
						},
						"description": "Deletes the specified switching profile."
					},
					"response": []
				},
				{
					"name": "List Switching Profiles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/switching-profiles?cursor={{cursor}}&include_system_owned=false&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&switching_profile_type={{switching_profile_type}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"switching-profiles"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "include_system_owned",
									"value": "false"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "switching_profile_type",
									"value": "{{switching_profile_type}}"
								}
							]
						},
						"description": "Returns information about the system-default and user-configured switching\nprofiles. Each switching profile has a unique ID, a display name, and\nvarious other read-only and configurable properties. The default switching\nprofiles are assigned automatically to each switch.\n"
					},
					"response": []
				},
				{
					"name": "Create a Switching Profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/switching-profiles",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"switching-profiles"
							]
						},
						"description": "Creates a new, custom qos, port-mirroring, spoof-guard or port-security\nswitching profile. You can override their default switching profile assignments\nby creating a new switching profile and assigning it to one or more logical\nswitches. You cannot override the default ipfix or ip_discovery switching profiles.\n"
					},
					"response": []
				}
			],
			"description": "Folder for switching-profiles"
		},
		{
			"name": "telemetry",
			"item": [
				{
					"name": "Returns the telemetry configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/telemetry/config",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"telemetry",
								"config"
							]
						},
						"description": "Returns the telemetry configuration."
					},
					"response": []
				},
				{
					"name": "Creates or updates the telemetry configuration",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/telemetry/config",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"telemetry",
								"config"
							]
						},
						"description": "Updates or creates the telemetry configuration, and returns the new configuration.\n"
					},
					"response": []
				},
				{
					"name": "Returns telemetry agreement information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/telemetry/agreement",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"telemetry",
								"agreement"
							]
						},
						"description": "Returns telemetry agreement information."
					},
					"response": []
				},
				{
					"name": "Set telemetry agreement information",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/telemetry/agreement",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"telemetry",
								"agreement"
							]
						},
						"description": "Set telemetry agreement information."
					},
					"response": []
				}
			],
			"description": "Folder for telemetry"
		},
		{
			"name": "transport-node-profiles",
			"item": [
				{
					"name": "Get a Transport Node",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-node-profiles/:transport-node-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-node-profiles",
								":transport-node-profile-id"
							],
							"variable": [
								{
									"key": "transport-node-profile-id",
									"value": "{{transport-node-profile-id}}"
								}
							]
						},
						"description": "Returns information about a specified transport node profile."
					},
					"response": []
				},
				{
					"name": "Update a Transport Node Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-node-profiles/:transport-node-profile-id?esx_mgmt_if_migration_dest={{esx_mgmt_if_migration_dest}}&if_id={{if_id}}&ping_ip={{ping_ip}}&vnic={{vnic}}&vnic_migration_dest={{vnic_migration_dest}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-node-profiles",
								":transport-node-profile-id"
							],
							"query": [
								{
									"key": "esx_mgmt_if_migration_dest",
									"value": "{{esx_mgmt_if_migration_dest}}"
								},
								{
									"key": "if_id",
									"value": "{{if_id}}"
								},
								{
									"key": "ping_ip",
									"value": "{{ping_ip}}"
								},
								{
									"key": "vnic",
									"value": "{{vnic}}"
								},
								{
									"key": "vnic_migration_dest",
									"value": "{{vnic_migration_dest}}"
								}
							],
							"variable": [
								{
									"key": "transport-node-profile-id",
									"value": "{{transport-node-profile-id}}"
								}
							]
						},
						"description": "When configurations of a transport node profile(TNP) is updated, all the\ntransport nodes in all the compute collections to which this TNP is attached\nare updated to reflect the updated configuration.\n"
					},
					"response": []
				},
				{
					"name": "Delete a Transport Node Profile",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-node-profiles/:transport-node-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-node-profiles",
								":transport-node-profile-id"
							],
							"variable": [
								{
									"key": "transport-node-profile-id",
									"value": "{{transport-node-profile-id}}"
								}
							]
						},
						"description": "Deletes the specified transport node profile. A transport node profile\ncan be deleted only when it is not attached to any compute collection.\n"
					},
					"response": []
				},
				{
					"name": "List Transport Nodes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-node-profiles?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-node-profiles"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns information about all transport node profiles.\n"
					},
					"response": []
				},
				{
					"name": "Create a Transport Node Profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transport-node-profiles",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transport-node-profiles"
							]
						},
						"description": "Transport node profile captures the configuration needed to create\na transport node. A transport node profile can be attached to\ncompute collections for automatic TN creation of member hosts.\n"
					},
					"response": []
				}
			],
			"description": "Folder for transport-node-profiles"
		},
		{
			"name": "bridge-endpoints",
			"item": [
				{
					"name": "List All Bridge Endpoints",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/bridge-endpoints?bridge_cluster_id={{bridge_cluster_id}}&bridge_endpoint_profile_id={{bridge_endpoint_profile_id}}&cursor={{cursor}}&included_fields={{included_fields}}&logical_switch_id={{logical_switch_id}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&vlan_transport_zone_id={{vlan_transport_zone_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"bridge-endpoints"
							],
							"query": [
								{
									"key": "bridge_cluster_id",
									"value": "{{bridge_cluster_id}}"
								},
								{
									"key": "bridge_endpoint_profile_id",
									"value": "{{bridge_endpoint_profile_id}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "logical_switch_id",
									"value": "{{logical_switch_id}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "vlan_transport_zone_id",
									"value": "{{vlan_transport_zone_id}}"
								}
							]
						},
						"description": "Returns information about all configured bridge endoints\n"
					},
					"response": []
				},
				{
					"name": "Create a Bridge Endpoint",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/bridge-endpoints",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"bridge-endpoints"
							]
						},
						"description": "Creates a Bridge Endpoint. It describes the physical attributes of the\nbridge like vlan. A logical port can be attached to a vif providing\nbridging functionality from the logical overlay network to the physical\nvlan network\n"
					},
					"response": []
				},
				{
					"name": "Returns status of a specified Bridge Endpoint",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/bridge-endpoints/:endpoint-id/status?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"bridge-endpoints",
								":endpoint-id",
								"status"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "endpoint-id",
									"value": "{{endpoint-id}}"
								}
							]
						},
						"description": "Get the status for the Bridge Endpoint of the given Endpoint id"
					},
					"response": []
				},
				{
					"name": "Get Information about a bridge endpoint",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/bridge-endpoints/:bridgeendpoint-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"bridge-endpoints",
								":bridgeendpoint-id"
							],
							"variable": [
								{
									"key": "bridgeendpoint-id",
									"value": "{{bridgeendpoint-id}}"
								}
							]
						},
						"description": "Returns information about a specified bridge endpoint."
					},
					"response": []
				},
				{
					"name": "Update a Bridge Endpoint",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/bridge-endpoints/:bridgeendpoint-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"bridge-endpoints",
								":bridgeendpoint-id"
							],
							"variable": [
								{
									"key": "bridgeendpoint-id",
									"value": "{{bridgeendpoint-id}}"
								}
							]
						},
						"description": "Modifies a existing bridge endpoint.\n"
					},
					"response": []
				},
				{
					"name": "Delete a Bridge Endpoint",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/bridge-endpoints/:bridgeendpoint-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"bridge-endpoints",
								":bridgeendpoint-id"
							],
							"variable": [
								{
									"key": "bridgeendpoint-id",
									"value": "{{bridgeendpoint-id}}"
								}
							]
						},
						"description": "Deletes the specified Bridge Endpoint."
					},
					"response": []
				},
				{
					"name": "Returns statistics of a specified Bridge Endpoint",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/bridge-endpoints/:endpoint-id/statistics?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"bridge-endpoints",
								":endpoint-id",
								"statistics"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "endpoint-id",
									"value": "{{endpoint-id}}"
								}
							]
						},
						"description": "Get the statistics for the Bridge Endpoint of the given Endpoint id (endpoint-id)"
					},
					"response": []
				}
			],
			"description": "Folder for bridge-endpoints"
		},
		{
			"name": "edge-clusters",
			"item": [
				{
					"name": "Read Edge Cluster",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/edge-clusters/:edge-cluster-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"edge-clusters",
								":edge-cluster-id"
							],
							"variable": [
								{
									"key": "edge-cluster-id",
									"value": "{{edge-cluster-id}}"
								}
							]
						},
						"description": "Returns information about the specified edge cluster."
					},
					"response": []
				},
				{
					"name": "Update Edge Cluster",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/edge-clusters/:edge-cluster-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"edge-clusters",
								":edge-cluster-id"
							],
							"variable": [
								{
									"key": "edge-cluster-id",
									"value": "{{edge-cluster-id}}"
								}
							]
						},
						"description": "Modifies the specified edge cluster. Modifiable parameters include the\ndescription, display_name, transport-node-id. If the optional\nfabric_profile_binding is included, resource_type and profile_id are required.\nUser should do a GET on the edge-cluster and obtain the payload and retain the\nmember_index of the existing members as returning in the GET output. For new member\nadditions, the member_index cannot be defined by the user, user can read the system\nallocated index to the new member in the output of this API call or by doing a GET call.\nUser cannot use this PUT api to replace the transport_node of an existing member because\nthis is a disruption action, we have exposed a explicit API for doing so, refer to\n\"ReplaceEdgeClusterMemberTransportNode\"\nEdgeCluster only supports homogeneous members. The TransportNodes backed by EdgeNode are\nonly allowed in cluster members. DeploymentType (VIRTUAL_MACHINE|PHYSICAL_MACHINE) of these\nEdgeNodes is recommended to be the same. EdgeCluster supports members of different\ndeployment types.\n"
					},
					"response": []
				},
				{
					"name": "Delete Edge Cluster",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/edge-clusters/:edge-cluster-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"edge-clusters",
								":edge-cluster-id"
							],
							"variable": [
								{
									"key": "edge-cluster-id",
									"value": "{{edge-cluster-id}}"
								}
							]
						},
						"description": "Deletes the specified edge cluster."
					},
					"response": []
				},
				{
					"name": "List Edge Clusters",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/edge-clusters?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"edge-clusters"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns information about the configured edge clusters, which enable you to\ngroup together transport nodes of the type EdgeNode and apply fabric\nprofiles to all members of the edge cluster. Each edge node can participate\nin only one edge cluster.\n"
					},
					"response": []
				},
				{
					"name": "Create Edge Cluster",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/edge-clusters",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"edge-clusters"
							]
						},
						"description": "Creates a new edge cluster.\nIt only supports homogeneous members.\nThe TransportNodes backed by EdgeNode are only allowed in cluster members.\nDeploymentType (VIRTUAL_MACHINE|PHYSICAL_MACHINE) of these EdgeNodes is\nrecommended to be the same. EdgeCluster supports members of different\ndeployment types.\n"
					},
					"response": []
				},
				{
					"name": "Replace the transport node in the specified member of the edge-cluster",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/edge-clusters/:edge-cluster-id?action=replace_transport_node",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"edge-clusters",
								":edge-cluster-id"
							],
							"query": [
								{
									"key": "action",
									"value": "replace_transport_node"
								}
							],
							"variable": [
								{
									"key": "edge-cluster-id",
									"value": "{{edge-cluster-id}}"
								}
							]
						},
						"description": "Replace the transport node in the specified member of the edge-cluster.\nThis is a disruptive action. This will move all the LogicalRouterPorts(uplink and routerLink)\nhost on the old transport_node to the new transport_node. The transportNode cannot be\npresent in another member of any edgeClusters.\n"
					},
					"response": []
				},
				{
					"name": "Get the status for the Edge cluster of the given id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/edge-clusters/:edge-cluster-id/status?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"edge-clusters",
								":edge-cluster-id",
								"status"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "edge-cluster-id",
									"value": "{{edge-cluster-id}}"
								}
							]
						},
						"description": "Returns the aggregated status for the Edge cluster along with status of\nall edge nodes in the cluster. Query parameter \"source=realtime\" is the\nonly supported source.\n"
					},
					"response": []
				},
				{
					"name": "Get the Realized State of a Edge Cluster",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/edge-clusters/:edge-cluster-id/state?barrier_id={{barrier_id}}&request_id={{request_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"edge-clusters",
								":edge-cluster-id",
								"state"
							],
							"query": [
								{
									"key": "barrier_id",
									"value": "{{barrier_id}}"
								},
								{
									"key": "request_id",
									"value": "{{request_id}}"
								}
							],
							"variable": [
								{
									"key": "edge-cluster-id",
									"value": "{{edge-cluster-id}}"
								}
							]
						},
						"description": "Return realized state information of a edge cluster.\nAny configuration update that affects the edge cluster can use this API\nto get its realized state by passing a request_id returned by the\nconfiguration change operation. e.g. Update configuration of edge cluster.\n"
					},
					"response": []
				}
			],
			"description": "Folder for edge-clusters"
		},
		{
			"name": "host-switch-profiles",
			"item": [
				{
					"name": "Get a Hostswitch Profile by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/host-switch-profiles/:host-switch-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"host-switch-profiles",
								":host-switch-profile-id"
							],
							"variable": [
								{
									"key": "host-switch-profile-id",
									"value": "{{host-switch-profile-id}}"
								}
							]
						},
						"description": "Returns information about a specified hostswitch profile."
					},
					"response": []
				},
				{
					"name": "Update a Hostswitch Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/host-switch-profiles/:host-switch-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"host-switch-profiles",
								":host-switch-profile-id"
							],
							"variable": [
								{
									"key": "host-switch-profile-id",
									"value": "{{host-switch-profile-id}}"
								}
							]
						},
						"description": "Modifies a specified hostswitch profile. The body of the PUT request must\ninclude the resource_type. For uplink profiles, the put request must also\ninclude teaming parameters. Modifiable attributes include display_name, mtu,\nand transport_vlan. For uplink teaming policies, uplink_name and policy are\nalso modifiable.\n"
					},
					"response": []
				},
				{
					"name": "Delete a Hostswitch Profile",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/host-switch-profiles/:host-switch-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"host-switch-profiles",
								":host-switch-profile-id"
							],
							"variable": [
								{
									"key": "host-switch-profile-id",
									"value": "{{host-switch-profile-id}}"
								}
							]
						},
						"description": "Deletes a specified hostswitch profile."
					},
					"response": []
				},
				{
					"name": "List Hostswitch Profiles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/host-switch-profiles?cursor={{cursor}}&hostswitch_profile_type={{hostswitch_profile_type}}&include_system_owned=false&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&uplink_teaming_policy_name={{uplink_teaming_policy_name}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"host-switch-profiles"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "hostswitch_profile_type",
									"value": "{{hostswitch_profile_type}}"
								},
								{
									"key": "include_system_owned",
									"value": "false"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "uplink_teaming_policy_name",
									"value": "{{uplink_teaming_policy_name}}"
								}
							]
						},
						"description": "Returns information about the configured hostswitch profiles. Hostswitch\nprofiles define networking policies for hostswitches (sometimes referred to\nas bridges in OVS). Currently, only uplink teaming is supported. Uplink\nteaming allows NSX to load balance traffic across different physical NICs\n(PNICs) on the hypervisor hosts. Multiple teaming policies are supported,\nincluding LACP active, LACP passive, load balancing based on source ID, and\nfailover order.\n"
					},
					"response": []
				},
				{
					"name": "Create a Hostswitch Profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/host-switch-profiles",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"host-switch-profiles"
							]
						},
						"description": "Creates a hostswitch profile. The resource_type is required. For uplink\nprofiles, the teaming and policy parameters are required. By default, the\nmtu is 1600 and the transport_vlan is 0. The supported MTU range is 1280\nthrough 9000.\n"
					},
					"response": []
				}
			],
			"description": "Folder for host-switch-profiles"
		},
		{
			"name": "node?action=restart",
			"item": [
				{
					"name": "Restart or shutdown node",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node?action=restart",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node"
							],
							"query": [
								{
									"key": "action",
									"value": "restart"
								}
							]
						},
						"description": "Restarts or shuts down the NSX Manager appliance."
					},
					"response": []
				}
			],
			"description": "Folder for node?action=restart"
		},
		{
			"name": "licenses",
			"item": [
				{
					"name": "Deprecated. Get license properties for license identified by the license-key",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/licenses/:license-key",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"licenses",
								":license-key"
							],
							"variable": [
								{
									"key": "license-key",
									"value": "{{license-key}}"
								}
							]
						},
						"description": "Deprecated. Use GET /licenses API instead."
					},
					"response": []
				},
				{
					"name": "Deprecated. Remove a license identified by the license-key",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/licenses/:license-key",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"licenses",
								":license-key"
							],
							"variable": [
								{
									"key": "license-key",
									"value": "{{license-key}}"
								}
							]
						},
						"description": "Deprecated. Use POST /licenses?action=delete API instead.\n"
					},
					"response": []
				},
				{
					"name": "Get usage report of all registered modules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/licenses/licenses-usage",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"licenses",
								"licenses-usage"
							]
						},
						"description": "Returns usage report of all registered modules\n"
					},
					"response": []
				},
				{
					"name": "Get usage report of all registred modules in CSV format",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/licenses/licenses-usage?format=csv",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"licenses",
								"licenses-usage"
							],
							"query": [
								{
									"key": "format",
									"value": "csv"
								}
							]
						},
						"description": "Returns usage report of all registered modules in CSV format\n"
					},
					"response": []
				},
				{
					"name": "Get all licenses",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/licenses",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"licenses"
							]
						},
						"description": "Returns all licenses.\n"
					},
					"response": []
				},
				{
					"name": "Add a new license key",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/licenses",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"licenses"
							]
						},
						"description": "This will add a license key to the system.\nThe API supports adding only one license key for each license edition\ntype - Standard, Advanced or Enterprise. If a new license key is tried\nto add for an edition for which the license key already exists,\nthen this API will return an error.\n"
					},
					"response": []
				}
			],
			"description": "Folder for licenses"
		},
		{
			"name": "logical-ports",
			"item": [
				{
					"name": "List All Logical Ports",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-ports?attachment_id={{attachment_id}}&attachment_type={{attachment_type}}&bridge_cluster_id={{bridge_cluster_id}}&container_ports_only=false&cursor={{cursor}}&diagnostic=false&included_fields={{included_fields}}&logical_switch_id={{logical_switch_id}}&page_size=1000&parent_vif_id={{parent_vif_id}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&switching_profile_id={{switching_profile_id}}&transport_node_id={{transport_node_id}}&transport_zone_id={{transport_zone_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-ports"
							],
							"query": [
								{
									"key": "attachment_id",
									"value": "{{attachment_id}}"
								},
								{
									"key": "attachment_type",
									"value": "{{attachment_type}}"
								},
								{
									"key": "bridge_cluster_id",
									"value": "{{bridge_cluster_id}}"
								},
								{
									"key": "container_ports_only",
									"value": "false"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "diagnostic",
									"value": "false"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "logical_switch_id",
									"value": "{{logical_switch_id}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "parent_vif_id",
									"value": "{{parent_vif_id}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "switching_profile_id",
									"value": "{{switching_profile_id}}"
								},
								{
									"key": "transport_node_id",
									"value": "{{transport_node_id}}"
								},
								{
									"key": "transport_zone_id",
									"value": "{{transport_zone_id}}"
								}
							]
						},
						"description": "Returns information about all configured logical switch ports. Logical\nswitch ports connect to VM virtual network interface cards (NICs). Each\nlogical port is associated with one logical switch.\n"
					},
					"response": []
				},
				{
					"name": "Create a Logical Port",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-ports",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-ports"
							]
						},
						"description": "Creates a new logical switch port. The required parameters are the\nassociated logical_switch_id and admin_state (UP or DOWN). Optional\nparameters are the attachment and switching_profile_ids. If you don't\nspecify switching_profile_ids, default switching profiles are assigned to\nthe port. If you don't specify an attachment, the switch port remains\nempty. To configure an attachment, you must specify an id, and\noptionally you can specify an attachment_type (VIF or LOGICALROUTER).\nThe attachment_type is VIF by default.\n"
					},
					"response": []
				},
				{
					"name": "Get realized state & location of a logical port",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-ports/:lport-id/state",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-ports",
								":lport-id",
								"state"
							],
							"variable": [
								{
									"key": "lport-id",
									"value": "{{lport-id}}"
								}
							]
						},
						"description": "Returns transport node id for a specified logical port. Also returns\ninformation about all address bindings of the specified logical port. This\nincludes address bindings discovered via various snooping methods like ARP\nsnooping, DHCP snooping etc. and addressing bindings that are realized\nbased on user configuration.\n"
					},
					"response": []
				},
				{
					"name": "Get Information About a Logical Port",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-ports/:lport-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-ports",
								":lport-id"
							],
							"variable": [
								{
									"key": "lport-id",
									"value": "{{lport-id}}"
								}
							]
						},
						"description": "Returns information about a specified logical port."
					},
					"response": []
				},
				{
					"name": "Update a Logical Port",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-ports/:lport-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-ports",
								":lport-id"
							],
							"variable": [
								{
									"key": "lport-id",
									"value": "{{lport-id}}"
								}
							]
						},
						"description": "Modifies an existing logical switch port. Parameters that can be modified\ninclude attachment_type (LOGICALROUTER, VIF), admin_state (UP or DOWN),\nattachment id and switching_profile_ids. You cannot modify the logical_switch_id.\nIn other words, you cannot move an existing port from one switch to another switch.\n"
					},
					"response": []
				},
				{
					"name": "Delete a Logical Port",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-ports/:lport-id?detach=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-ports",
								":lport-id"
							],
							"query": [
								{
									"key": "detach",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "lport-id",
									"value": "{{lport-id}}"
								}
							]
						},
						"description": "Deletes the specified logical switch port. By default, if logical port has\nattachments, or it is added to any NSGroup, the deletion will be failed.\nOption detach could be used for deleting logical port forcibly.\n"
					},
					"response": []
				},
				{
					"name": "Get Operational Status for Logical Port of a Given Port ID (lport-id)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-ports/:lport-id/status?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-ports",
								":lport-id",
								"status"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "lport-id",
									"value": "{{lport-id}}"
								}
							]
						},
						"description": "Returns operational status of a specified logical port."
					},
					"response": []
				},
				{
					"name": "Get MAC table of a logical port with a given port id (lport-id)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-ports/:lport-id/mac-table?format=csv?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&source={{source}}&transport_node_id={{transport_node_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-ports",
								":lport-id",
								"mac-table"
							],
							"query": [
								{
									"key": "format",
									"value": "csv?cursor={{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "source",
									"value": "{{source}}"
								},
								{
									"key": "transport_node_id",
									"value": "{{transport_node_id}}"
								}
							],
							"variable": [
								{
									"key": "lport-id",
									"value": "{{lport-id}}"
								}
							]
						},
						"description": "Returns MAC table in CSV format of a specified logical port. If the target transport node id is not provided,\nthe NSX manager will ask the controller for the transport node where the logical port is located.\nThe query parameter \"source=cached\" is not supported. MAC table retrieval is not supported on\nlogical ports that are attached to a logical router.\n"
					},
					"response": []
				},
				{
					"name": "Get MAC table of a logical port with a given port id (lport-id)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-ports/:lport-id/mac-table?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&source={{source}}&transport_node_id={{transport_node_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-ports",
								":lport-id",
								"mac-table"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "source",
									"value": "{{source}}"
								},
								{
									"key": "transport_node_id",
									"value": "{{transport_node_id}}"
								}
							],
							"variable": [
								{
									"key": "lport-id",
									"value": "{{lport-id}}"
								}
							]
						},
						"description": "Returns MAC table of a specified logical port. If the target transport node id is not provided,\nthe NSX manager will ask the controller for the transport node where the logical port is located.\nThe query parameter \"source=cached\" is not supported. MAC table retrieval is not supported on\nlogical ports that are attached to a logical router.\n"
					},
					"response": []
				},
				{
					"name": "Get Operational Status Summary of All Logical Ports in the System",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-ports/status?attachment_id={{attachment_id}}&attachment_type={{attachment_type}}&bridge_cluster_id={{bridge_cluster_id}}&container_ports_only=false&cursor={{cursor}}&diagnostic=false&included_fields={{included_fields}}&logical_switch_id={{logical_switch_id}}&page_size=1000&parent_vif_id={{parent_vif_id}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&source={{source}}&switching_profile_id={{switching_profile_id}}&transport_node_id={{transport_node_id}}&transport_zone_id={{transport_zone_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-ports",
								"status"
							],
							"query": [
								{
									"key": "attachment_id",
									"value": "{{attachment_id}}"
								},
								{
									"key": "attachment_type",
									"value": "{{attachment_type}}"
								},
								{
									"key": "bridge_cluster_id",
									"value": "{{bridge_cluster_id}}"
								},
								{
									"key": "container_ports_only",
									"value": "false"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "diagnostic",
									"value": "false"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "logical_switch_id",
									"value": "{{logical_switch_id}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "parent_vif_id",
									"value": "{{parent_vif_id}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "source",
									"value": "{{source}}"
								},
								{
									"key": "switching_profile_id",
									"value": "{{switching_profile_id}}"
								},
								{
									"key": "transport_node_id",
									"value": "{{transport_node_id}}"
								},
								{
									"key": "transport_zone_id",
									"value": "{{transport_zone_id}}"
								}
							]
						},
						"description": "Returns operational status of all logical ports.\nThe query parameter \"source=realtime\" is not supported.\n"
					},
					"response": []
				},
				{
					"name": "Get networking entities between two logical ports with VIF attachment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-ports/:lport-id/forwarding-path?peer_port_id={{peer_port_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-ports",
								":lport-id",
								"forwarding-path"
							],
							"query": [
								{
									"key": "peer_port_id",
									"value": "{{peer_port_id}}"
								}
							],
							"variable": [
								{
									"key": "lport-id",
									"value": "{{lport-id}}"
								}
							]
						},
						"description": "Get networking entities between two logical ports with VIF attachment"
					},
					"response": []
				},
				{
					"name": "Get Statistics for Logical Port of a Given Port ID (lport-id)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-ports/:lport-id/statistics?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-ports",
								":lport-id",
								"statistics"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "lport-id",
									"value": "{{lport-id}}"
								}
							]
						},
						"description": "Returns statistics of a specified logical port. If the logical port is attached to\na logical router port, query parameter \"source=realtime\" is not supported.\n"
					},
					"response": []
				}
			],
			"description": "Folder for logical-ports"
		},
		{
			"name": "logical-router-ports",
			"item": [
				{
					"name": "Get the Realized State of a Logical Router Port",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-router-ports/:logical-router-port-id/state?barrier_id={{barrier_id}}&request_id={{request_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-router-ports",
								":logical-router-port-id",
								"state"
							],
							"query": [
								{
									"key": "barrier_id",
									"value": "{{barrier_id}}"
								},
								{
									"key": "request_id",
									"value": "{{request_id}}"
								}
							],
							"variable": [
								{
									"key": "logical-router-port-id",
									"value": "{{logical-router-port-id}}"
								}
							]
						},
						"description": "Return realized state information of a logical router port.\nAny configuration update that affects the logical router port can use this API\nto get its realized state by passing a request_id returned by the\nconfiguration change operation. e.g. Update configuration of logical router ports,\ndhcp relays, etc.\n"
					},
					"response": []
				},
				{
					"name": "Get the ARP table (IPv4) or Neighbor Discovery table (IPv6) for the\nLogical Router Port of the given id\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-router-ports/:logical-router-port-id/arp-table?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&source={{source}}&transport_node_id={{transport_node_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-router-ports",
								":logical-router-port-id",
								"arp-table"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "source",
									"value": "{{source}}"
								},
								{
									"key": "transport_node_id",
									"value": "{{transport_node_id}}"
								}
							],
							"variable": [
								{
									"key": "logical-router-port-id",
									"value": "{{logical-router-port-id}}"
								}
							]
						},
						"description": "Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) for the\nLogical Router Port of the given id, on a node if a query parameter\n\"transport_node_id=<transport-node-id>\" is given. The transport_node_id\nparameter is mandatory if the router port is not uplink type.\nQuery parameter \"source=realtime\" is the only supported source.\n"
					},
					"response": []
				},
				{
					"name": "Get the statistics summary of a specified logical router port",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-router-ports/:logical-router-port-id/statistics/summary?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-router-ports",
								":logical-router-port-id",
								"statistics",
								"summary"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "logical-router-port-id",
									"value": "{{logical-router-port-id}}"
								}
							]
						},
						"description": "Returns the summation of statistics from all nodes for the Specified\nLogical Router Port.\nThe query parameter \"source=realtime\" is not supported.\n"
					},
					"response": []
				},
				{
					"name": "List Logical Router Ports",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-router-ports?cursor={{cursor}}&included_fields={{included_fields}}&logical_router_id={{logical_router_id}}&logical_switch_id={{logical_switch_id}}&page_size=1000&resource_type={{resource_type}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-router-ports"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "logical_router_id",
									"value": "{{logical_router_id}}"
								},
								{
									"key": "logical_switch_id",
									"value": "{{logical_switch_id}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "resource_type",
									"value": "{{resource_type}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns information about all logical router ports. Information includes the\nresource_type (LogicalRouterUpLinkPort, LogicalRouterDownLinkPort,\nLogicalRouterLinkPort, LogicalRouterLoopbackPort, LogicalRouterCentralizedServicePort);\nlogical_router_id (the router to which each logical router port is assigned);\nand any service_bindings (such as DHCP relay service).\nThe GET request can include a query parameter (logical_router_id\nor logical_switch_id).\n"
					},
					"response": []
				},
				{
					"name": "Create a Logical Router Port",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-router-ports",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-router-ports"
							]
						},
						"description": "Creates a logical router port. The required parameters include resource_type\n(LogicalRouterUpLinkPort, LogicalRouterDownLinkPort, LogicalRouterLinkPort,\nLogicalRouterLoopbackPort, LogicalRouterCentralizedServicePort); and\nlogical_router_id (the router to which each logical router port is assigned).\nThe service_bindings parameter is optional.\n"
					},
					"response": []
				},
				{
					"name": "Get the statistics of a specified logical router port on all or a specified node",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-router-ports/:logical-router-port-id/statistics?source={{source}}&transport_node_id={{transport_node_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-router-ports",
								":logical-router-port-id",
								"statistics"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								},
								{
									"key": "transport_node_id",
									"value": "{{transport_node_id}}"
								}
							],
							"variable": [
								{
									"key": "logical-router-port-id",
									"value": "{{logical-router-port-id}}"
								}
							]
						},
						"description": "Returns the statistics for the Logical Router Port. If query parameter\n\"transport_node_id=<transport-node-id>\" is given,  only the statistics\nfrom the given node for the logical router port will be returned.\nOtherwise the statistics from each node for the same logical router port\nwill be returned. The transport_node_id is mandatory if the router port\nis not uplink type.\nThe query parameter \"source=cached\" will be ignored and it will always return\nrealtime statistics of the logical router port.\n"
					},
					"response": []
				},
				{
					"name": "Get the ARP table (IPv4) or Neighbor Discovery table (IPv6) for the\nLogical Router Port of the given id\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-router-ports/:logical-router-port-id/arp-table?format=csv?source={{source}}&transport_node_id={{transport_node_id}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-router-ports",
								":logical-router-port-id",
								"arp-table"
							],
							"query": [
								{
									"key": "format",
									"value": "csv?source={{source}}"
								},
								{
									"key": "transport_node_id",
									"value": "{{transport_node_id}}"
								}
							],
							"variable": [
								{
									"key": "logical-router-port-id",
									"value": "{{logical-router-port-id}}"
								}
							]
						},
						"description": "Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) in CSV format\nfor the Logical Router Port of the given id, on a node if a query\nparameter \"transport_node_id=<transport-node-id>\" is given. The\ntransport_node_id parameter is mandatory if the router port is not uplink\ntype. Query parameter \"source=realtime\" is the only supported source.\n"
					},
					"response": []
				},
				{
					"name": "Read Logical Router Port",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-router-ports/:logical-router-port-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-router-ports",
								":logical-router-port-id"
							],
							"variable": [
								{
									"key": "logical-router-port-id",
									"value": "{{logical-router-port-id}}"
								}
							]
						},
						"description": "Returns information about the specified logical router port."
					},
					"response": []
				},
				{
					"name": "Update a Logical Router Port",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-router-ports/:logical-router-port-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-router-ports",
								":logical-router-port-id"
							],
							"variable": [
								{
									"key": "logical-router-port-id",
									"value": "{{logical-router-port-id}}"
								}
							]
						},
						"description": "Modifies the specified logical router port. Required parameters include the\nresource_type and logical_router_id. Modifiable parameters include the\nresource_type (LogicalRouterUpLinkPort, LogicalRouterDownLinkPort,\nLogicalRouterLinkPort, LogicalRouterLoopbackPort, LogicalRouterCentralizedServicePort),\nlogical_router_id (to reassign the port to a different router), and service_bindings.\n"
					},
					"response": []
				},
				{
					"name": "Delete a Logical Router Port",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/logical-router-ports/:logical-router-port-id?cascade_delete_linked_ports=false&force=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"logical-router-ports",
								":logical-router-port-id"
							],
							"query": [
								{
									"key": "cascade_delete_linked_ports",
									"value": "false"
								},
								{
									"key": "force",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "logical-router-port-id",
									"value": "{{logical-router-port-id}}"
								}
							]
						},
						"description": "Deletes the specified logical router port. You must delete logical router\nports before you can delete the associated logical router. To Delete Tier0\nrouter link port you must have to delete attached tier1 router link port,\notherwise pass \"force=true\" as query param to force delete the Tier0\nrouter link port.\n"
					},
					"response": []
				}
			],
			"description": "Folder for logical-router-ports"
		},
		{
			"name": "cluster?action=summarize_inventory_to_remote",
			"item": [
				{
					"name": "Request one-time inventory summary.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster?action=summarize_inventory_to_remote",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster"
							],
							"query": [
								{
									"key": "action",
									"value": "summarize_inventory_to_remote"
								}
							]
						},
						"description": "Request one-time inventory summary. The backup will be uploaded using the\nsame server configuration as for an automatic backup.\n"
					},
					"response": []
				}
			],
			"description": "Folder for cluster?action=summarize_inventory_to_remote"
		},
		{
			"name": "upgrade?action=execute_pre_upgrade_checks",
			"item": [
				{
					"name": "Execute pre-upgrade checks",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade?action=execute_pre_upgrade_checks",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade"
							],
							"query": [
								{
									"key": "action",
									"value": "execute_pre_upgrade_checks"
								}
							]
						},
						"description": "Run pre-defined checks to identify potential issues which can be\nencountered during an upgrade or can cause an upgrade to fail. The results\nof the checks are added to the respective upgrade units aggregate-info. The\nprogress and status of operation is part of upgrade status summary of\nindividual components.\nReturns HTTP status 500 with error code 30953 if execution of pre-upgrade\nchecks is already in progress.\n"
					},
					"response": []
				}
			],
			"description": "Folder for upgrade?action=execute_pre_upgrade_checks"
		},
		{
			"name": "cluster?action=backup_to_remote",
			"item": [
				{
					"name": "Request one-time backup",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster?action=backup_to_remote",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster"
							],
							"query": [
								{
									"key": "action",
									"value": "backup_to_remote"
								}
							]
						},
						"description": "Request one-time backup. The backup will be uploaded using the\nsame server configuration as for automatic backup.\n"
					},
					"response": []
				}
			],
			"description": "Folder for cluster?action=backup_to_remote"
		},
		{
			"name": "ns-service-groups",
			"item": [
				{
					"name": "List all NSServiceGroups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-service-groups?cursor={{cursor}}&default_service={{default_service}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-service-groups"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "default_service",
									"value": "{{default_service}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns paginated list of NSServiceGroups\n"
					},
					"response": []
				},
				{
					"name": "Create NSServiceGroup",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-service-groups",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-service-groups"
							]
						},
						"description": "Creates a new NSServiceGroup which can contain NSServices.\nA given NSServiceGroup can contain either only ether type of NSServices\nor only non-ether type of NSServices, i.e. an NSServiceGroup cannot\ncontain a mix of both ether and non-ether types of NSServices.\n"
					},
					"response": []
				},
				{
					"name": "Read NSServiceGroup",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-service-groups/:ns-service-group-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-service-groups",
								":ns-service-group-id"
							],
							"variable": [
								{
									"key": "ns-service-group-id",
									"value": "{{ns-service-group-id}}"
								}
							]
						},
						"description": "Returns information about the specified NSServiceGroup\n"
					},
					"response": []
				},
				{
					"name": "Update NSServiceGroup",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-service-groups/:ns-service-group-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-service-groups",
								":ns-service-group-id"
							],
							"variable": [
								{
									"key": "ns-service-group-id",
									"value": "{{ns-service-group-id}}"
								}
							]
						},
						"description": "Updates the specified NSService. Modifiable parameters include the description,\ndisplay_name and members.\n"
					},
					"response": []
				},
				{
					"name": "Delete NSServiceGroup",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-service-groups/:ns-service-group-id?force=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-service-groups",
								":ns-service-group-id"
							],
							"query": [
								{
									"key": "force",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "ns-service-group-id",
									"value": "{{ns-service-group-id}}"
								}
							]
						},
						"description": "Deletes the specified NSServiceGroup. By default, if the NSServiceGroup is\nconsumed in a Firewall rule, it won't get deleted. In such situations, pass\n\"force=true\" as query param to force delete the NSServiceGroup.\n"
					},
					"response": []
				}
			],
			"description": "Folder for ns-service-groups"
		},
		{
			"name": "service-configs",
			"item": [
				{
					"name": "Get Effective Profiles for an Entity",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/service-configs/effective-profiles?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&resource_id={{resource_id}}&resource_type={{resource_type}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"service-configs",
								"effective-profiles"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "resource_id",
									"value": "{{resource_id}}"
								},
								{
									"key": "resource_type",
									"value": "{{resource_type}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns the effective profiles applied to the specified Resource.\n"
					},
					"response": []
				},
				{
					"name": "List service configs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/service-configs?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&profile_type={{profile_type}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"service-configs"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "profile_type",
									"value": "{{profile_type}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "List of all service configs.\n"
					},
					"response": []
				},
				{
					"name": "Create service config",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/service-configs",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"service-configs"
							]
						},
						"description": "Creates a new service config that can group profiles and configs\n"
					},
					"response": []
				},
				{
					"name": "Read Service Config",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/service-configs/:config-set-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"service-configs",
								":config-set-id"
							],
							"variable": [
								{
									"key": "config-set-id",
									"value": "{{config-set-id}}"
								}
							]
						},
						"description": "Returns information about the specified Service Config.\n"
					},
					"response": []
				},
				{
					"name": "Update service config",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/service-configs/:config-set-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"service-configs",
								":config-set-id"
							],
							"variable": [
								{
									"key": "config-set-id",
									"value": "{{config-set-id}}"
								}
							]
						},
						"description": "Updates the specified ServiceConfig.\n"
					},
					"response": []
				},
				{
					"name": "Delete Service Config",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/service-configs/:config-set-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"service-configs",
								":config-set-id"
							],
							"variable": [
								{
									"key": "config-set-id",
									"value": "{{config-set-id}}"
								}
							]
						},
						"description": "Deletes the specified service config\n"
					},
					"response": []
				}
			],
			"description": "Folder for service-configs"
		},
		{
			"name": "pktcap",
			"item": [
				{
					"name": "Terminate the packet capture session by session id",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pktcap/session/:session-id?action=terminate",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pktcap",
								"session",
								":session-id"
							],
							"query": [
								{
									"key": "action",
									"value": "terminate"
								}
							],
							"variable": [
								{
									"key": "session-id",
									"value": "{{session-id}}"
								}
							]
						},
						"description": "Terminate the packet capture session by session id.\n"
					},
					"response": []
				},
				{
					"name": "Delete the packet capture session by session id.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pktcap/session/:session-id?action=delete",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pktcap",
								"session",
								":session-id"
							],
							"query": [
								{
									"key": "action",
									"value": "delete"
								}
							],
							"variable": [
								{
									"key": "session-id",
									"value": "{{session-id}}"
								}
							]
						},
						"description": "Before calling this method, terminate any running capture session.\n"
					},
					"response": []
				},
				{
					"name": "Get the information of all packet capture sessions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pktcap/sessions",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pktcap",
								"sessions"
							]
						},
						"description": "Get the information of all packet capture sessions.\n"
					},
					"response": []
				},
				{
					"name": "Get the status of packet capture session",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pktcap/session/:session-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pktcap",
								"session",
								":session-id"
							],
							"variable": [
								{
									"key": "session-id",
									"value": "{{session-id}}"
								}
							]
						},
						"description": "Get the packet capture status information by session id.\n"
					},
					"response": []
				},
				{
					"name": "Delete all the packet capture sessions",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pktcap/sessions?action=delete",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pktcap",
								"sessions"
							],
							"query": [
								{
									"key": "action",
									"value": "delete"
								}
							]
						},
						"description": "Delete all the packet capture sessions.\n"
					},
					"response": []
				},
				{
					"name": "Create an new packet capture session",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/pktcap/session",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"pktcap",
								"session"
							]
						},
						"description": "Create an new packet capture session on given node with specified options\n"
					},
					"response": []
				}
			],
			"description": "Folder for pktcap"
		},
		{
			"name": "ns-groups",
			"item": [
				{
					"name": "Get effective VIF members translated from the NSGroup",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-groups/:ns-group-id/effective-vif-members?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-groups",
								":ns-group-id",
								"effective-vif-members"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							],
							"variable": [
								{
									"key": "ns-group-id",
									"value": "{{ns-group-id}}"
								}
							]
						},
						"description": "Returns effective VIF members of the specified NSGroup.\n"
					},
					"response": []
				},
				{
					"name": "Get effective transport node members translated from the NSGroup",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-groups/:ns-group-id/effective-transport-node-members?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-groups",
								":ns-group-id",
								"effective-transport-node-members"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							],
							"variable": [
								{
									"key": "ns-group-id",
									"value": "{{ns-group-id}}"
								}
							]
						},
						"description": "Returns effective transport node members of the specified NSGroup.\n"
					},
					"response": []
				},
				{
					"name": "Get Effective IPAddress translated from the NSGroup",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-groups/:ns-group-id/effective-ip-address-members?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-groups",
								":ns-group-id",
								"effective-ip-address-members"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							],
							"variable": [
								{
									"key": "ns-group-id",
									"value": "{{ns-group-id}}"
								}
							]
						},
						"description": "Returns effective ip address members of the specified NSGroup.\n"
					},
					"response": []
				},
				{
					"name": "Get Effective switch members translated from the NSGroup",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-groups/:ns-group-id/effective-logical-switch-members?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-groups",
								":ns-group-id",
								"effective-logical-switch-members"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							],
							"variable": [
								{
									"key": "ns-group-id",
									"value": "{{ns-group-id}}"
								}
							]
						},
						"description": "Returns effective logical switch members of the specified NSGroup.\n"
					},
					"response": []
				},
				{
					"name": "Read NSGroup",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-groups/:ns-group-id?populate_references=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-groups",
								":ns-group-id"
							],
							"query": [
								{
									"key": "populate_references",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "ns-group-id",
									"value": "{{ns-group-id}}"
								}
							]
						},
						"description": "Returns information about the specified NSGroup.\n"
					},
					"response": []
				},
				{
					"name": "Update NSGroup",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-groups/:ns-group-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-groups",
								":ns-group-id"
							],
							"variable": [
								{
									"key": "ns-group-id",
									"value": "{{ns-group-id}}"
								}
							]
						},
						"description": "Updates the specified NSGroup. Modifiable parameters include the\ndescription, display_name and members.\n"
					},
					"response": []
				},
				{
					"name": "Add NSGroup expression",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-groups/:ns-group-id?action={{action}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-groups",
								":ns-group-id"
							],
							"query": [
								{
									"key": "action",
									"value": "{{action}}"
								}
							],
							"variable": [
								{
									"key": "ns-group-id",
									"value": "{{ns-group-id}}"
								}
							]
						},
						"description": "Add/remove the expressions passed in the request body to/from the NSGroup\n"
					},
					"response": []
				},
				{
					"name": "Delete NSGroup",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-groups/:ns-group-id?force=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-groups",
								":ns-group-id"
							],
							"query": [
								{
									"key": "force",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "ns-group-id",
									"value": "{{ns-group-id}}"
								}
							]
						},
						"description": "Deletes the specified NSGroup. By default, if the NSGroup is added to\nanother NSGroup, it won't be deleted. In such situations, pass\n\"force=true\" as query param to force delete the NSGroup.\n"
					},
					"response": []
				},
				{
					"name": "Get Effective Virtual Machine members of the specified NSGroup.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-groups/:ns-group-id/effective-virtual-machine-members?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-groups",
								":ns-group-id",
								"effective-virtual-machine-members"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							],
							"variable": [
								{
									"key": "ns-group-id",
									"value": "{{ns-group-id}}"
								}
							]
						},
						"description": "Returns effective virtual machine members of the specified NSGroup.\n"
					},
					"response": []
				},
				{
					"name": "Get Effective IPSets of the specified NSGroup.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-groups/:ns-group-id/effective-ipset-members?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-groups",
								":ns-group-id",
								"effective-ipset-members"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							],
							"variable": [
								{
									"key": "ns-group-id",
									"value": "{{ns-group-id}}"
								}
							]
						},
						"description": "Returns effective IPSets which are members of the specified NSGroup.\n"
					},
					"response": []
				},
				{
					"name": "Get services to which the given nsgroup belongs to\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-groups/:nsgroup-id/service-associations?cursor={{cursor}}&fetch_parentgroup_associations=false&included_fields={{included_fields}}&page_size=1000&service_type={{service_type}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-groups",
								":nsgroup-id",
								"service-associations"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "fetch_parentgroup_associations",
									"value": "false"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "service_type",
									"value": "{{service_type}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							],
							"variable": [
								{
									"key": "nsgroup-id",
									"value": "{{nsgroup-id}}"
								}
							]
						},
						"description": "Returns information about services that are associated with the given NSGroup.\nThe service name is passed by service_type parameter\n"
					},
					"response": []
				},
				{
					"name": "Get member types from NSGroup",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-groups/:ns-group-id/member-types?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-groups",
								":ns-group-id",
								"member-types"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							],
							"variable": [
								{
									"key": "ns-group-id",
									"value": "{{ns-group-id}}"
								}
							]
						},
						"description": "Returns member types for a specified NSGroup including child NSGroups.\nThis considers static members and members added via membership criteria only\n"
					},
					"response": []
				},
				{
					"name": "Get the list of all the virtual machines that are not a part of any existing NSGroup.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-groups/unassociated-virtual-machines?cursor={{cursor}}&display_name={{display_name}}&external_id={{external_id}}&host_id={{host_id}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-groups",
								"unassociated-virtual-machines"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "display_name",
									"value": "{{display_name}}"
								},
								{
									"key": "external_id",
									"value": "{{external_id}}"
								},
								{
									"key": "host_id",
									"value": "{{host_id}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Get the list of all the virtual machines that are not a part of any existing NSGroup.\n"
					},
					"response": []
				},
				{
					"name": "Get Effective Logical Ports translated from the NSgroup",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-groups/:ns-group-id/effective-logical-port-members?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-groups",
								":ns-group-id",
								"effective-logical-port-members"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							],
							"variable": [
								{
									"key": "ns-group-id",
									"value": "{{ns-group-id}}"
								}
							]
						},
						"description": "Returns effective logical port members of the specified NSGroup.\n"
					},
					"response": []
				},
				{
					"name": "Get Effective Directory Groups of the specified NSGroup.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-groups/:ns-group-id/effective-directory-group-members?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-groups",
								":ns-group-id",
								"effective-directory-group-members"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							],
							"variable": [
								{
									"key": "ns-group-id",
									"value": "{{ns-group-id}}"
								}
							]
						},
						"description": "Returns effective directory groups which are members of the specified NSGroup.\n"
					},
					"response": []
				},
				{
					"name": "List NSGroups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-groups?cursor={{cursor}}&included_fields={{included_fields}}&member_types={{member_types}}&page_size=1000&populate_references=false&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-groups"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "member_types",
									"value": "{{member_types}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "populate_references",
									"value": "false"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "List the NSGroups in a paginated format. The page size is restricted\nto 50 NSGroups so that the size of the response remains small even\nin the worst case.\nOptionally, specify valid member types as request parameter to filter NSGroups.\n"
					},
					"response": []
				},
				{
					"name": "Create NSGroup",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-groups",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-groups"
							]
						},
						"description": "Creates a new NSGroup that can group NSX resources - VIFs, Lports\nand LSwitches as well as the grouping objects - IPSet, MACSet and other\nNSGroups\n"
					},
					"response": []
				}
			],
			"description": "Folder for ns-groups"
		},
		{
			"name": "ipfix-collector-profiles",
			"item": [
				{
					"name": "Get an existing IPFIX collector profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ipfix-collector-profiles/:ipfix-collector-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ipfix-collector-profiles",
								":ipfix-collector-profile-id"
							],
							"variable": [
								{
									"key": "ipfix-collector-profile-id",
									"value": "{{ipfix-collector-profile-id}}"
								}
							]
						},
						"description": "Get an existing IPFIX collector profile by profile ID."
					},
					"response": []
				},
				{
					"name": "Update an existing IPFIX collector profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ipfix-collector-profiles/:ipfix-collector-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ipfix-collector-profiles",
								":ipfix-collector-profile-id"
							],
							"variable": [
								{
									"key": "ipfix-collector-profile-id",
									"value": "{{ipfix-collector-profile-id}}"
								}
							]
						},
						"description": "Update an existing IPFIX collector profile with profile ID and modified\nproperties.\n"
					},
					"response": []
				},
				{
					"name": "Delete an existing IPFIX collector profile",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ipfix-collector-profiles/:ipfix-collector-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ipfix-collector-profiles",
								":ipfix-collector-profile-id"
							],
							"variable": [
								{
									"key": "ipfix-collector-profile-id",
									"value": "{{ipfix-collector-profile-id}}"
								}
							]
						},
						"description": "Delete an existing IPFIX collector profile by ID."
					},
					"response": []
				},
				{
					"name": "List IPFIX Collector Profies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ipfix-collector-profiles?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&profile_types={{profile_types}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ipfix-collector-profiles"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "profile_types",
									"value": "{{profile_types}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Query IPFIX collector profiles with list parameters. List result can be\nfiltered by profile type defined by IpfixCollectorUpmProfileType.\n"
					},
					"response": []
				},
				{
					"name": "Create a new IPFIX collector profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ipfix-collector-profiles",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ipfix-collector-profiles"
							]
						},
						"description": "Create a new IPFIX collector profile with essential properties."
					},
					"response": []
				}
			],
			"description": "Folder for ipfix-collector-profiles"
		},
		{
			"name": "configs",
			"item": [
				{
					"name": "Return inventory configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/configs/inventory",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"configs",
								"inventory"
							]
						},
						"description": "Supports retrieving following configuration of inventory module\n1. Soft limit on number of compute managers that can be registered.\n"
					},
					"response": []
				},
				{
					"name": "Read NSX Management nodes global configuration.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/configs/management",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"configs",
								"management"
							]
						},
						"description": "Returns the NSX Management nodes global configuration.\n"
					},
					"response": []
				},
				{
					"name": "Update NSX Management nodes global configuration",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/configs/management",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"configs",
								"management"
							]
						},
						"description": "Modifies the NSX Management nodes global configuration."
					},
					"response": []
				}
			],
			"description": "Folder for configs"
		},
		{
			"name": "license",
			"item": [
				{
					"name": "Deprecated. Return the Enterprise License\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/license",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"license"
							]
						},
						"description": "Deprecated. Use the GET /licenses API instead.\n"
					},
					"response": []
				},
				{
					"name": "Deprecated. Assign an Updated Enterprise License Key\n",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/license",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"license"
							]
						},
						"description": "Deprecated. Use the POST /licenses API instead\n"
					},
					"response": []
				}
			],
			"description": "Folder for license"
		},
		{
			"name": "bridge-clusters",
			"item": [
				{
					"name": "List All Bridge Clusters",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/bridge-clusters?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"bridge-clusters"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns information about all configured bridge clusters\n"
					},
					"response": []
				},
				{
					"name": "Create a Bridge Cluster",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/bridge-clusters",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"bridge-clusters"
							]
						},
						"description": "Creates a bridge cluster. It is collection of transport nodes\nthat will do the bridging for overlay network to vlan networks.\nBridge cluster may have one or more transport nodes\n"
					},
					"response": []
				},
				{
					"name": "Returns status of a specified Bridge Cluster",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/bridge-clusters/:cluster-id/status?source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"bridge-clusters",
								":cluster-id",
								"status"
							],
							"query": [
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "cluster-id",
									"value": "{{cluster-id}}"
								}
							]
						},
						"description": "Get the status for the Bridge Cluster of the given cluster id"
					},
					"response": []
				},
				{
					"name": "Get Information about a bridge cluster",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/bridge-clusters/:bridgecluster-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"bridge-clusters",
								":bridgecluster-id"
							],
							"variable": [
								{
									"key": "bridgecluster-id",
									"value": "{{bridgecluster-id}}"
								}
							]
						},
						"description": "Returns information about a specified bridge cluster."
					},
					"response": []
				},
				{
					"name": "Update a Bridge Cluster",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/bridge-clusters/:bridgecluster-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"bridge-clusters",
								":bridgecluster-id"
							],
							"variable": [
								{
									"key": "bridgecluster-id",
									"value": "{{bridgecluster-id}}"
								}
							]
						},
						"description": "Modifies a existing bridge cluster. One of more transport nodes\ncan be added or removed from the bridge cluster using this API.\n"
					},
					"response": []
				},
				{
					"name": "Delete a Bridge Cluster",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/bridge-clusters/:bridgecluster-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"bridge-clusters",
								":bridgecluster-id"
							],
							"variable": [
								{
									"key": "bridgecluster-id",
									"value": "{{bridgecluster-id}}"
								}
							]
						},
						"description": "Removes the specified Bridge Cluster."
					},
					"response": []
				}
			],
			"description": "Folder for bridge-clusters"
		},
		{
			"name": "realization-state-barrier",
			"item": [
				{
					"name": "Gets the current barrier number",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/realization-state-barrier/current",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"realization-state-barrier",
								"current"
							]
						},
						"description": "Returns the current global realization barrier number for NSX.\nThis method has been deprecated. To track realization state, use\nX-NSX-REQUESTID request header instead.\n"
					},
					"response": []
				},
				{
					"name": "Increments the barrier count by 1",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/realization-state-barrier/current?action=increment",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"realization-state-barrier",
								"current"
							],
							"query": [
								{
									"key": "action",
									"value": "increment"
								}
							]
						},
						"description": "Increment the current barrier number by 1 for NSX.\nThis method has been deprecated. To track realization state, use\nX-NSX-REQUESTID request header instead.\n"
					},
					"response": []
				},
				{
					"name": "Gets the realization state barrier configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/realization-state-barrier/config",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"realization-state-barrier",
								"config"
							]
						},
						"description": "Returns the current barrier configuration\n"
					},
					"response": []
				},
				{
					"name": "Updates the barrier configuration",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/realization-state-barrier/config",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"realization-state-barrier",
								"config"
							]
						},
						"description": "Updates the barrier configuration having interval set in milliseconds\nThe new interval that automatically increments the global realization number\n"
					},
					"response": []
				}
			],
			"description": "Folder for realization-state-barrier"
		},
		{
			"name": "services",
			"item": [
				{
					"name": "List all Logical Router Services",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/services?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&resource_type={{resource_type}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"services"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "resource_type",
									"value": "{{resource_type}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns information about all configured logical router services that can be\napplied to one or more logical router ports. You must create a\nservice-profile before you can create a service. Currently, only\nDhcpRelayService is supported.\n"
					},
					"response": []
				},
				{
					"name": "Create a Logical Router Service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/services",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"services"
							]
						},
						"description": "Creates a service that can be applied to one or more logical router ports.\nFor some service types, you must create a service-profile before you can\ncreate a service.\n"
					},
					"response": []
				},
				{
					"name": "Read a Logical Router Service",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/services/:service-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"services",
								":service-id"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								}
							]
						},
						"description": "Returns information about the specified service."
					},
					"response": []
				},
				{
					"name": "Update a Logical Router Service",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/services/:service-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"services",
								":service-id"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								}
							]
						},
						"description": "Modifies the specified logical router service. The resource_type parameter\nis required. The modifiable parameters depend on the service type.\n"
					},
					"response": []
				},
				{
					"name": "Delete a Logical Router Service",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/services/:service-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"services",
								":service-id"
							],
							"variable": [
								{
									"key": "service-id",
									"value": "{{service-id}}"
								}
							]
						},
						"description": "Deletes the specified logical router service."
					},
					"response": []
				}
			],
			"description": "Folder for services"
		},
		{
			"name": "associations",
			"item": [
				{
					"name": "Get ResourceReference objects to which the given resource belongs to\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/associations?associated_resource_type={{associated_resource_type}}&cursor={{cursor}}&fetch_ancestors=false&included_fields={{included_fields}}&page_size=1000&resource_id={{resource_id}}&resource_type={{resource_type}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"associations"
							],
							"query": [
								{
									"key": "associated_resource_type",
									"value": "{{associated_resource_type}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "fetch_ancestors",
									"value": "false"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "resource_id",
									"value": "{{resource_id}}"
								},
								{
									"key": "resource_type",
									"value": "{{resource_type}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns information about resources that are associated with the given\nresource. Id and type of the resource for which associated resources are\nto be fetched are to be specified as query parameter in the URI. Resource\ntype of the associated resources must be specified as query\nparameter.\n"
					},
					"response": []
				}
			],
			"description": "Folder for associations"
		},
		{
			"name": "bridge-endpoint-profiles",
			"item": [
				{
					"name": "Get Information about a bridge endpoint Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/bridge-endpoint-profiles/:bridgeendpointprofile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"bridge-endpoint-profiles",
								":bridgeendpointprofile-id"
							],
							"variable": [
								{
									"key": "bridgeendpointprofile-id",
									"value": "{{bridgeendpointprofile-id}}"
								}
							]
						},
						"description": "Returns information about a specified bridge endpoint profile."
					},
					"response": []
				},
				{
					"name": "Update a Bridge Endpoint Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/bridge-endpoint-profiles/:bridgeendpointprofile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"bridge-endpoint-profiles",
								":bridgeendpointprofile-id"
							],
							"variable": [
								{
									"key": "bridgeendpointprofile-id",
									"value": "{{bridgeendpointprofile-id}}"
								}
							]
						},
						"description": "Modifies a existing bridge endpoint profile.\n"
					},
					"response": []
				},
				{
					"name": "Delete a Bridge Endpoint Profile",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/bridge-endpoint-profiles/:bridgeendpointprofile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"bridge-endpoint-profiles",
								":bridgeendpointprofile-id"
							],
							"variable": [
								{
									"key": "bridgeendpointprofile-id",
									"value": "{{bridgeendpointprofile-id}}"
								}
							]
						},
						"description": "Deletes the specified Bridge Endpoint Profile."
					},
					"response": []
				},
				{
					"name": "List All Bridge Endpoint Profiles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/bridge-endpoint-profiles?cursor={{cursor}}&edge_cluster_id={{edge_cluster_id}}&failover_mode={{failover_mode}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"bridge-endpoint-profiles"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "edge_cluster_id",
									"value": "{{edge_cluster_id}}"
								},
								{
									"key": "failover_mode",
									"value": "{{failover_mode}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns information about all configured bridge endoint profiles\n"
					},
					"response": []
				},
				{
					"name": "Create a Bridge Endpoint Profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/bridge-endpoint-profiles",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"bridge-endpoint-profiles"
							]
						},
						"description": "Creates a Bridge Endpoint Profile. Profile contains edge cluster id,\nindexes of the member nodes, fialover mode and high availability mode\nfor a Bridge EndPoint\n"
					},
					"response": []
				}
			],
			"description": "Folder for bridge-endpoint-profiles"
		},
		{
			"name": "network-migration-specs",
			"item": [
				{
					"name": "Get network migration specification template by id.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/network-migration-specs/:template-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"network-migration-specs",
								":template-id"
							],
							"variable": [
								{
									"key": "template-id",
									"value": "{{template-id}}"
								}
							]
						},
						"description": "Network migration specification once created and can be used as a template to indicate associated component which networks should be migrated and where. Currently migration template can be associated with compute collections which are managed by vCenter host profiles, to trigger automatic migration of networks for Stateless ESX hosts. Currently we only support creation of HostProfileNetworkMigrationSpec type of specification."
					},
					"response": []
				},
				{
					"name": "Update a template of network migration specification.",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/network-migration-specs/:template-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"network-migration-specs",
								":template-id"
							],
							"variable": [
								{
									"key": "template-id",
									"value": "{{template-id}}"
								}
							]
						},
						"description": "Network migration specification once created and can be used as a template to indicate associated component which networks should be migrated and where. Currently migration template can be associated with compute collections which are managed by vCenter host profiles, to trigger automatic migration of networks for Stateless ESX hosts. Currently we only support creation of HostProfileNetworkMigrationSpec type of specification. For a HostProfileNetworkMigrationSpec which is already associated with a compute collection, updating it would mean next time the system needs to trigger migration for hosts managed by compute collection, it will use the updated migration specification."
					},
					"response": []
				},
				{
					"name": "Delete a network migration specification template",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/network-migration-specs/:template-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"network-migration-specs",
								":template-id"
							],
							"variable": [
								{
									"key": "template-id",
									"value": "{{template-id}}"
								}
							]
						},
						"description": "Delete the specified network migration specification template. Delete will fail if this is a HostProfileNetworkMigrationSpec and is associated with certain compute collection."
					},
					"response": []
				},
				{
					"name": "List all network migration specification templates.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/network-migration-specs?cursor={{cursor}}&include_system_owned=false&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&type={{type}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"network-migration-specs"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "include_system_owned",
									"value": "false"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "type",
									"value": "{{type}}"
								}
							]
						},
						"description": "Network migration specification once created and can be used as a template to indicate associated component which networks should be migrated and where. Currently migration template can be associated with compute collections which are managed by vCenter host profiles, to trigger automatic migration of networks for Stateless ESX hosts. Currently we only support creation of HostProfileNetworkMigrationSpec type of specification."
					},
					"response": []
				},
				{
					"name": "Create a template of network migration specification.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/network-migration-specs",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"network-migration-specs"
							]
						},
						"description": "Network migration specification once created and can be used as a template to indicate associated component which networks should be migrated and where. Currently migration template can be associated with compute collections which are managed by vCenter host profiles, to trigger automatic migration of networks for Stateless ESX hosts. Currently we only support creation of HostProfileNetworkMigrationSpec type of specification."
					},
					"response": []
				}
			],
			"description": "Folder for network-migration-specs"
		},
		{
			"name": "error-resolver",
			"item": [
				{
					"name": "Fetches metadata about the given error_id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/error-resolver/:error_id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"error-resolver",
								":error_id"
							],
							"variable": [
								{
									"key": "error_id",
									"value": "{{error_id}}"
								}
							]
						},
						"description": "Returns some metadata about the given error_id. This includes\ninformation of whether there is a resolver present for the\ngiven error_id and its associated user input data\n"
					},
					"response": []
				},
				{
					"name": "Fetches a list of metadata for all the registered error resolvers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/error-resolver",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"error-resolver"
							]
						},
						"description": "Returns a list of metadata for all the error resolvers registered.\n"
					},
					"response": []
				}
			],
			"description": "Folder for error-resolver"
		},
		{
			"name": "global-configs",
			"item": [
				{
					"name": "Resyncs global configurations of a config-type",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/global-configs/:config-type?action=resync_config",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"global-configs",
								":config-type"
							],
							"query": [
								{
									"key": "action",
									"value": "resync_config"
								}
							],
							"variable": [
								{
									"key": "config-type",
									"value": "{{config-type}}"
								}
							]
						},
						"description": "It is similar to update global configurations but this request would trigger\nupdate even if the configs are unmodified. However, the realization of the\nnew configurations is config-type specific. Refer to config-type\nspecific documentation for details about the configuration push state.\n"
					},
					"response": []
				},
				{
					"name": "Get global configs for a config type",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/global-configs/:config-type",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"global-configs",
								":config-type"
							],
							"variable": [
								{
									"key": "config-type",
									"value": "{{config-type}}"
								}
							]
						},
						"description": "Returns global configurations that belong to the config type\n"
					},
					"response": []
				},
				{
					"name": "Update global configurations of a config type",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/global-configs/:config-type",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"global-configs",
								":config-type"
							],
							"variable": [
								{
									"key": "config-type",
									"value": "{{config-type}}"
								}
							]
						},
						"description": "Updates global configurations that belong to a config type. The request must\ninclude the updated values along with the unmodified values. The values that\nare updated(different) would trigger update to config-type specific state.\nHowever, the realization of the new configurations is config-type specific.\nRefer to config-type specific documentation for details about the config-\nuration push state.\n"
					},
					"response": []
				},
				{
					"name": "List global configurations of a NSX domain",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/global-configs",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"global-configs"
							]
						},
						"description": "Returns global configurations of a NSX domain grouped by the config types.\nThese global configurations are valid across NSX domain for their respective\ntypes unless they are overridden by a more granular configurations.\n"
					},
					"response": []
				}
			],
			"description": "Folder for global-configs"
		},
		{
			"name": "md-proxies",
			"item": [
				{
					"name": "Get a metadata proxy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/md-proxies/:proxy-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"md-proxies",
								":proxy-id"
							],
							"variable": [
								{
									"key": "proxy-id",
									"value": "{{proxy-id}}"
								}
							]
						},
						"description": "Get a metadata proxy"
					},
					"response": []
				},
				{
					"name": "Update a metadata proxy",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/md-proxies/:proxy-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"md-proxies",
								":proxy-id"
							],
							"variable": [
								{
									"key": "proxy-id",
									"value": "{{proxy-id}}"
								}
							]
						},
						"description": "Update a metadata proxy"
					},
					"response": []
				},
				{
					"name": "Delete a metadata proxy",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/md-proxies/:proxy-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"md-proxies",
								":proxy-id"
							],
							"variable": [
								{
									"key": "proxy-id",
									"value": "{{proxy-id}}"
								}
							]
						},
						"description": "Delete a metadata proxy"
					},
					"response": []
				},
				{
					"name": "Get a paginated list of metadata proxies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/md-proxies?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"md-proxies"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Get a paginated list of metadata proxies"
					},
					"response": []
				},
				{
					"name": "Create a metadata proxy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/md-proxies",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"md-proxies"
							]
						},
						"description": "Create a metadata proxy"
					},
					"response": []
				},
				{
					"name": "Get Metadata Proxy statistics with given proxy id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/md-proxies/:proxy-id/statistics?logical_switch_id={{logical_switch_id}}&source={{source}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"md-proxies",
								":proxy-id",
								"statistics"
							],
							"query": [
								{
									"key": "logical_switch_id",
									"value": "{{logical_switch_id}}"
								},
								{
									"key": "source",
									"value": "{{source}}"
								}
							],
							"variable": [
								{
									"key": "proxy-id",
									"value": "{{proxy-id}}"
								}
							]
						},
						"description": "Returns the statistics of the given metatada proxy. If no logical switch\nis provided, all staticstics of all the logical switches the proxy was\nattached will be returned.\n"
					},
					"response": []
				},
				{
					"name": "Get Metadata Proxy status with given proxy id and attached logical switch.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/md-proxies/:proxy-id/:logical-switch-id/status",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"md-proxies",
								":proxy-id",
								":logical-switch-id",
								"status"
							],
							"variable": [
								{
									"key": "proxy-id",
									"value": "{{proxy-id}}"
								},
								{
									"key": "logical-switch-id",
									"value": "{{logical-switch-id}}"
								}
							]
						},
						"description": "Returns the status of the given metadata proxy and attached logical switch.\n"
					},
					"response": []
				}
			],
			"description": "Folder for md-proxies"
		},
		{
			"name": "capacity",
			"item": [
				{
					"name": "Returns warning threshold(s) set for NSX Objects.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/capacity/threshold",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"capacity",
								"threshold"
							]
						},
						"description": "Returns warning threshold(s) set for NSX Objects."
					},
					"response": []
				},
				{
					"name": "Updates the warning threshold(s) for NSX Objects.",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/capacity/threshold",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"capacity",
								"threshold"
							]
						},
						"description": "Updates the warning threshold(s) for NSX Objects specified, and returns\nnew threshold(s).\n"
					},
					"response": []
				},
				{
					"name": "Returns capacity usage data for NSX objects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/capacity/usage?cursor={{cursor}}&force=false&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"capacity",
								"usage"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "force",
									"value": "false"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns capacity usage data for NSX objects"
					},
					"response": []
				}
			],
			"description": "Folder for capacity"
		},
		{
			"name": "service-profiles",
			"item": [
				{
					"name": "List All Service Profiles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/service-profiles?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&resource_type={{resource_type}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"service-profiles"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "resource_type",
									"value": "{{resource_type}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns information about all service profiles. A service profile is a\nconfiguration that you can use to create a service, which is then applied\nto one or more logical router ports. Currently, only the DhcpRelayProfile\nis supported.\n"
					},
					"response": []
				},
				{
					"name": "Create a Service Profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/service-profiles",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"service-profiles"
							]
						},
						"description": "Creates a service profile, which can then be used to create a service.\nServices are then applied to one or more logical router ports.\n"
					},
					"response": []
				},
				{
					"name": "Read a Service Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/service-profiles/:service-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"service-profiles",
								":service-profile-id"
							],
							"variable": [
								{
									"key": "service-profile-id",
									"value": "{{service-profile-id}}"
								}
							]
						},
						"description": "Returns information about the specified service profile."
					},
					"response": []
				},
				{
					"name": "Update a Service Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/service-profiles/:service-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"service-profiles",
								":service-profile-id"
							],
							"variable": [
								{
									"key": "service-profile-id",
									"value": "{{service-profile-id}}"
								}
							]
						},
						"description": "Modifies the specified service profile. The PUT request must include the\nresource_type parameters. Modifiable parameters include description and\ndisplay_name. Other parameters might be modifiable, depending on the\nspecified service type.\n"
					},
					"response": []
				},
				{
					"name": "Delete a Service Profile",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/service-profiles/:service-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"service-profiles",
								":service-profile-id"
							],
							"variable": [
								{
									"key": "service-profile-id",
									"value": "{{service-profile-id}}"
								}
							]
						},
						"description": "Deletes the specified service profile."
					},
					"response": []
				}
			],
			"description": "Folder for service-profiles"
		},
		{
			"name": "mirror-sessions",
			"item": [
				{
					"name": "List all mirror sessions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/mirror-sessions?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"mirror-sessions"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "List all mirror sessions"
					},
					"response": []
				},
				{
					"name": "Create a mirror session",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/mirror-sessions",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"mirror-sessions"
							]
						},
						"description": "Create a mirror session"
					},
					"response": []
				},
				{
					"name": "Get the mirror session",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/mirror-sessions/:mirror-session-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"mirror-sessions",
								":mirror-session-id"
							],
							"variable": [
								{
									"key": "mirror-session-id",
									"value": "{{mirror-session-id}}"
								}
							]
						},
						"description": "Get the mirror session"
					},
					"response": []
				},
				{
					"name": "Update the mirror session",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/mirror-sessions/:mirror-session-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"mirror-sessions",
								":mirror-session-id"
							],
							"variable": [
								{
									"key": "mirror-session-id",
									"value": "{{mirror-session-id}}"
								}
							]
						},
						"description": "Update the mirror session"
					},
					"response": []
				},
				{
					"name": "Delete the mirror session",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/mirror-sessions/:mirror-session-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"mirror-sessions",
								":mirror-session-id"
							],
							"variable": [
								{
									"key": "mirror-session-id",
									"value": "{{mirror-session-id}}"
								}
							]
						},
						"description": "Delete the mirror session"
					},
					"response": []
				},
				{
					"name": "Verify whether the mirror session is still valid",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/mirror-sessions/:mirror-session-id?action=verify",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"mirror-sessions",
								":mirror-session-id"
							],
							"query": [
								{
									"key": "action",
									"value": "verify"
								}
							],
							"variable": [
								{
									"key": "mirror-session-id",
									"value": "{{mirror-session-id}}"
								}
							]
						},
						"description": "Verify whether all participants are on the same transport node"
					},
					"response": []
				}
			],
			"description": "Folder for mirror-sessions"
		},
		{
			"name": "ipfix-profiles",
			"item": [
				{
					"name": "List IPFIX Profies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ipfix-profiles?applied_to_entity_id={{applied_to_entity_id}}&applied_to_entity_type={{applied_to_entity_type}}&cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&profile_types={{profile_types}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ipfix-profiles"
							],
							"query": [
								{
									"key": "applied_to_entity_id",
									"value": "{{applied_to_entity_id}}"
								},
								{
									"key": "applied_to_entity_type",
									"value": "{{applied_to_entity_type}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "profile_types",
									"value": "{{profile_types}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Query IPFIX profiles with list parameters. List result can be filtered by\nprofile type defined by IpfixUpmProfileType.\n"
					},
					"response": []
				},
				{
					"name": "Create a new IPFIX profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ipfix-profiles",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ipfix-profiles"
							]
						},
						"description": "Create a new IPFIX profile with essential properties."
					},
					"response": []
				},
				{
					"name": "Get an existing IPFIX profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ipfix-profiles/:ipfix-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ipfix-profiles",
								":ipfix-profile-id"
							],
							"variable": [
								{
									"key": "ipfix-profile-id",
									"value": "{{ipfix-profile-id}}"
								}
							]
						},
						"description": "Get an existing IPFIX profile by profile ID."
					},
					"response": []
				},
				{
					"name": "Update an existing IPFIX profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ipfix-profiles/:ipfix-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ipfix-profiles",
								":ipfix-profile-id"
							],
							"variable": [
								{
									"key": "ipfix-profile-id",
									"value": "{{ipfix-profile-id}}"
								}
							]
						},
						"description": "Update an existing IPFIX profile with profile ID and modified properties.\n"
					},
					"response": []
				},
				{
					"name": "Delete an existing IPFIX profile",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ipfix-profiles/:ipfix-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ipfix-profiles",
								":ipfix-profile-id"
							],
							"variable": [
								{
									"key": "ipfix-profile-id",
									"value": "{{ipfix-profile-id}}"
								}
							]
						},
						"description": "Delete an existing IPFIX profile by ID."
					},
					"response": []
				}
			],
			"description": "Folder for ipfix-profiles"
		},
		{
			"name": "ns-profiles",
			"item": [
				{
					"name": "List NSProfile supported attribute types",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-profiles/attribute-types",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-profiles",
								"attribute-types"
							]
						},
						"description": "Returns supported attribute type strings for NSProfile.\n"
					},
					"response": []
				},
				{
					"name": "List NSProfiles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-profiles?attribute_type={{attribute_type}}&cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-profiles"
							],
							"query": [
								{
									"key": "attribute_type",
									"value": "{{attribute_type}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "List the NSProfiles created in a paginated format.The page size is restricted\nto 50 NSProfiles, so that the size of the response remains small even\nwhen there are high number of NSProfiles with multiple attributes and\nmultiple attribute values for each attribute.\n"
					},
					"response": []
				},
				{
					"name": "Create NSProfile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-profiles",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-profiles"
							]
						},
						"description": "Creates a new NSProfile which allows users to encapsulate attribute and\nsub-attributes of network services.\nRules for using attributes and sub-attributes in single NSProfile\n1. One type of attribute can't have multiple occurrences. ( Example -\n Attribute type APP_ID can be used only once per NSProfile.)\n2. Values for an attribute are mentioned as array of strings.\n ( Example - For type APP_ID , values can be mentioned as [\"SSL\",\"FTP\"].)\n3. If sub-attribtes are mentioned for an attribute, then only single\n value is allowed for that attribute.\n4. To get a list of supported\n attributes and sub-attributes fire the following REST API\n GET https://&lt;nsx-mgr&gt;/api/v1/ns-profiles/attributes\n"
					},
					"response": []
				},
				{
					"name": "Read NSProfile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-profiles/:ns-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-profiles",
								":ns-profile-id"
							],
							"variable": [
								{
									"key": "ns-profile-id",
									"value": "{{ns-profile-id}}"
								}
							]
						},
						"description": "Returns information about the specified NSProfile.\n"
					},
					"response": []
				},
				{
					"name": "Update NSProfile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-profiles/:ns-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-profiles",
								":ns-profile-id"
							],
							"variable": [
								{
									"key": "ns-profile-id",
									"value": "{{ns-profile-id}}"
								}
							]
						},
						"description": "Updates the specified NSProfile.\nRules for using attributes and sub-attributes in single NSProfile\n1. One type of attribute can't have multiple occurrences. ( Example -\n Attribute type APP_ID can be used only once per NSProfile.)\n2. Values for an attribute are mentioned as array of strings.\n ( Example - For type APP_ID , values can be mentioned as [\"SSL\",\"FTP\"].)\n3. If sub-attribtes are mentioned for an attribute, then only single\n value is allowed for that attribute.\n4. To get a list of supported\n attributes and sub-attributes fire the following REST API\n GET https://&lt;nsx-mgr&gt;/api/v1/ns-profiles/attributes\n"
					},
					"response": []
				},
				{
					"name": "Delete NSProfile",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-profiles/:ns-profile-id?force=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-profiles",
								":ns-profile-id"
							],
							"query": [
								{
									"key": "force",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "ns-profile-id",
									"value": "{{ns-profile-id}}"
								}
							]
						},
						"description": "Deletes the specified NSProfile. By default, if the NSProfile is\nconsumed in a Firewall rule, it won't get deleted. In such\nsituations, pass \"force=true\" as query param to force delete\nthe NSProfile.\n"
					},
					"response": []
				},
				{
					"name": "List NSProfile supported attribute and sub-attributes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/ns-profiles/attributes?attribute_type={{attribute_type}}&cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"ns-profiles",
								"attributes"
							],
							"query": [
								{
									"key": "attribute_type",
									"value": "{{attribute_type}}"
								},
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns supported attribute and sub-attributes for specified\nattribute type with their supported values, if provided in query/request\nparameter, else will fetch all supported attribute and sub-attributes for\nall supported attribute types.\n"
					},
					"response": []
				}
			],
			"description": "Folder for ns-profiles"
		},
		{
			"name": "tasks",
			"item": [
				{
					"name": "Get information about the specified task",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/tasks/:task-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								":task-id"
							],
							"variable": [
								{
									"key": "task-id",
									"value": "{{task-id}}"
								}
							]
						},
						"description": "Get information about the specified task"
					},
					"response": []
				},
				{
					"name": "Get information about all tasks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/tasks?cursor={{cursor}}&included_fields={{included_fields}}&page_size=1000&request_uri={{request_uri}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}&status={{status}}&user={{user}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"tasks"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "request_uri",
									"value": "{{request_uri}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "status",
									"value": "{{status}}"
								},
								{
									"key": "user",
									"value": "{{user}}"
								}
							]
						},
						"description": "Get information about all tasks"
					},
					"response": []
				},
				{
					"name": "Get the response of a task",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/tasks/:task-id/response",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								":task-id",
								"response"
							],
							"variable": [
								{
									"key": "task-id",
									"value": "{{task-id}}"
								}
							]
						},
						"description": "Get the response of a task"
					},
					"response": []
				}
			],
			"description": "Folder for tasks"
		},
		{
			"name": "batch",
			"item": [
				{
					"name": "Register a Collection of API Calls at a Single End Point",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/batch?atomic=false",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"batch"
							],
							"query": [
								{
									"key": "atomic",
									"value": "false"
								}
							]
						},
						"description": "Enables you to make multiple API requests using a single request. The batch\nAPI takes in an array of logical HTTP requests represented as JSON arrays.\nEach request has a method (GET, PUT, POST, or DELETE), a relative_url (the\nportion of the URL after https://&lt;nsx-mgr&gt;/api/), optional headers\narray (corresponding to HTTP headers) and an optional body (for POST and PUT\nrequests). The batch API returns an array of logical HTTP responses\nrepresented as JSON arrays. Each response has a status code, an optional\nheaders array and an optional body (which is a JSON-encoded string).\n"
					},
					"response": []
				}
			],
			"description": "Folder for batch"
		},
		{
			"name": "licenses?action=delete",
			"item": [
				{
					"name": "Remove a license",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/licenses?action=delete",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"licenses"
							],
							"query": [
								{
									"key": "action",
									"value": "delete"
								}
							]
						},
						"description": "This will delete the license key identified in the request body\nby \"license_key\" and its properties from the system.\nAttempting to delete the last license key will result in an error.\n"
					},
					"response": []
				}
			],
			"description": "Folder for licenses?action=delete"
		},
		{
			"name": "cluster-profiles",
			"item": [
				{
					"name": "List Cluster Profiles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster-profiles?cursor={{cursor}}&include_system_owned=true&included_fields={{included_fields}}&page_size=1000&resource_type={{resource_type}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster-profiles"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "include_system_owned",
									"value": "true"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "resource_type",
									"value": "{{resource_type}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns paginated list of cluster profiles\nCluster profiles define policies for edge cluster and bridge cluster.\n"
					},
					"response": []
				},
				{
					"name": "Create a Cluster Profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster-profiles",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster-profiles"
							]
						},
						"description": "Create a cluster profile. The resource_type is required.\n"
					},
					"response": []
				},
				{
					"name": "Get cluster profile by Id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster-profiles/:cluster-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster-profiles",
								":cluster-profile-id"
							],
							"variable": [
								{
									"key": "cluster-profile-id",
									"value": "{{cluster-profile-id}}"
								}
							]
						},
						"description": "Returns information about a specified cluster profile."
					},
					"response": []
				},
				{
					"name": "Update a cluster profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster-profiles/:cluster-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster-profiles",
								":cluster-profile-id"
							],
							"variable": [
								{
									"key": "cluster-profile-id",
									"value": "{{cluster-profile-id}}"
								}
							]
						},
						"description": "Modifie a specified cluster profile. The body of the PUT request must\ninclude the resource_type.\n"
					},
					"response": []
				},
				{
					"name": "Delete a cluster profile",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/cluster-profiles/:cluster-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"cluster-profiles",
								":cluster-profile-id"
							],
							"variable": [
								{
									"key": "cluster-profile-id",
									"value": "{{cluster-profile-id}}"
								}
							]
						},
						"description": "Delete a specified cluster profile."
					},
					"response": []
				}
			],
			"description": "Folder for cluster-profiles"
		},
		{
			"name": "node?action=shutdown",
			"item": [
				{
					"name": "Restart or shutdown node",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/node?action=shutdown",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"node"
							],
							"query": [
								{
									"key": "action",
									"value": "shutdown"
								}
							]
						},
						"description": "Restarts or shuts down the NSX Manager appliance."
					},
					"response": []
				}
			],
			"description": "Folder for node?action=shutdown"
		},
		{
			"name": "error-resolver?action=resolve_error",
			"item": [
				{
					"name": "Resolves the error",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/error-resolver?action=resolve_error",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"error-resolver"
							],
							"query": [
								{
									"key": "action",
									"value": "resolve_error"
								}
							]
						},
						"description": "Invokes the corresponding error resolver for the\ngiven error(s) present in the payload\n"
					},
					"response": []
				}
			],
			"description": "Folder for error-resolver?action=resolve_error"
		},
		{
			"name": "upgrade?action=upgrade_uc",
			"item": [
				{
					"name": "Upgrade the upgrade coordinator.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/upgrade?action=upgrade_uc",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"upgrade"
							],
							"query": [
								{
									"key": "action",
									"value": "upgrade_uc"
								}
							]
						},
						"description": "Upgrade the upgrade coordinator module itself. This call is invoked\nafter user uploads an upgrade bundle. Once this call is invoked,\nupgrade coordinator stops and gets restarted and target version\nupgrade coordinator module comes up after restart.\n"
					},
					"response": []
				}
			],
			"description": "Folder for upgrade?action=upgrade_uc"
		},
		{
			"name": "transportzone-profiles",
			"item": [
				{
					"name": "List transport zone profiles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transportzone-profiles?cursor={{cursor}}&include_system_owned=false&included_fields={{included_fields}}&page_size=1000&resource_type={{resource_type}}&sort_ascending={{sort_ascending}}&sort_by={{sort_by}}",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transportzone-profiles"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor}}"
								},
								{
									"key": "include_system_owned",
									"value": "false"
								},
								{
									"key": "included_fields",
									"value": "{{included_fields}}"
								},
								{
									"key": "page_size",
									"value": "1000"
								},
								{
									"key": "resource_type",
									"value": "{{resource_type}}"
								},
								{
									"key": "sort_ascending",
									"value": "{{sort_ascending}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								}
							]
						},
						"description": "Returns information about the configured transport zone profiles. Transport zone\nprofiles define networking policies for transport zones and transport zone endpoints.\n"
					},
					"response": []
				},
				{
					"name": "Create a transport zone Profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transportzone-profiles",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transportzone-profiles"
							]
						},
						"description": "Creates a transport zone profile. The resource_type is required.\n"
					},
					"response": []
				},
				{
					"name": "Get transport zone profile by identifier",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transportzone-profiles/:transportzone-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transportzone-profiles",
								":transportzone-profile-id"
							],
							"variable": [
								{
									"key": "transportzone-profile-id",
									"value": "{{transportzone-profile-id}}"
								}
							]
						},
						"description": "Returns information about a specified transport zone profile."
					},
					"response": []
				},
				{
					"name": "Update a transport zone profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transportzone-profiles/:transportzone-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transportzone-profiles",
								":transportzone-profile-id"
							],
							"variable": [
								{
									"key": "transportzone-profile-id",
									"value": "{{transportzone-profile-id}}"
								}
							]
						},
						"description": "Modifies a specified transport zone profile. The body of the PUT request must include the resource_type.\n"
					},
					"response": []
				},
				{
					"name": "Delete a transport zone Profile",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{nsx-manager-fqdn}}/api/v1/transportzone-profiles/:transportzone-profile-id",
							"protocol": "https",
							"host": [
								"{{nsx-manager-fqdn}}"
							],
							"path": [
								"api",
								"v1",
								"transportzone-profiles",
								":transportzone-profile-id"
							],
							"variable": [
								{
									"key": "transportzone-profile-id",
									"value": "{{transportzone-profile-id}}"
								}
							]
						},
						"description": "Deletes a specified transport zone profile."
					},
					"response": []
				}
			],
			"description": "Folder for transportzone-profiles"
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{nsx-manager-password}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{nsx-manager-user}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b904834d-8fe6-4d02-9569-02dd4bf2b737",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "899d8129-35b0-407d-99f5-abb4c12617e6",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}